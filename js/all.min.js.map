{"version":3,"sources":["foundation.abide.js","all.min.js","foundation.accordion.js","foundation.accordionMenu.js","foundation.core.js","foundation.drilldown.js","foundation.dropdown.js","foundation.dropdownMenu.js","foundation.equalizer.js","foundation.interchange.js","foundation.magellan.js","foundation.offcanvas.js","foundation.orbit.js","foundation.responsiveMenu.js","foundation.responsiveToggle.js","foundation.reveal.js","foundation.slider.js","foundation.sticky.js","foundation.tabs.js","foundation.toggler.js","foundation.tooltip.js","foundation.util.box.js","foundation.util.keyboard.js","foundation.util.mediaQuery.js","foundation.util.motion.js","foundation.util.nest.js","foundation.util.timerAndImageLoader.js","foundation.util.touch.js","foundation.util.triggers.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","$","Abide","element","options","arguments","undefined","this","$element","extend","defaults","data","_init","Foundation","registerPlugin","value","$inputs","find","not","_events","_this2","off","on","resetForm","validateForm","validateOn","e","validateInput","liveValidate","$el","attr","isGood","type","checked","opt","val","$error","siblings","formErrorSelector","parent","id","$label","closest","findLabel","$formError","findFormError","addClass","labelErrorClass","formErrorClass","inputErrorClass","removeClass","removeAttr","clearRequire","requiredCheck","validated","customValidator","validator","equalTo","validateRadio","validateText","matchValidation","validators","goodToGo","indexOf","message","trigger","acc","_this","each","push","noError","css","pattern","inputText","patterns","hasOwnProperty","test","RegExp","groupName","$group","counter","rdio","clear","removeErrorClasses","required","_this3","split","map","v","$form","opts","unregisterPlugin","alpha","alpha_numeric","integer","number","card","cvv","email","url","domain","datetime","date","time","dateISO","month_day_year","day_month_year","color","el","plugin","jQuery","Accordion","Keyboard","register","ENTER","SPACE","ARROW_DOWN","ARROW_UP","$tabs","children","idx","$content","GetYoDigits","linkId","aria-controls","role","aria-expanded","aria-selected","aria-labelledby","aria-hidden","$initActive","down","$elem","$tabContent","preventDefault","hasClass","allowAllClosed","up","handleKey","toggle","next","focus","previous","prev","handled","stopPropagation","$target","firstTime","multiExpand","$currentActive","addBack","slideDown","slideSpeed","$aunts","canClose","slideUp","AccordionMenu","Nest","Feather","ARROW_RIGHT","ARROW_LEFT","ESCAPE","TAB","SHIFT_TAB","aria-multiselectable","multiOpen","$menuLinks","$sub","subId","isActive","initPanes","$submenu","$prevElement","$nextElement","$elements","is","eq","Math","max","min","parents","first","open","close","closeAll","hideAll","stopImmediatePropagation","parentsUntil","add","Move","$menus","Burn","functionName","fn","Function","name","funcNameRegex","results","exec","toString","trim","constructor","parseValue","str","isNaN","parseFloat","hyphenate","replace","toLowerCase","FOUNDATION_VERSION","version","_plugins","_uuids","rtl","className","attrName","pluginName","uuid","splice","removeData","prop","reInit","plugins","isJQ","fns","object","plgs","forEach","p","foundation","string","keys","err","console","error","namespace","round","pow","random","slice","reflow","elem","warn","er","getFnName","transitionend","end","transitions","transition","WebkitTransition","MozTransition","OTransition","document","createElement","t","style","setTimeout","triggerHandler","util","throttle","func","delay","timer","context","args","apply","method","$meta","$noJS","appendTo","head","MediaQuery","Array","call","plugClass","ReferenceError","window","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","navigator","userAgent","lastTime","callback","nextTime","clearTimeout","performance","start","bind","oThis","aArgs","fToBind","fNOP","fBound","concat","Drilldown","$submenuAnchors","$submenus","$menuItems","_prepareMenu","_keyboardEvents","$link","parentLink","clone","prependTo","wrap","tabindex","$menu","$back","prepend","backButton","_back","$wrapper","wrapper","_getMaxDims","_show","closeOnClick","$body","_hideAll","filter","_hide","one","blur","result","numOfElems","getBoundingClientRect","height","width","unwrap","remove","Dropdown","$id","$anchor","data-is-focus","data-yeti-box","aria-haspopup","positionClass","getPositionClass","usedPositions","data-resize","position","match","classChanged","$eleDims","Box","GetDimensions","direction","param","vOffset","hOffset","windowDims","ImNotTouchingYou","offset","GetOffsets","_reposition","_setPosition","open.zf.trigger","close.zf.trigger","toggle.zf.trigger","resizeme.zf.trigger","hover","timeout","hoverDelay","hoverPane","visibleFocusableElements","findFocusable","tab_forward","trapFocus","tab_backward","body","autoFocus","$focusable","_addBodyHandler","curPositionClass","hide","DropdownMenu","subs","verticalClass","rightClass","alignment","changed","hasTouch","ontouchstart","parClass","clickOpen","hasSub","hasClicked","forceFollow","disableHover","autoclose","closingTime","isTab","index","nextSibling","prevSibling","openSub","closeSub","functions","vertical","$sibs","oldClass","$parentLi","$toClose","somethingToClose","data-is-click","Equalizer","eqId","$watched","hasNested","isNested","isOn","tooSmall","imgs","equalizeOn","_checkMQ","onImagesLoaded","_reflow","_pauseEvents","atLeast","equalizeOnStack","_isStacked","equalizeByRow","getHeightsByRow","applyHeightByRow","getHeights","applyHeight","offsetTop","cb","heights","len","offsetHeight","lastElTopOffset","top","groups","group","elOffsetTop","j","ln","get","groupsILength","lenJ","Interchange","rules","currentPath","_addBreakpoints","_generateRules","rule","matchMedia","query","matches","path","queries","SPECIAL_QUERIES","rulesList","join","nodeName","load","background-image","response","html","landscape","portrait","retina","Magellan","$targets","$links","data-scroll","$active","scrollPos","parseInt","pageYOffset","documentElement","points","winHeight","innerHeight","clientHeight","docHeight","scrollHeight","$tar","pt","threshold","targetPoint","duration","animationDuration","easing","animationEasing","deepLinking","location","hash","scrollToLoc","calcPoints","_updateActive","scrollme.zf.trigger","arrival","getAttribute","loc","barOffset","stop","animate","scrollTop","curIdx","winPos","isDown","curVisible","activeClass","history","pushState","OffCanvas","$lastTrigger","$exiter","exiter","setAttribute","append","isRevealed","revealClass","revealOn","_setMQChecker","transitionTime","getComputedStyle","transitionDuration","keydown.zf.offcanvas","_handleKeyboard","click.zf.offcanvas","reveal","$closer","show","event","forceTop","_trapFocus","focusable","last","which","keycode","shiftKey","Orbit","ltr","containerClass","$slides","slideClass","$images","initActive","useMUI","_prepareForOrbit","bullets","_loadBullets","autoPlay","geoSync","accessible","$bullets","boxOfBullets","Timer","timerDelay","infinite","changeSlide","_setWrapperHeight","_setSlideHeight","temp","display","swipe","pauseOnHover","pause","navButtons","$controls","nextClass","prevClass","$slide","isLTR","chosenSlide","$curSlide","$newSlide","$firstSlide","$lastSlide","dirIn","dirOut","infiniteWrap","_updateBullets","Motion","animateIn","animateOut","isPaused","restart","$oldBullet","span","detach","animInFromRight","animOutToRight","animInFromLeft","animOutToLeft","ResponsiveMenu","currentMq","currentPlugin","rulesTree","ruleSize","rulePlugin","MenuPlugins","isEmptyObject","_checkMediaQueries","matchedMq","cssClass","destroy","dropdown","drilldown","accordion","ResponsiveToggle","targetID","$targetMenu","$toggler","_update","toggleMenu","hideFor","iPhoneSniff","Reveal","cached","mq","current","isiOS","anchorId","fullScreen","overlay","$overlay","_makeOverlay","deepLink","outerWidth","outerHeight","left","_updatePosition","contains","_handleState","visibility","multipleOpened","animationIn","focusableElements","showDelay","_extraHandlers","closeOnEsc","finishUp","animationOut","hideDelay","resetOnClose","replaceState","title","pathname","btmOffsetPct","percent","frac","num","absPosition","$handle","dir","clickPos","abs","Slider","SHIFT_ARROW_RIGHT","SHIFT_ARROW_UP","SHIFT_ARROW_DOWN","SHIFT_ARROW_LEFT","inputs","handles","$input","$fill","isDbl","disabled","disabledClass","binding","_setInitAttr","doubleSided","$handle2","$input2","_setHandlePos","initialStart","initialEnd","$hndl","noInvert","h2Val","step","h1Val","vert","hOrW","lOrT","handleDim","elemDim","pctOfBar","toFixed","pxToMove","movement","decimal","_setValues","dim","isLeftHndl","handlePct","handlePos","moveTime","aria-valuemax","aria-valuemin","aria-valuenow","aria-orientation","hasVal","_adjustValue","pageXY","pageY","pageX","halfOfHandle","barDim","barXY","offsetPct","firstHndlPos","secndHndlPos","prev_val","next_val","div","curHandle","_handleEvent","clickSelect","draggable","addTouch","currentTarget","newValue","_$handle","oldValue","decrease","increase","decrease_fast","increase_fast","invertVertical","emCalc","em","fontSize","Sticky","$parent","wasWrapped","$container","container","wrapInner","stickyClass","scrollCount","checkEvery","isStuck","anchor","_parsePoints","_setSizes","_calc","reverse","topAnchor","btm","btmAnchor","pts","breaks","place",0,1,"scrollListener","canStick","_pauseListeners","checkSizes","scroll","topPoint","bottomPoint","_setSticky","_removeSticky","stickTo","mrgn","notStuckTo","isTop","stickToTop","anchorPt","anchorHeight","elemHeight","topOrBottom","stickyOn","newElemWidth","comp","pdng","max-width","newContainerHeight","containerHeight","_setBreakPoints","mTop","marginTop","mBtm","marginBottom","bottom","Tabs","$tabTitles","linkClass","matchHeight","_setHeight","_addKeyHandler","_addClickHandler","_handleTabChange","wrapOnKeys","$tabLink","$targetContent","$oldTab","idStr","panelClass","panel","Toggler","input","toggleClass","_updateARIA","Tooltip","isClick","elemId","_getPositionClass","tipText","template","_buildTemplate","text","aria-describedby","data-toggle","triggerClass","templateClasses","tooltipClass","$template","data-is-active","$tipDims","$anchorDims","showOn","fadeIn","fadeInDuration","fadeOut","fadeOutDuration","isFocus","disableForTouch","touchCloseText","lrOnly","tbOnly","right","eleDims","parDims","allDirs","Error","rect","parRect","parentNode","winRect","winY","winX","pageXOffset","parentDims","isOverflow","getKeyCodes","kcs","k","kc","keyCodes",9,13,27,32,37,38,39,40,"commands","parseKey","keyCode","String","fromCharCode","toUpperCase","ctrlKey","altKey","component","cmds","command","commandList","unhandled","componentName","parseStyleToObject","styleObject","reduce","ret","parts","decodeURIComponent","isArray","namedQueries","self","extractedStyles","_getCurrentSize","_watcher","size","matched","newSize","styleMedia","media","script","getElementsByTagName","info","insertBefore","currentStyle","matchMedium","styleSheet","cssText","textContent","move","ts","prog","anim","isIn","animation","finish","reset","initClass","initClasses","activeClasses","offsetWidth","menu","items","subMenuClass","subItemClass","hasSubClass","$item","aria-label","data-submenu","nameSpace","remain","images","singleImageLoaded","unloaded","complete","naturalWidth","onTouchEnd","removeEventListener","onTouchMove","isMoving","spotSwipe","x","touches","dx","startPosX","elapsedTime","startTime","moveThreshold","timeThreshold","onTouchStart","startPosY","addEventListener","init","enabled","special","setup","noop","handleTouch","simulatedEvent","changedTouches","eventTypes","touchstart","touchmove","touchend","MouseEvent","bubbles","cancelable","screenX","screenY","clientX","clientY","createEvent","initMouseEvent","dispatchEvent","checkListeners","eventsListener","resizeListener","closemeListener","yetiBoxes","plugNames","listeners","pluginId","debounce","$nodes","MutationObserver","nodes","querySelectorAll","listeningElementsMutation","mutationRecordsList","elementObserver","observe","attributes","childList","characterData","subtree","attributeFilter","prefixes","triggers","IHearYou"],"mappings":"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","file":"all.min.js","sourcesContent":["'use strict';\n\n!function($) {\n\n/**\n * Abide module.\n * @module foundation.abide\n */\n\nclass Abide {\n  /**\n   * Creates a new instance of Abide.\n   * @class\n   * @fires Abide#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options = {}) {\n    this.$element = element;\n    this.options  = $.extend({}, Abide.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Abide');\n  }\n\n  /**\n   * Initializes the Abide plugin and calls functions to get Abide functioning on load.\n   * @private\n   */\n  _init() {\n    this.$inputs = this.$element.find('input, textarea, select').not('[data-abide-ignore]');\n\n    this._events();\n  }\n\n  /**\n   * Initializes events for Abide.\n   * @private\n   */\n  _events() {\n    this.$element.off('.abide')\n      .on('reset.zf.abide', () => {\n        this.resetForm();\n      })\n      .on('submit.zf.abide', () => {\n        return this.validateForm();\n      });\n\n    if (this.options.validateOn === 'fieldChange') {\n      this.$inputs\n        .off('change.zf.abide')\n        .on('change.zf.abide', (e) => {\n          this.validateInput($(e.target));\n        });\n    }\n\n    if (this.options.liveValidate) {\n      this.$inputs\n        .off('input.zf.abide')\n        .on('input.zf.abide', (e) => {\n          this.validateInput($(e.target));\n        });\n    }\n  }\n\n  /**\n   * Calls necessary functions to update Abide upon DOM change\n   * @private\n   */\n  _reflow() {\n    this._init();\n  }\n\n  /**\n   * Checks whether or not a form element has the required attribute and if it's checked or not\n   * @param {Object} element - jQuery object to check for required attribute\n   * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n   */\n  requiredCheck($el) {\n    if (!$el.attr('required')) return true;\n\n    var isGood = true;\n\n    switch ($el[0].type) {\n      case 'checkbox':\n      case 'radio':\n        isGood = $el[0].checked;\n        break;\n\n      case 'select':\n      case 'select-one':\n      case 'select-multiple':\n        var opt = $el.find('option:selected');\n        if (!opt.length || !opt.val()) isGood = false;\n        break;\n\n      default:\n        if(!$el.val() || !$el.val().length) isGood = false;\n    }\n\n    return isGood;\n  }\n\n  /**\n   * Based on $el, get the first element with selector in this order:\n   * 1. The element's direct sibling('s).\n   * 3. The element's parent's children.\n   *\n   * This allows for multiple form errors per input, though if none are found, no form errors will be shown.\n   *\n   * @param {Object} $el - jQuery object to use as reference to find the form error selector.\n   * @returns {Object} jQuery object with the selector.\n   */\n  findFormError($el) {\n    var $error = $el.siblings(this.options.formErrorSelector);\n\n    if (!$error.length) {\n      $error = $el.parent().find(this.options.formErrorSelector);\n    }\n\n    return $error;\n  }\n\n  /**\n   * Get the first element in this order:\n   * 2. The <label> with the attribute `[for=\"someInputId\"]`\n   * 3. The `.closest()` <label>\n   *\n   * @param {Object} $el - jQuery object to check for required attribute\n   * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n   */\n  findLabel($el) {\n    var id = $el[0].id;\n    var $label = this.$element.find(`label[for=\"${id}\"]`);\n\n    if (!$label.length) {\n      return $el.closest('label');\n    }\n\n    return $label;\n  }\n\n  /**\n   * Adds the CSS error class as specified by the Abide settings to the label, input, and the form\n   * @param {Object} $el - jQuery object to add the class to\n   */\n  addErrorClasses($el) {\n    var $label = this.findLabel($el);\n    var $formError = this.findFormError($el);\n\n    if ($label.length) {\n      $label.addClass(this.options.labelErrorClass);\n    }\n\n    if ($formError.length) {\n      $formError.addClass(this.options.formErrorClass);\n    }\n\n    $el.addClass(this.options.inputErrorClass).attr('data-invalid', '');\n  }\n\n  /**\n   * Removes CSS error class as specified by the Abide settings from the label, input, and the form\n   * @param {Object} $el - jQuery object to remove the class from\n   */\n  removeErrorClasses($el) {\n    var $label = this.findLabel($el);\n    var $formError = this.findFormError($el);\n\n    if ($label.length) {\n      $label.removeClass(this.options.labelErrorClass);\n    }\n\n    if ($formError.length) {\n      $formError.removeClass(this.options.formErrorClass);\n    }\n\n    $el.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\n  }\n\n  /**\n   * Goes through a form to find inputs and proceeds to validate them in ways specific to their type\n   * @fires Abide#invalid\n   * @fires Abide#valid\n   * @param {Object} element - jQuery object to validate, should be an HTML input\n   * @returns {Boolean} goodToGo - If the input is valid or not.\n   */\n  validateInput($el) {\n    var clearRequire = this.requiredCheck($el),\n        validated = false,\n        customValidator = true,\n        validator = $el.attr('data-validator'),\n        equalTo = true;\n\n    switch ($el[0].type) {\n      case 'radio':\n        validated = this.validateRadio($el.attr('name'));\n        break;\n\n      case 'checkbox':\n        validated = clearRequire;\n        break;\n\n      case 'select':\n      case 'select-one':\n      case 'select-multiple':\n        validated = clearRequire;\n        break;\n\n      default:\n        validated = this.validateText($el);\n    }\n\n    if (validator) {\n      customValidator = this.matchValidation($el, validator, $el.attr('required'));\n    }\n\n    if ($el.attr('data-equalto')) {\n      equalTo = this.options.validators.equalTo($el);\n    }\n\n    var goodToGo = [clearRequire, validated, customValidator, equalTo].indexOf(false) === -1;\n    var message = (goodToGo ? 'valid' : 'invalid') + '.zf.abide';\n\n    this[goodToGo ? 'removeErrorClasses' : 'addErrorClasses']($el);\n\n    /**\n     * Fires when the input is done checking for validation. Event trigger is either `valid.zf.abide` or `invalid.zf.abide`\n     * Trigger includes the DOM element of the input.\n     * @event Abide#valid\n     * @event Abide#invalid\n     */\n    $el.trigger(message, [$el]);\n\n    return goodToGo;\n  }\n\n  /**\n   * Goes through a form and if there are any invalid inputs, it will display the form error element\n   * @returns {Boolean} noError - true if no errors were detected...\n   * @fires Abide#formvalid\n   * @fires Abide#forminvalid\n   */\n  validateForm() {\n    var acc = [];\n    var _this = this;\n\n    this.$inputs.each(function() {\n      acc.push(_this.validateInput($(this)));\n    });\n\n    var noError = acc.indexOf(false) === -1;\n\n    this.$element.find('[data-abide-error]').css('display', (noError ? 'none' : 'block'));\n\n    /**\n     * Fires when the form is finished validating. Event trigger is either `formvalid.zf.abide` or `forminvalid.zf.abide`.\n     * Trigger includes the element of the form.\n     * @event Abide#formvalid\n     * @event Abide#forminvalid\n     */\n    this.$element.trigger((noError ? 'formvalid' : 'forminvalid') + '.zf.abide', [this.$element]);\n\n    return noError;\n  }\n\n  /**\n   * Determines whether or a not a text input is valid based on the pattern specified in the attribute. If no matching pattern is found, returns true.\n   * @param {Object} $el - jQuery object to validate, should be a text input HTML element\n   * @param {String} pattern - string value of one of the RegEx patterns in Abide.options.patterns\n   * @returns {Boolean} Boolean value depends on whether or not the input value matches the pattern specified\n   */\n  validateText($el, pattern) {\n    // pattern = pattern ? pattern : $el.attr('pattern') ? $el.attr('pattern') : $el.attr('type');\n    pattern = (pattern || $el.attr('pattern') || $el.attr('type'));\n    var inputText = $el.val();\n\n    // if text, check if the pattern exists, if so, test it, if no text or no pattern, return true.\n    return inputText.length ?\n      this.options.patterns.hasOwnProperty(pattern) ? this.options.patterns[pattern].test(inputText) :\n        pattern && pattern !== $el.attr('type') ?\n          new RegExp(pattern).test(inputText) :\n        true :\n      true;\n   }\n\n  /**\n   * Determines whether or a not a radio input is valid based on whether or not it is required and selected\n   * @param {String} groupName - A string that specifies the name of a radio button group\n   * @returns {Boolean} Boolean value depends on whether or not at least one radio input has been selected (if it's required)\n   */\n  validateRadio(groupName) {\n    var $group = this.$element.find(`:radio[name=\"${groupName}\"]`),\n        counter = [],\n        _this = this;\n\n    $group.each(function(){\n      var rdio = $(this),\n          clear = _this.requiredCheck(rdio);\n      counter.push(clear);\n      if(clear) _this.removeErrorClasses(rdio);\n    });\n\n    return counter.indexOf(false) === -1;\n  }\n\n  /**\n   * Determines if a selected input passes a custom validation function. Multiple validations can be used, if passed to the element with `data-validator=\"foo bar baz\"` in a space separated listed.\n   * @param {Object} $el - jQuery input element.\n   * @param {String} validators - a string of function names matching functions in the Abide.options.validators object.\n   * @param {Boolean} required - self explanatory?\n   * @returns {Boolean} - true if validations passed.\n   */\n  matchValidation($el, validators, required) {\n    required = required ? true : false;\n\n    var clear = validators.split(' ').map((v) => {\n      return this.options.validators[v]($el, required, $el.parent());\n    });\n    return clear.indexOf(false) === -1;\n  }\n\n  /**\n   * Resets form inputs and styles\n   * @fires Abide#formreset\n   */\n  resetForm() {\n    var $form = this.$element,\n        opts = this.options;\n\n    $(`.${opts.labelErrorClass}`, $form).not('small').removeClass(opts.labelErrorClass);\n    $(`.${opts.inputErrorClass}`, $form).not('small').removeClass(opts.inputErrorClass);\n    $(`${opts.formErrorSelector}.${opts.formErrorClass}`).removeClass(opts.formErrorClass);\n    $form.find('[data-abide-error]').css('display', 'none');\n    $(':input', $form).not(':button, :submit, :reset, :hidden, [data-abide-ignore]').val('').removeAttr('data-invalid');\n    /**\n     * Fires when the form has been reset.\n     * @event Abide#formreset\n     */\n    $form.trigger('formreset.zf.abide', [$form]);\n  }\n\n  /**\n   * Destroys an instance of Abide.\n   * Removes error styles and classes from elements, without resetting their values.\n   */\n  destroy() {\n    var _this = this;\n    this.$element\n      .off('.abide')\n      .find('[data-abide-error]')\n        .css('display', 'none');\n\n    this.$inputs\n      .off('.abide')\n      .each(function() {\n        _this.removeErrorClasses($(this));\n      });\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\n/**\n * Default settings for plugin\n */\nAbide.defaults = {\n  /**\n   * The default event to validate inputs. Checkboxes and radios validate immediately.\n   * Remove or change this value for manual validation.\n   * @option\n   * @example 'fieldChange'\n   */\n  validateOn: 'fieldChange',\n\n  /**\n   * Class to be applied to input labels on failed validation.\n   * @option\n   * @example 'is-invalid-label'\n   */\n  labelErrorClass: 'is-invalid-label',\n\n  /**\n   * Class to be applied to inputs on failed validation.\n   * @option\n   * @example 'is-invalid-input'\n   */\n  inputErrorClass: 'is-invalid-input',\n\n  /**\n   * Class selector to use to target Form Errors for show/hide.\n   * @option\n   * @example '.form-error'\n   */\n  formErrorSelector: '.form-error',\n\n  /**\n   * Class added to Form Errors on failed validation.\n   * @option\n   * @example 'is-visible'\n   */\n  formErrorClass: 'is-visible',\n\n  /**\n   * Set to true to validate text inputs on any value change.\n   * @option\n   * @example false\n   */\n  liveValidate: false,\n\n  patterns: {\n    alpha : /^[a-zA-Z]+$/,\n    alpha_numeric : /^[a-zA-Z0-9]+$/,\n    integer : /^[-+]?\\d+$/,\n    number : /^[-+]?\\d*(?:[\\.\\,]\\d+)?$/,\n\n    // amex, visa, diners\n    card : /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n    cvv : /^([0-9]){3,4}$/,\n\n    // http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address\n    email : /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/,\n\n    url : /^(https?|ftp|file|ssh):\\/\\/(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/,\n    // abc.de\n    domain : /^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,8}$/,\n\n    datetime : /^([0-2][0-9]{3})\\-([0-1][0-9])\\-([0-3][0-9])T([0-5][0-9])\\:([0-5][0-9])\\:([0-5][0-9])(Z|([\\-\\+]([0-1][0-9])\\:00))$/,\n    // YYYY-MM-DD\n    date : /(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))$/,\n    // HH:MM:SS\n    time : /^(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}$/,\n    dateISO : /^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}$/,\n    // MM/DD/YYYY\n    month_day_year : /^(0[1-9]|1[012])[- \\/.](0[1-9]|[12][0-9]|3[01])[- \\/.]\\d{4}$/,\n    // DD/MM/YYYY\n    day_month_year : /^(0[1-9]|[12][0-9]|3[01])[- \\/.](0[1-9]|1[012])[- \\/.]\\d{4}$/,\n\n    // #FFF or #FFFFFF\n    color : /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/\n  },\n\n  /**\n   * Optional validation functions to be used. `equalTo` being the only default included function.\n   * Functions should return only a boolean if the input is valid or not. Functions are given the following arguments:\n   * el : The jQuery element to validate.\n   * required : Boolean value of the required attribute be present or not.\n   * parent : The direct parent of the input.\n   * @option\n   */\n  validators: {\n    equalTo: function (el, required, parent) {\n      return $(`#${el.attr('data-equalto')}`).val() === el.val();\n    }\n  }\n}\n\n// Window exports\nFoundation.plugin(Abide, 'Abide');\n\n}(jQuery);\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Abide module.\n   * @module foundation.abide\n   */\n\n  var Abide = function () {\n    /**\n     * Creates a new instance of Abide.\n     * @class\n     * @fires Abide#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Abide(element) {\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      _classCallCheck(this, Abide);\n\n      this.$element = element;\n      this.options = $.extend({}, Abide.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Abide');\n    }\n\n    /**\n     * Initializes the Abide plugin and calls functions to get Abide functioning on load.\n     * @private\n     */\n\n\n    _createClass(Abide, [{\n      key: '_init',\n      value: function _init() {\n        this.$inputs = this.$element.find('input, textarea, select').not('[data-abide-ignore]');\n\n        this._events();\n      }\n\n      /**\n       * Initializes events for Abide.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this2 = this;\n\n        this.$element.off('.abide').on('reset.zf.abide', function () {\n          _this2.resetForm();\n        }).on('submit.zf.abide', function () {\n          return _this2.validateForm();\n        });\n\n        if (this.options.validateOn === 'fieldChange') {\n          this.$inputs.off('change.zf.abide').on('change.zf.abide', function (e) {\n            _this2.validateInput($(e.target));\n          });\n        }\n\n        if (this.options.liveValidate) {\n          this.$inputs.off('input.zf.abide').on('input.zf.abide', function (e) {\n            _this2.validateInput($(e.target));\n          });\n        }\n      }\n\n      /**\n       * Calls necessary functions to update Abide upon DOM change\n       * @private\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        this._init();\n      }\n\n      /**\n       * Checks whether or not a form element has the required attribute and if it's checked or not\n       * @param {Object} element - jQuery object to check for required attribute\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n       */\n\n    }, {\n      key: 'requiredCheck',\n      value: function requiredCheck($el) {\n        if (!$el.attr('required')) return true;\n\n        var isGood = true;\n\n        switch ($el[0].type) {\n          case 'checkbox':\n          case 'radio':\n            isGood = $el[0].checked;\n            break;\n\n          case 'select':\n          case 'select-one':\n          case 'select-multiple':\n            var opt = $el.find('option:selected');\n            if (!opt.length || !opt.val()) isGood = false;\n            break;\n\n          default:\n            if (!$el.val() || !$el.val().length) isGood = false;\n        }\n\n        return isGood;\n      }\n\n      /**\n       * Based on $el, get the first element with selector in this order:\n       * 1. The element's direct sibling('s).\n       * 3. The element's parent's children.\n       *\n       * This allows for multiple form errors per input, though if none are found, no form errors will be shown.\n       *\n       * @param {Object} $el - jQuery object to use as reference to find the form error selector.\n       * @returns {Object} jQuery object with the selector.\n       */\n\n    }, {\n      key: 'findFormError',\n      value: function findFormError($el) {\n        var $error = $el.siblings(this.options.formErrorSelector);\n\n        if (!$error.length) {\n          $error = $el.parent().find(this.options.formErrorSelector);\n        }\n\n        return $error;\n      }\n\n      /**\n       * Get the first element in this order:\n       * 2. The <label> with the attribute `[for=\"someInputId\"]`\n       * 3. The `.closest()` <label>\n       *\n       * @param {Object} $el - jQuery object to check for required attribute\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n       */\n\n    }, {\n      key: 'findLabel',\n      value: function findLabel($el) {\n        var id = $el[0].id;\n        var $label = this.$element.find('label[for=\"' + id + '\"]');\n\n        if (!$label.length) {\n          return $el.closest('label');\n        }\n\n        return $label;\n      }\n\n      /**\n       * Adds the CSS error class as specified by the Abide settings to the label, input, and the form\n       * @param {Object} $el - jQuery object to add the class to\n       */\n\n    }, {\n      key: 'addErrorClasses',\n      value: function addErrorClasses($el) {\n        var $label = this.findLabel($el);\n        var $formError = this.findFormError($el);\n\n        if ($label.length) {\n          $label.addClass(this.options.labelErrorClass);\n        }\n\n        if ($formError.length) {\n          $formError.addClass(this.options.formErrorClass);\n        }\n\n        $el.addClass(this.options.inputErrorClass).attr('data-invalid', '');\n      }\n\n      /**\n       * Removes CSS error class as specified by the Abide settings from the label, input, and the form\n       * @param {Object} $el - jQuery object to remove the class from\n       */\n\n    }, {\n      key: 'removeErrorClasses',\n      value: function removeErrorClasses($el) {\n        var $label = this.findLabel($el);\n        var $formError = this.findFormError($el);\n\n        if ($label.length) {\n          $label.removeClass(this.options.labelErrorClass);\n        }\n\n        if ($formError.length) {\n          $formError.removeClass(this.options.formErrorClass);\n        }\n\n        $el.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\n      }\n\n      /**\n       * Goes through a form to find inputs and proceeds to validate them in ways specific to their type\n       * @fires Abide#invalid\n       * @fires Abide#valid\n       * @param {Object} element - jQuery object to validate, should be an HTML input\n       * @returns {Boolean} goodToGo - If the input is valid or not.\n       */\n\n    }, {\n      key: 'validateInput',\n      value: function validateInput($el) {\n        var clearRequire = this.requiredCheck($el),\n            validated = false,\n            customValidator = true,\n            validator = $el.attr('data-validator'),\n            equalTo = true;\n\n        switch ($el[0].type) {\n          case 'radio':\n            validated = this.validateRadio($el.attr('name'));\n            break;\n\n          case 'checkbox':\n            validated = clearRequire;\n            break;\n\n          case 'select':\n          case 'select-one':\n          case 'select-multiple':\n            validated = clearRequire;\n            break;\n\n          default:\n            validated = this.validateText($el);\n        }\n\n        if (validator) {\n          customValidator = this.matchValidation($el, validator, $el.attr('required'));\n        }\n\n        if ($el.attr('data-equalto')) {\n          equalTo = this.options.validators.equalTo($el);\n        }\n\n        var goodToGo = [clearRequire, validated, customValidator, equalTo].indexOf(false) === -1;\n        var message = (goodToGo ? 'valid' : 'invalid') + '.zf.abide';\n\n        this[goodToGo ? 'removeErrorClasses' : 'addErrorClasses']($el);\n\n        /**\n         * Fires when the input is done checking for validation. Event trigger is either `valid.zf.abide` or `invalid.zf.abide`\n         * Trigger includes the DOM element of the input.\n         * @event Abide#valid\n         * @event Abide#invalid\n         */\n        $el.trigger(message, [$el]);\n\n        return goodToGo;\n      }\n\n      /**\n       * Goes through a form and if there are any invalid inputs, it will display the form error element\n       * @returns {Boolean} noError - true if no errors were detected...\n       * @fires Abide#formvalid\n       * @fires Abide#forminvalid\n       */\n\n    }, {\n      key: 'validateForm',\n      value: function validateForm() {\n        var acc = [];\n        var _this = this;\n\n        this.$inputs.each(function () {\n          acc.push(_this.validateInput($(this)));\n        });\n\n        var noError = acc.indexOf(false) === -1;\n\n        this.$element.find('[data-abide-error]').css('display', noError ? 'none' : 'block');\n\n        /**\n         * Fires when the form is finished validating. Event trigger is either `formvalid.zf.abide` or `forminvalid.zf.abide`.\n         * Trigger includes the element of the form.\n         * @event Abide#formvalid\n         * @event Abide#forminvalid\n         */\n        this.$element.trigger((noError ? 'formvalid' : 'forminvalid') + '.zf.abide', [this.$element]);\n\n        return noError;\n      }\n\n      /**\n       * Determines whether or a not a text input is valid based on the pattern specified in the attribute. If no matching pattern is found, returns true.\n       * @param {Object} $el - jQuery object to validate, should be a text input HTML element\n       * @param {String} pattern - string value of one of the RegEx patterns in Abide.options.patterns\n       * @returns {Boolean} Boolean value depends on whether or not the input value matches the pattern specified\n       */\n\n    }, {\n      key: 'validateText',\n      value: function validateText($el, pattern) {\n        // pattern = pattern ? pattern : $el.attr('pattern') ? $el.attr('pattern') : $el.attr('type');\n        pattern = pattern || $el.attr('pattern') || $el.attr('type');\n        var inputText = $el.val();\n\n        // if text, check if the pattern exists, if so, test it, if no text or no pattern, return true.\n        return inputText.length ? this.options.patterns.hasOwnProperty(pattern) ? this.options.patterns[pattern].test(inputText) : pattern && pattern !== $el.attr('type') ? new RegExp(pattern).test(inputText) : true : true;\n      }\n\n      /**\n       * Determines whether or a not a radio input is valid based on whether or not it is required and selected\n       * @param {String} groupName - A string that specifies the name of a radio button group\n       * @returns {Boolean} Boolean value depends on whether or not at least one radio input has been selected (if it's required)\n       */\n\n    }, {\n      key: 'validateRadio',\n      value: function validateRadio(groupName) {\n        var $group = this.$element.find(':radio[name=\"' + groupName + '\"]'),\n            counter = [],\n            _this = this;\n\n        $group.each(function () {\n          var rdio = $(this),\n              clear = _this.requiredCheck(rdio);\n          counter.push(clear);\n          if (clear) _this.removeErrorClasses(rdio);\n        });\n\n        return counter.indexOf(false) === -1;\n      }\n\n      /**\n       * Determines if a selected input passes a custom validation function. Multiple validations can be used, if passed to the element with `data-validator=\"foo bar baz\"` in a space separated listed.\n       * @param {Object} $el - jQuery input element.\n       * @param {String} validators - a string of function names matching functions in the Abide.options.validators object.\n       * @param {Boolean} required - self explanatory?\n       * @returns {Boolean} - true if validations passed.\n       */\n\n    }, {\n      key: 'matchValidation',\n      value: function matchValidation($el, validators, required) {\n        var _this3 = this;\n\n        required = required ? true : false;\n\n        var clear = validators.split(' ').map(function (v) {\n          return _this3.options.validators[v]($el, required, $el.parent());\n        });\n        return clear.indexOf(false) === -1;\n      }\n\n      /**\n       * Resets form inputs and styles\n       * @fires Abide#formreset\n       */\n\n    }, {\n      key: 'resetForm',\n      value: function resetForm() {\n        var $form = this.$element,\n            opts = this.options;\n\n        $('.' + opts.labelErrorClass, $form).not('small').removeClass(opts.labelErrorClass);\n        $('.' + opts.inputErrorClass, $form).not('small').removeClass(opts.inputErrorClass);\n        $(opts.formErrorSelector + '.' + opts.formErrorClass).removeClass(opts.formErrorClass);\n        $form.find('[data-abide-error]').css('display', 'none');\n        $(':input', $form).not(':button, :submit, :reset, :hidden, [data-abide-ignore]').val('').removeAttr('data-invalid');\n        /**\n         * Fires when the form has been reset.\n         * @event Abide#formreset\n         */\n        $form.trigger('formreset.zf.abide', [$form]);\n      }\n\n      /**\n       * Destroys an instance of Abide.\n       * Removes error styles and classes from elements, without resetting their values.\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        var _this = this;\n        this.$element.off('.abide').find('[data-abide-error]').css('display', 'none');\n\n        this.$inputs.off('.abide').each(function () {\n          _this.removeErrorClasses($(this));\n        });\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Abide;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Abide.defaults = {\n    /**\n     * The default event to validate inputs. Checkboxes and radios validate immediately.\n     * Remove or change this value for manual validation.\n     * @option\n     * @example 'fieldChange'\n     */\n    validateOn: 'fieldChange',\n\n    /**\n     * Class to be applied to input labels on failed validation.\n     * @option\n     * @example 'is-invalid-label'\n     */\n    labelErrorClass: 'is-invalid-label',\n\n    /**\n     * Class to be applied to inputs on failed validation.\n     * @option\n     * @example 'is-invalid-input'\n     */\n    inputErrorClass: 'is-invalid-input',\n\n    /**\n     * Class selector to use to target Form Errors for show/hide.\n     * @option\n     * @example '.form-error'\n     */\n    formErrorSelector: '.form-error',\n\n    /**\n     * Class added to Form Errors on failed validation.\n     * @option\n     * @example 'is-visible'\n     */\n    formErrorClass: 'is-visible',\n\n    /**\n     * Set to true to validate text inputs on any value change.\n     * @option\n     * @example false\n     */\n    liveValidate: false,\n\n    patterns: {\n      alpha: /^[a-zA-Z]+$/,\n      alpha_numeric: /^[a-zA-Z0-9]+$/,\n      integer: /^[-+]?\\d+$/,\n      number: /^[-+]?\\d*(?:[\\.\\,]\\d+)?$/,\n\n      // amex, visa, diners\n      card: /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n      cvv: /^([0-9]){3,4}$/,\n\n      // http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address\n      email: /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/,\n\n      url: /^(https?|ftp|file|ssh):\\/\\/(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/,\n      // abc.de\n      domain: /^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,8}$/,\n\n      datetime: /^([0-2][0-9]{3})\\-([0-1][0-9])\\-([0-3][0-9])T([0-5][0-9])\\:([0-5][0-9])\\:([0-5][0-9])(Z|([\\-\\+]([0-1][0-9])\\:00))$/,\n      // YYYY-MM-DD\n      date: /(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))$/,\n      // HH:MM:SS\n      time: /^(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}$/,\n      dateISO: /^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}$/,\n      // MM/DD/YYYY\n      month_day_year: /^(0[1-9]|1[012])[- \\/.](0[1-9]|[12][0-9]|3[01])[- \\/.]\\d{4}$/,\n      // DD/MM/YYYY\n      day_month_year: /^(0[1-9]|[12][0-9]|3[01])[- \\/.](0[1-9]|1[012])[- \\/.]\\d{4}$/,\n\n      // #FFF or #FFFFFF\n      color: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/\n    },\n\n    /**\n     * Optional validation functions to be used. `equalTo` being the only default included function.\n     * Functions should return only a boolean if the input is valid or not. Functions are given the following arguments:\n     * el : The jQuery element to validate.\n     * required : Boolean value of the required attribute be present or not.\n     * parent : The direct parent of the input.\n     * @option\n     */\n    validators: {\n      equalTo: function (el, required, parent) {\n        return $('#' + el.attr('data-equalto')).val() === el.val();\n      }\n    }\n  };\n\n  // Window exports\n  Foundation.plugin(Abide, 'Abide');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Accordion module.\n   * @module foundation.accordion\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   */\n\n  var Accordion = function () {\n    /**\n     * Creates a new instance of an accordion.\n     * @class\n     * @fires Accordion#init\n     * @param {jQuery} element - jQuery object to make into an accordion.\n     * @param {Object} options - a plain object with settings to override the default options.\n     */\n\n    function Accordion(element, options) {\n      _classCallCheck(this, Accordion);\n\n      this.$element = element;\n      this.options = $.extend({}, Accordion.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Accordion');\n      Foundation.Keyboard.register('Accordion', {\n        'ENTER': 'toggle',\n        'SPACE': 'toggle',\n        'ARROW_DOWN': 'next',\n        'ARROW_UP': 'previous'\n      });\n    }\n\n    /**\n     * Initializes the accordion by animating the preset active pane(s).\n     * @private\n     */\n\n\n    _createClass(Accordion, [{\n      key: '_init',\n      value: function _init() {\n        this.$element.attr('role', 'tablist');\n        this.$tabs = this.$element.children('li');\n        if (this.$tabs.length === 0) {\n          this.$tabs = this.$element.children('[data-accordion-item]');\n        }\n        this.$tabs.each(function (idx, el) {\n\n          var $el = $(el),\n              $content = $el.find('[data-tab-content]'),\n              id = $content[0].id || Foundation.GetYoDigits(6, 'accordion'),\n              linkId = el.id || id + '-label';\n\n          $el.find('a:first').attr({\n            'aria-controls': id,\n            'role': 'tab',\n            'id': linkId,\n            'aria-expanded': false,\n            'aria-selected': false\n          });\n          $content.attr({ 'role': 'tabpanel', 'aria-labelledby': linkId, 'aria-hidden': true, 'id': id });\n        });\n        var $initActive = this.$element.find('.is-active').children('[data-tab-content]');\n        if ($initActive.length) {\n          this.down($initActive, true);\n        }\n        this._events();\n      }\n\n      /**\n       * Adds event handlers for items within the accordion.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this.$tabs.each(function () {\n          var $elem = $(this);\n          var $tabContent = $elem.children('[data-tab-content]');\n          if ($tabContent.length) {\n            $elem.children('a').off('click.zf.accordion keydown.zf.accordion').on('click.zf.accordion', function (e) {\n              // $(this).children('a').on('click.zf.accordion', function(e) {\n              e.preventDefault();\n              if ($elem.hasClass('is-active')) {\n                if (_this.options.allowAllClosed || $elem.siblings().hasClass('is-active')) {\n                  _this.up($tabContent);\n                }\n              } else {\n                _this.down($tabContent);\n              }\n            }).on('keydown.zf.accordion', function (e) {\n              Foundation.Keyboard.handleKey(e, 'Accordion', {\n                toggle: function () {\n                  _this.toggle($tabContent);\n                },\n                next: function () {\n                  $elem.next().find('a').focus().trigger('click.zf.accordion');\n                },\n                previous: function () {\n                  $elem.prev().find('a').focus().trigger('click.zf.accordion');\n                },\n                handled: function () {\n                  e.preventDefault();\n                  e.stopPropagation();\n                }\n              });\n            });\n          }\n        });\n      }\n\n      /**\n       * Toggles the selected content pane's open/close state.\n       * @param {jQuery} $target - jQuery object of the pane to toggle.\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle($target) {\n        if ($target.parent().hasClass('is-active')) {\n          if (this.options.allowAllClosed || $target.parent().siblings().hasClass('is-active')) {\n            this.up($target);\n          } else {\n            return;\n          }\n        } else {\n          this.down($target);\n        }\n      }\n\n      /**\n       * Opens the accordion tab defined by `$target`.\n       * @param {jQuery} $target - Accordion pane to open.\n       * @param {Boolean} firstTime - flag to determine if reflow should happen.\n       * @fires Accordion#down\n       * @function\n       */\n\n    }, {\n      key: 'down',\n      value: function down($target, firstTime) {\n        var _this = this;\n        if (!this.options.multiExpand && !firstTime) {\n          var $currentActive = this.$element.find('.is-active').children('[data-tab-content]');\n          if ($currentActive.length) {\n            this.up($currentActive);\n          }\n        }\n\n        $target.attr('aria-hidden', false).parent('[data-tab-content]').addBack().parent().addClass('is-active');\n\n        // Foundation.Move(_this.options.slideSpeed, $target, function(){\n        $target.slideDown(_this.options.slideSpeed, function () {\n          /**\n           * Fires when the tab is done opening.\n           * @event Accordion#down\n           */\n          _this.$element.trigger('down.zf.accordion', [$target]);\n        });\n        // });\n\n        // if(!firstTime){\n        //   Foundation._reflow(this.$element.attr('data-accordion'));\n        // }\n        $('#' + $target.attr('aria-labelledby')).attr({\n          'aria-expanded': true,\n          'aria-selected': true\n        });\n      }\n\n      /**\n       * Closes the tab defined by `$target`.\n       * @param {jQuery} $target - Accordion tab to close.\n       * @fires Accordion#up\n       * @function\n       */\n\n    }, {\n      key: 'up',\n      value: function up($target) {\n        var $aunts = $target.parent().siblings(),\n            _this = this;\n        var canClose = this.options.multiExpand ? $aunts.hasClass('is-active') : $target.parent().hasClass('is-active');\n\n        if (!this.options.allowAllClosed && !canClose) {\n          return;\n        }\n\n        // Foundation.Move(this.options.slideSpeed, $target, function(){\n        $target.slideUp(_this.options.slideSpeed, function () {\n          /**\n           * Fires when the tab is done collapsing up.\n           * @event Accordion#up\n           */\n          _this.$element.trigger('up.zf.accordion', [$target]);\n        });\n        // });\n\n        $target.attr('aria-hidden', true).parent().removeClass('is-active');\n\n        $('#' + $target.attr('aria-labelledby')).attr({\n          'aria-expanded': false,\n          'aria-selected': false\n        });\n      }\n\n      /**\n       * Destroys an instance of an accordion.\n       * @fires Accordion#destroyed\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('[data-tab-content]').slideUp(0).css('display', '');\n        this.$element.find('a').off('.zf.accordion');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Accordion;\n  }();\n\n  Accordion.defaults = {\n    /**\n     * Amount of time to animate the opening of an accordion pane.\n     * @option\n     * @example 250\n     */\n    slideSpeed: 250,\n    /**\n     * Allow the accordion to have multiple open panes.\n     * @option\n     * @example false\n     */\n    multiExpand: false,\n    /**\n     * Allow the accordion to close all panes.\n     * @option\n     * @example false\n     */\n    allowAllClosed: false\n  };\n\n  // Window exports\n  Foundation.plugin(Accordion, 'Accordion');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * AccordionMenu module.\n   * @module foundation.accordionMenu\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   * @requires foundation.util.nest\n   */\n\n  var AccordionMenu = function () {\n    /**\n     * Creates a new instance of an accordion menu.\n     * @class\n     * @fires AccordionMenu#init\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function AccordionMenu(element, options) {\n      _classCallCheck(this, AccordionMenu);\n\n      this.$element = element;\n      this.options = $.extend({}, AccordionMenu.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'accordion');\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'AccordionMenu');\n      Foundation.Keyboard.register('AccordionMenu', {\n        'ENTER': 'toggle',\n        'SPACE': 'toggle',\n        'ARROW_RIGHT': 'open',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'close',\n        'ESCAPE': 'closeAll',\n        'TAB': 'down',\n        'SHIFT_TAB': 'up'\n      });\n    }\n\n    /**\n     * Initializes the accordion menu by hiding all nested menus.\n     * @private\n     */\n\n\n    _createClass(AccordionMenu, [{\n      key: '_init',\n      value: function _init() {\n        this.$element.find('[data-submenu]').not('.is-active').slideUp(0); //.find('a').css('padding-left', '1rem');\n        this.$element.attr({\n          'role': 'tablist',\n          'aria-multiselectable': this.options.multiOpen\n        });\n\n        this.$menuLinks = this.$element.find('.is-accordion-submenu-parent');\n        this.$menuLinks.each(function () {\n          var linkId = this.id || Foundation.GetYoDigits(6, 'acc-menu-link'),\n              $elem = $(this),\n              $sub = $elem.children('[data-submenu]'),\n              subId = $sub[0].id || Foundation.GetYoDigits(6, 'acc-menu'),\n              isActive = $sub.hasClass('is-active');\n          $elem.attr({\n            'aria-controls': subId,\n            'aria-expanded': isActive,\n            'role': 'tab',\n            'id': linkId\n          });\n          $sub.attr({\n            'aria-labelledby': linkId,\n            'aria-hidden': !isActive,\n            'role': 'tabpanel',\n            'id': subId\n          });\n        });\n        var initPanes = this.$element.find('.is-active');\n        if (initPanes.length) {\n          var _this = this;\n          initPanes.each(function () {\n            _this.down($(this));\n          });\n        }\n        this._events();\n      }\n\n      /**\n       * Adds event handlers for items within the menu.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this.$element.find('li').each(function () {\n          var $submenu = $(this).children('[data-submenu]');\n\n          if ($submenu.length) {\n            $(this).children('a').off('click.zf.accordionMenu').on('click.zf.accordionMenu', function (e) {\n              e.preventDefault();\n\n              _this.toggle($submenu);\n            });\n          }\n        }).on('keydown.zf.accordionmenu', function (e) {\n          var $element = $(this),\n              $elements = $element.parent('ul').children('li'),\n              $prevElement,\n              $nextElement,\n              $target = $element.children('[data-submenu]');\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(Math.max(0, i - 1));\n              $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\n\n              if ($(this).children('[data-submenu]:visible').length) {\n                // has open sub menu\n                $nextElement = $element.find('li:first-child');\n              }\n              if ($(this).is(':first-child')) {\n                // is first element of sub menu\n                $prevElement = $element.parents('li').first();\n              } else if ($prevElement.children('[data-submenu]:visible').length) {\n                // if previous element has open sub menu\n                $prevElement = $prevElement.find('li:last-child');\n              }\n              if ($(this).is(':last-child')) {\n                // is last element of sub menu\n                $nextElement = $element.parents('li').first().next('li');\n              }\n\n              return;\n            }\n          });\n          Foundation.Keyboard.handleKey(e, 'AccordionMenu', {\n            open: function () {\n              if ($target.is(':hidden')) {\n                _this.down($target);\n                $target.find('li').first().focus();\n              }\n            },\n            close: function () {\n              if ($target.length && !$target.is(':hidden')) {\n                // close active sub of this item\n                _this.up($target);\n              } else if ($element.parent('[data-submenu]').length) {\n                // close currently open sub\n                _this.up($element.parent('[data-submenu]'));\n                $element.parents('li').first().focus();\n              }\n            },\n            up: function () {\n              $prevElement.focus();\n            },\n            down: function () {\n              $nextElement.focus();\n            },\n            toggle: function () {\n              if ($element.children('[data-submenu]').length) {\n                _this.toggle($element.children('[data-submenu]'));\n              }\n            },\n            closeAll: function () {\n              _this.hideAll();\n            },\n            handled: function () {\n              e.preventDefault();\n              e.stopImmediatePropagation();\n            }\n          });\n        }); //.attr('tabindex', 0);\n      }\n\n      /**\n       * Closes all panes of the menu.\n       * @function\n       */\n\n    }, {\n      key: 'hideAll',\n      value: function hideAll() {\n        this.$element.find('[data-submenu]').slideUp(this.options.slideSpeed);\n      }\n\n      /**\n       * Toggles the open/close state of a submenu.\n       * @function\n       * @param {jQuery} $target - the submenu to toggle\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle($target) {\n        if (!$target.is(':animated')) {\n          if (!$target.is(':hidden')) {\n            this.up($target);\n          } else {\n            this.down($target);\n          }\n        }\n      }\n\n      /**\n       * Opens the sub-menu defined by `$target`.\n       * @param {jQuery} $target - Sub-menu to open.\n       * @fires AccordionMenu#down\n       */\n\n    }, {\n      key: 'down',\n      value: function down($target) {\n        var _this = this;\n\n        if (!this.options.multiOpen) {\n          this.up(this.$element.find('.is-active').not($target.parentsUntil(this.$element).add($target)));\n        }\n\n        $target.addClass('is-active').attr({ 'aria-hidden': false }).parent('.is-accordion-submenu-parent').attr({ 'aria-expanded': true });\n\n        Foundation.Move(this.options.slideSpeed, $target, function () {\n          $target.slideDown(_this.options.slideSpeed, function () {\n            /**\n             * Fires when the menu is done opening.\n             * @event AccordionMenu#down\n             */\n            _this.$element.trigger('down.zf.accordionMenu', [$target]);\n          });\n        });\n      }\n\n      /**\n       * Closes the sub-menu defined by `$target`. All sub-menus inside the target will be closed as well.\n       * @param {jQuery} $target - Sub-menu to close.\n       * @fires AccordionMenu#up\n       */\n\n    }, {\n      key: 'up',\n      value: function up($target) {\n        var _this = this;\n        Foundation.Move(this.options.slideSpeed, $target, function () {\n          $target.slideUp(_this.options.slideSpeed, function () {\n            /**\n             * Fires when the menu is done collapsing up.\n             * @event AccordionMenu#up\n             */\n            _this.$element.trigger('up.zf.accordionMenu', [$target]);\n          });\n        });\n\n        var $menus = $target.find('[data-submenu]').slideUp(0).addBack().attr('aria-hidden', true);\n\n        $menus.parent('.is-accordion-submenu-parent').attr('aria-expanded', false);\n      }\n\n      /**\n       * Destroys an instance of accordion menu.\n       * @fires AccordionMenu#destroyed\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('[data-submenu]').slideDown(0).css('display', '');\n        this.$element.find('a').off('click.zf.accordionMenu');\n\n        Foundation.Nest.Burn(this.$element, 'accordion');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return AccordionMenu;\n  }();\n\n  AccordionMenu.defaults = {\n    /**\n     * Amount of time to animate the opening of a submenu in ms.\n     * @option\n     * @example 250\n     */\n    slideSpeed: 250,\n    /**\n     * Allow the menu to have multiple open panes.\n     * @option\n     * @example true\n     */\n    multiOpen: true\n  };\n\n  // Window exports\n  Foundation.plugin(AccordionMenu, 'AccordionMenu');\n}(jQuery);\n!function ($) {\n\n  \"use strict\";\n\n  var FOUNDATION_VERSION = '6.2.0';\n\n  // Global Foundation object\n  // This is attached to the window, or used as a module for AMD/Browserify\n  var Foundation = {\n    version: FOUNDATION_VERSION,\n\n    /**\n     * Stores initialized plugins.\n     */\n    _plugins: {},\n\n    /**\n     * Stores generated unique ids for plugin instances\n     */\n    _uuids: [],\n\n    /**\n     * Returns a boolean for RTL support\n     */\n    rtl: function () {\n      return $('html').attr('dir') === 'rtl';\n    },\n    /**\n     * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\n     * @param {Object} plugin - The constructor of the plugin.\n     */\n    plugin: function (plugin, name) {\n      // Object key to use when adding to global Foundation object\n      // Examples: Foundation.Reveal, Foundation.OffCanvas\n      var className = name || functionName(plugin);\n      // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n      // Examples: data-reveal, data-off-canvas\n      var attrName = hyphenate(className);\n\n      // Add to the Foundation object and the plugins list (for reflowing)\n      this._plugins[attrName] = this[className] = plugin;\n    },\n    /**\n     * @function\n     * Populates the _uuids array with pointers to each individual plugin instance.\n     * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\n     * Also fires the initialization event for each plugin, consolidating repeditive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @param {String} name - the name of the plugin, passed as a camelCased string.\n     * @fires Plugin#init\n     */\n    registerPlugin: function (plugin, name) {\n      var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n      plugin.uuid = this.GetYoDigits(6, pluginName);\n\n      if (!plugin.$element.attr('data-' + pluginName)) {\n        plugin.$element.attr('data-' + pluginName, plugin.uuid);\n      }\n      if (!plugin.$element.data('zfPlugin')) {\n        plugin.$element.data('zfPlugin', plugin);\n      }\n      /**\n       * Fires when the plugin has initialized.\n       * @event Plugin#init\n       */\n      plugin.$element.trigger('init.zf.' + pluginName);\n\n      this._uuids.push(plugin.uuid);\n\n      return;\n    },\n    /**\n     * @function\n     * Removes the plugins uuid from the _uuids array.\n     * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\n     * Also fires the destroyed event for the plugin, consolidating repeditive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @fires Plugin#destroyed\n     */\n    unregisterPlugin: function (plugin) {\n      var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n      this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n      plugin.$element.removeAttr('data-' + pluginName).removeData('zfPlugin')\n      /**\n       * Fires when the plugin has been destroyed.\n       * @event Plugin#destroyed\n       */\n      .trigger('destroyed.zf.' + pluginName);\n      for (var prop in plugin) {\n        plugin[prop] = null; //clean up script to prep for garbage collection.\n      }\n      return;\n    },\n\n    /**\n     * @function\n     * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\n     * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\n     * @default If no argument is passed, reflow all currently active plugins.\n     */\n    reInit: function (plugins) {\n      var isJQ = plugins instanceof $;\n      try {\n        if (isJQ) {\n          plugins.each(function () {\n            $(this).data('zfPlugin')._init();\n          });\n        } else {\n          var type = typeof plugins,\n              _this = this,\n              fns = {\n            'object': function (plgs) {\n              plgs.forEach(function (p) {\n                p = hyphenate(p);\n                $('[data-' + p + ']').foundation('_init');\n              });\n            },\n            'string': function () {\n              plugins = hyphenate(plugins);\n              $('[data-' + plugins + ']').foundation('_init');\n            },\n            'undefined': function () {\n              this['object'](Object.keys(_this._plugins));\n            }\n          };\n          fns[type](plugins);\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        return plugins;\n      }\n    },\n\n    /**\n     * returns a random base-36 uid with namespacing\n     * @function\n     * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\n     * @param {String} namespace - name of plugin to be incorporated in uid, optional.\n     * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\n     * @returns {String} - unique id\n     */\n    GetYoDigits: function (length, namespace) {\n      length = length || 6;\n      return Math.round(Math.pow(36, length + 1) - Math.random() * Math.pow(36, length)).toString(36).slice(1) + (namespace ? '-' + namespace : '');\n    },\n    /**\n     * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\n     * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\n     * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\n     */\n    reflow: function (elem, plugins) {\n\n      // If plugins is undefined, just grab everything\n      if (typeof plugins === 'undefined') {\n        plugins = Object.keys(this._plugins);\n      }\n      // If plugins is a string, convert it to an array with one item\n      else if (typeof plugins === 'string') {\n          plugins = [plugins];\n        }\n\n      var _this = this;\n\n      // Iterate through each plugin\n      $.each(plugins, function (i, name) {\n        // Get the current plugin\n        var plugin = _this._plugins[name];\n\n        // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n        var $elem = $(elem).find('[data-' + name + ']').addBack('[data-' + name + ']');\n\n        // For each plugin found, initialize it\n        $elem.each(function () {\n          var $el = $(this),\n              opts = {};\n          // Don't double-dip on plugins\n          if ($el.data('zfPlugin')) {\n            console.warn(\"Tried to initialize \" + name + \" on an element that already has a Foundation plugin.\");\n            return;\n          }\n\n          if ($el.attr('data-options')) {\n            var thing = $el.attr('data-options').split(';').forEach(function (e, i) {\n              var opt = e.split(':').map(function (el) {\n                return el.trim();\n              });\n              if (opt[0]) opts[opt[0]] = parseValue(opt[1]);\n            });\n          }\n          try {\n            $el.data('zfPlugin', new plugin($(this), opts));\n          } catch (er) {\n            console.error(er);\n          } finally {\n            return;\n          }\n        });\n      });\n    },\n    getFnName: functionName,\n    transitionend: function ($elem) {\n      var transitions = {\n        'transition': 'transitionend',\n        'WebkitTransition': 'webkitTransitionEnd',\n        'MozTransition': 'transitionend',\n        'OTransition': 'otransitionend'\n      };\n      var elem = document.createElement('div'),\n          end;\n\n      for (var t in transitions) {\n        if (typeof elem.style[t] !== 'undefined') {\n          end = transitions[t];\n        }\n      }\n      if (end) {\n        return end;\n      } else {\n        end = setTimeout(function () {\n          $elem.triggerHandler('transitionend', [$elem]);\n        }, 1);\n        return 'transitionend';\n      }\n    }\n  };\n\n  Foundation.util = {\n    /**\n     * Function for applying a debounce effect to a function call.\n     * @function\n     * @param {Function} func - Function to be called at end of timeout.\n     * @param {Number} delay - Time in ms to delay the call of `func`.\n     * @returns function\n     */\n    throttle: function (func, delay) {\n      var timer = null;\n\n      return function () {\n        var context = this,\n            args = arguments;\n\n        if (timer === null) {\n          timer = setTimeout(function () {\n            func.apply(context, args);\n            timer = null;\n          }, delay);\n        }\n      };\n    }\n  };\n\n  // TODO: consider not making this a jQuery function\n  // TODO: need way to reflow vs. re-initialize\n  /**\n   * The Foundation jQuery method.\n   * @param {String|Array} method - An action to perform on the current jQuery object.\n   */\n  var foundation = function (method) {\n    var type = typeof method,\n        $meta = $('meta.foundation-mq'),\n        $noJS = $('.no-js');\n\n    if (!$meta.length) {\n      $('<meta class=\"foundation-mq\">').appendTo(document.head);\n    }\n    if ($noJS.length) {\n      $noJS.removeClass('no-js');\n    }\n\n    if (type === 'undefined') {\n      //needs to initialize the Foundation object, or an individual plugin.\n      Foundation.MediaQuery._init();\n      Foundation.reflow(this);\n    } else if (type === 'string') {\n      //an individual method to invoke on a plugin or group of plugins\n      var args = Array.prototype.slice.call(arguments, 1); //collect all the arguments, if necessary\n      var plugClass = this.data('zfPlugin'); //determine the class of plugin\n\n      if (plugClass !== undefined && plugClass[method] !== undefined) {\n        //make sure both the class and method exist\n        if (this.length === 1) {\n          //if there's only one, call it directly.\n          plugClass[method].apply(plugClass, args);\n        } else {\n          this.each(function (i, el) {\n            //otherwise loop through the jQuery collection and invoke the method on each\n            plugClass[method].apply($(el).data('zfPlugin'), args);\n          });\n        }\n      } else {\n        //error for no class or no method\n        throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n      }\n    } else {\n      //error for invalid argument type\n      throw new TypeError('We\\'re sorry, ' + type + ' is not a valid parameter. You must use a string representing the method you wish to invoke.');\n    }\n    return this;\n  };\n\n  window.Foundation = Foundation;\n  $.fn.foundation = foundation;\n\n  // Polyfill for requestAnimationFrame\n  (function () {\n    if (!Date.now || !window.Date.now) window.Date.now = Date.now = function () {\n      return new Date().getTime();\n    };\n\n    var vendors = ['webkit', 'moz'];\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    }\n    if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n      var lastTime = 0;\n      window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n          callback(lastTime = nextTime);\n        }, nextTime - now);\n      };\n      window.cancelAnimationFrame = clearTimeout;\n    }\n    /**\n     * Polyfill for performance.now, required by rAF\n     */\n    if (!window.performance || !window.performance.now) {\n      window.performance = {\n        start: Date.now(),\n        now: function () {\n          return Date.now() - this.start;\n        }\n      };\n    }\n  })();\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== 'function') {\n        // closest thing possible to the ECMAScript 5\n        // internal IsCallable function\n        throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function () {},\n          fBound = function () {\n        return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      if (this.prototype) {\n        // native functions don't have a prototype\n        fNOP.prototype = this.prototype;\n      }\n      fBound.prototype = new fNOP();\n\n      return fBound;\n    };\n  }\n  // Polyfill to get the name of a function in IE9\n  function functionName(fn) {\n    if (Function.prototype.name === undefined) {\n      var funcNameRegex = /function\\s([^(]{1,})\\(/;\n      var results = funcNameRegex.exec(fn.toString());\n      return results && results.length > 1 ? results[1].trim() : \"\";\n    } else if (fn.prototype === undefined) {\n      return fn.constructor.name;\n    } else {\n      return fn.prototype.constructor.name;\n    }\n  }\n  function parseValue(str) {\n    if (/true/.test(str)) return true;else if (/false/.test(str)) return false;else if (!isNaN(str * 1)) return parseFloat(str);\n    return str;\n  }\n  // Convert PascalCase to kebab-case\n  // Thank you: http://stackoverflow.com/a/8955580\n  function hyphenate(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Drilldown module.\n   * @module foundation.drilldown\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   * @requires foundation.util.nest\n   */\n\n  var Drilldown = function () {\n    /**\n     * Creates a new instance of a drilldown menu.\n     * @class\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Drilldown(element, options) {\n      _classCallCheck(this, Drilldown);\n\n      this.$element = element;\n      this.options = $.extend({}, Drilldown.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'drilldown');\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Drilldown');\n      Foundation.Keyboard.register('Drilldown', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'previous',\n        'ESCAPE': 'close',\n        'TAB': 'down',\n        'SHIFT_TAB': 'up'\n      });\n    }\n\n    /**\n     * Initializes the drilldown by creating jQuery collections of elements\n     * @private\n     */\n\n\n    _createClass(Drilldown, [{\n      key: '_init',\n      value: function _init() {\n        this.$submenuAnchors = this.$element.find('li.is-drilldown-submenu-parent');\n        this.$submenus = this.$submenuAnchors.children('[data-submenu]');\n        this.$menuItems = this.$element.find('li').not('.js-drilldown-back').attr('role', 'menuitem');\n\n        this._prepareMenu();\n\n        this._keyboardEvents();\n      }\n\n      /**\n       * prepares drilldown menu by setting attributes to links and elements\n       * sets a min height to prevent content jumping\n       * wraps the element if not already wrapped\n       * @private\n       * @function\n       */\n\n    }, {\n      key: '_prepareMenu',\n      value: function _prepareMenu() {\n        var _this = this;\n        // if(!this.options.holdOpen){\n        //   this._menuLinkEvents();\n        // }\n        this.$submenuAnchors.each(function () {\n          var $sub = $(this);\n          var $link = $sub.find('a:first');\n          if (_this.options.parentLink) {\n            $link.clone().prependTo($sub.children('[data-submenu]')).wrap('<li class=\"is-submenu-parent-item is-submenu-item is-drilldown-submenu-item\" role=\"menu-item\"></li>');\n          }\n          $link.data('savedHref', $link.attr('href')).removeAttr('href');\n          $sub.children('[data-submenu]').attr({\n            'aria-hidden': true,\n            'tabindex': 0,\n            'role': 'menu'\n          });\n          _this._events($sub);\n        });\n        this.$submenus.each(function () {\n          var $menu = $(this),\n              $back = $menu.find('.js-drilldown-back');\n          if (!$back.length) {\n            $menu.prepend(_this.options.backButton);\n          }\n          _this._back($menu);\n        });\n        if (!this.$element.parent().hasClass('is-drilldown')) {\n          this.$wrapper = $(this.options.wrapper).addClass('is-drilldown').css(this._getMaxDims());\n          this.$element.wrap(this.$wrapper);\n        }\n      }\n\n      /**\n       * Adds event handlers to elements in the menu.\n       * @function\n       * @private\n       * @param {jQuery} $elem - the current menu item to add handlers to.\n       */\n\n    }, {\n      key: '_events',\n      value: function _events($elem) {\n        var _this = this;\n\n        $elem.off('click.zf.drilldown').on('click.zf.drilldown', function (e) {\n          if ($(e.target).parentsUntil('ul', 'li').hasClass('is-drilldown-submenu-parent')) {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n          }\n\n          // if(e.target !== e.currentTarget.firstElementChild){\n          //   return false;\n          // }\n          _this._show($elem);\n\n          if (_this.options.closeOnClick) {\n            var $body = $('body').not(_this.$wrapper);\n            $body.off('.zf.drilldown').on('click.zf.drilldown', function (e) {\n              e.preventDefault();\n              _this._hideAll();\n              $body.off('.zf.drilldown');\n            });\n          }\n        });\n      }\n\n      /**\n       * Adds keydown event listener to `li`'s in the menu.\n       * @private\n       */\n\n    }, {\n      key: '_keyboardEvents',\n      value: function _keyboardEvents() {\n        var _this = this;\n        this.$menuItems.add(this.$element.find('.js-drilldown-back')).on('keydown.zf.drilldown', function (e) {\n          var $element = $(this),\n              $elements = $element.parent('ul').children('li'),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(Math.max(0, i - 1));\n              $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\n              return;\n            }\n          });\n          Foundation.Keyboard.handleKey(e, 'Drilldown', {\n            next: function () {\n              if ($element.is(_this.$submenuAnchors)) {\n                _this._show($element);\n                $element.on(Foundation.transitionend($element), function () {\n                  $element.find('ul li').filter(_this.$menuItems).first().focus();\n                });\n              }\n            },\n            previous: function () {\n              _this._hide($element.parent('ul'));\n              $element.parent('ul').on(Foundation.transitionend($element), function () {\n                setTimeout(function () {\n                  $element.parent('ul').parent('li').focus();\n                }, 1);\n              });\n            },\n            up: function () {\n              $prevElement.focus();\n            },\n            down: function () {\n              $nextElement.focus();\n            },\n            close: function () {\n              _this._back();\n              //_this.$menuItems.first().focus(); // focus to first element\n            },\n            open: function () {\n              if (!$element.is(_this.$menuItems)) {\n                // not menu item means back button\n                _this._hide($element.parent('ul'));\n                setTimeout(function () {\n                  $element.parent('ul').parent('li').focus();\n                }, 1);\n              } else if ($element.is(_this.$submenuAnchors)) {\n                _this._show($element);\n                setTimeout(function () {\n                  $element.find('ul li').filter(_this.$menuItems).first().focus();\n                }, 1);\n              }\n            },\n            handled: function () {\n              e.preventDefault();\n              e.stopImmediatePropagation();\n            }\n          });\n        }); // end keyboardAccess\n      }\n\n      /**\n       * Closes all open elements, and returns to root menu.\n       * @function\n       * @fires Drilldown#closed\n       */\n\n    }, {\n      key: '_hideAll',\n      value: function _hideAll() {\n        var $elem = this.$element.find('.is-drilldown-submenu.is-active').addClass('is-closing');\n        $elem.one(Foundation.transitionend($elem), function (e) {\n          $elem.removeClass('is-active is-closing');\n        });\n        /**\n         * Fires when the menu is fully closed.\n         * @event Drilldown#closed\n         */\n        this.$element.trigger('closed.zf.drilldown');\n      }\n\n      /**\n       * Adds event listener for each `back` button, and closes open menus.\n       * @function\n       * @fires Drilldown#back\n       * @param {jQuery} $elem - the current sub-menu to add `back` event.\n       */\n\n    }, {\n      key: '_back',\n      value: function _back($elem) {\n        var _this = this;\n        $elem.off('click.zf.drilldown');\n        $elem.children('.js-drilldown-back').on('click.zf.drilldown', function (e) {\n          e.stopImmediatePropagation();\n          // console.log('mouseup on back');\n          _this._hide($elem);\n        });\n      }\n\n      /**\n       * Adds event listener to menu items w/o submenus to close open menus on click.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_menuLinkEvents',\n      value: function _menuLinkEvents() {\n        var _this = this;\n        this.$menuItems.not('.is-drilldown-submenu-parent').off('click.zf.drilldown').on('click.zf.drilldown', function (e) {\n          // e.stopImmediatePropagation();\n          setTimeout(function () {\n            _this._hideAll();\n          }, 0);\n        });\n      }\n\n      /**\n       * Opens a submenu.\n       * @function\n       * @fires Drilldown#open\n       * @param {jQuery} $elem - the current element with a submenu to open.\n       */\n\n    }, {\n      key: '_show',\n      value: function _show($elem) {\n        $elem.children('[data-submenu]').addClass('is-active');\n\n        this.$element.trigger('open.zf.drilldown', [$elem]);\n      }\n    }, {\n      key: '_hide',\n\n\n      /**\n       * Hides a submenu\n       * @function\n       * @fires Drilldown#hide\n       * @param {jQuery} $elem - the current sub-menu to hide.\n       */\n      value: function _hide($elem) {\n        var _this = this;\n        $elem.addClass('is-closing').one(Foundation.transitionend($elem), function () {\n          $elem.removeClass('is-active is-closing');\n          $elem.blur();\n        });\n        /**\n         * Fires when the submenu is has closed.\n         * @event Drilldown#hide\n         */\n        $elem.trigger('hide.zf.drilldown', [$elem]);\n      }\n\n      /**\n       * Iterates through the nested menus to calculate the min-height, and max-width for the menu.\n       * Prevents content jumping.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_getMaxDims',\n      value: function _getMaxDims() {\n        var max = 0,\n            result = {};\n        this.$submenus.add(this.$element).each(function () {\n          var numOfElems = $(this).children('li').length;\n          max = numOfElems > max ? numOfElems : max;\n        });\n\n        result['min-height'] = max * this.$menuItems[0].getBoundingClientRect().height + 'px';\n        result['max-width'] = this.$element[0].getBoundingClientRect().width + 'px';\n\n        return result;\n      }\n\n      /**\n       * Destroys the Drilldown Menu\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this._hideAll();\n        Foundation.Nest.Burn(this.$element, 'drilldown');\n        this.$element.unwrap().find('.js-drilldown-back, .is-submenu-parent-item').remove().end().find('.is-active, .is-closing, .is-drilldown-submenu').removeClass('is-active is-closing is-drilldown-submenu').end().find('[data-submenu]').removeAttr('aria-hidden tabindex role').off('.zf.drilldown').end().off('zf.drilldown');\n        this.$element.find('a').each(function () {\n          var $link = $(this);\n          if ($link.data('savedHref')) {\n            $link.attr('href', $link.data('savedHref')).removeData('savedHref');\n          } else {\n            return;\n          }\n        });\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Drilldown;\n  }();\n\n  Drilldown.defaults = {\n    /**\n     * Markup used for JS generated back button. Prepended to submenu lists and deleted on `destroy` method, 'js-drilldown-back' class required. Remove the backslash (`\\`) if copy and pasting.\n     * @option\n     * @example '<\\li><\\a>Back<\\/a><\\/li>'\n     */\n    backButton: '<li class=\"js-drilldown-back\"><a>Back</a></li>',\n    /**\n     * Markup used to wrap drilldown menu. Use a class name for independent styling; the JS applied class: `is-drilldown` is required. Remove the backslash (`\\`) if copy and pasting.\n     * @option\n     * @example '<\\div class=\"is-drilldown\"><\\/div>'\n     */\n    wrapper: '<div></div>',\n    /**\n     * Adds the parent link to the submenu.\n     * @option\n     * @example false\n     */\n    parentLink: false,\n    /**\n     * Allow the menu to return to root list on body click.\n     * @option\n     * @example false\n     */\n    closeOnClick: false\n    // holdOpen: false\n  };\n\n  // Window exports\n  Foundation.plugin(Drilldown, 'Drilldown');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Dropdown module.\n   * @module foundation.dropdown\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.triggers\n   */\n\n  var Dropdown = function () {\n    /**\n     * Creates a new instance of a dropdown.\n     * @class\n     * @param {jQuery} element - jQuery object to make into a dropdown.\n     *        Object should be of the dropdown panel, rather than its anchor.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Dropdown(element, options) {\n      _classCallCheck(this, Dropdown);\n\n      this.$element = element;\n      this.options = $.extend({}, Dropdown.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Dropdown');\n      Foundation.Keyboard.register('Dropdown', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close',\n        'TAB': 'tab_forward',\n        'SHIFT_TAB': 'tab_backward'\n      });\n    }\n\n    /**\n     * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\n     * @function\n     * @private\n     */\n\n\n    _createClass(Dropdown, [{\n      key: '_init',\n      value: function _init() {\n        var $id = this.$element.attr('id');\n\n        this.$anchor = $('[data-toggle=\"' + $id + '\"]') || $('[data-open=\"' + $id + '\"]');\n        this.$anchor.attr({\n          'aria-controls': $id,\n          'data-is-focus': false,\n          'data-yeti-box': $id,\n          'aria-haspopup': true,\n          'aria-expanded': false\n\n        });\n\n        this.options.positionClass = this.getPositionClass();\n        this.counter = 4;\n        this.usedPositions = [];\n        this.$element.attr({\n          'aria-hidden': 'true',\n          'data-yeti-box': $id,\n          'data-resize': $id,\n          'aria-labelledby': this.$anchor[0].id || Foundation.GetYoDigits(6, 'dd-anchor')\n        });\n        this._events();\n      }\n\n      /**\n       * Helper function to determine current orientation of dropdown pane.\n       * @function\n       * @returns {String} position - string value of a position class.\n       */\n\n    }, {\n      key: 'getPositionClass',\n      value: function getPositionClass() {\n        var position = this.$element[0].className.match(/\\b(top|left|right)\\b/g);\n        position = position ? position[0] : '';\n        return position;\n      }\n\n      /**\n       * Adjusts the dropdown panes orientation by adding/removing positioning classes.\n       * @function\n       * @private\n       * @param {String} position - position class to remove.\n       */\n\n    }, {\n      key: '_reposition',\n      value: function _reposition(position) {\n        this.usedPositions.push(position ? position : 'bottom');\n        //default, try switching to opposite side\n        if (!position && this.usedPositions.indexOf('top') < 0) {\n          this.$element.addClass('top');\n        } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\n          this.$element.removeClass(position);\n        } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\n          this.$element.removeClass(position).addClass('right');\n        } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\n          this.$element.removeClass(position).addClass('left');\n        }\n\n        //if default change didn't work, try bottom or left first\n        else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.$element.addClass('left');\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.$element.removeClass(position).addClass('left');\n          } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          }\n          //if nothing cleared, set to bottom\n          else {\n              this.$element.removeClass(position);\n            }\n        this.classChanged = true;\n        this.counter--;\n      }\n\n      /**\n       * Sets the position and orientation of the dropdown pane, checks for collisions.\n       * Recursively calls itself if a collision is detected, with a new position class.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_setPosition',\n      value: function _setPosition() {\n        if (this.$anchor.attr('aria-expanded') === 'false') {\n          return false;\n        }\n        var position = this.getPositionClass(),\n            $eleDims = Foundation.Box.GetDimensions(this.$element),\n            $anchorDims = Foundation.Box.GetDimensions(this.$anchor),\n            _this = this,\n            direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\n            param = direction === 'top' ? 'height' : 'width',\n            offset = param === 'height' ? this.options.vOffset : this.options.hOffset;\n\n        if ($eleDims.width >= $eleDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.$element)) {\n          this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            'width': $eleDims.windowDims.width - this.options.hOffset * 2,\n            'height': 'auto'\n          });\n          this.classChanged = true;\n          return false;\n        }\n\n        this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, position, this.options.vOffset, this.options.hOffset));\n\n        while (!Foundation.Box.ImNotTouchingYou(this.$element) && this.counter) {\n          this._reposition(position);\n          this._setPosition();\n        }\n      }\n\n      /**\n       * Adds event listeners to the element utilizing the triggers utility library.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        this.$element.on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': this.close.bind(this),\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'resizeme.zf.trigger': this._setPosition.bind(this)\n        });\n\n        if (this.options.hover) {\n          this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function () {\n              _this.open();\n              _this.$anchor.data('hover', true);\n            }, _this.options.hoverDelay);\n          }).on('mouseleave.zf.dropdown', function () {\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function () {\n              _this.close();\n              _this.$anchor.data('hover', false);\n            }, _this.options.hoverDelay);\n          });\n          if (this.options.hoverPane) {\n            this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n            }).on('mouseleave.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function () {\n                _this.close();\n                _this.$anchor.data('hover', false);\n              }, _this.options.hoverDelay);\n            });\n          }\n        }\n        this.$anchor.add(this.$element).on('keydown.zf.dropdown', function (e) {\n\n          var $target = $(this),\n              visibleFocusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n\n          Foundation.Keyboard.handleKey(e, 'Dropdown', {\n            tab_forward: function () {\n              if (_this.$element.find(':focus').is(visibleFocusableElements.eq(-1))) {\n                // left modal downwards, setting focus to first element\n                if (_this.options.trapFocus) {\n                  // if focus shall be trapped\n                  visibleFocusableElements.eq(0).focus();\n                  e.preventDefault();\n                } else {\n                  // if focus is not trapped, close dropdown on focus out\n                  _this.close();\n                }\n              }\n            },\n            tab_backward: function () {\n              if (_this.$element.find(':focus').is(visibleFocusableElements.eq(0)) || _this.$element.is(':focus')) {\n                // left modal upwards, setting focus to last element\n                if (_this.options.trapFocus) {\n                  // if focus shall be trapped\n                  visibleFocusableElements.eq(-1).focus();\n                  e.preventDefault();\n                } else {\n                  // if focus is not trapped, close dropdown on focus out\n                  _this.close();\n                }\n              }\n            },\n            open: function () {\n              if ($target.is(_this.$anchor)) {\n                _this.open();\n                _this.$element.attr('tabindex', -1).focus();\n                e.preventDefault();\n              }\n            },\n            close: function () {\n              _this.close();\n              _this.$anchor.focus();\n            }\n          });\n        });\n      }\n\n      /**\n       * Adds an event handler to the body to close any dropdowns on a click.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_addBodyHandler',\n      value: function _addBodyHandler() {\n        var $body = $(document.body).not(this.$element),\n            _this = this;\n        $body.off('click.zf.dropdown').on('click.zf.dropdown', function (e) {\n          if (_this.$anchor.is(e.target) || _this.$anchor.find(e.target).length) {\n            return;\n          }\n          if (_this.$element.find(e.target).length) {\n            return;\n          }\n          _this.close();\n          $body.off('click.zf.dropdown');\n        });\n      }\n\n      /**\n       * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\n       * @function\n       * @fires Dropdown#closeme\n       * @fires Dropdown#show\n       */\n\n    }, {\n      key: 'open',\n      value: function open() {\n        // var _this = this;\n        /**\n         * Fires to close other open dropdowns\n         * @event Dropdown#closeme\n         */\n        this.$element.trigger('closeme.zf.dropdown', this.$element.attr('id'));\n        this.$anchor.addClass('hover').attr({ 'aria-expanded': true });\n        // this.$element/*.show()*/;\n        this._setPosition();\n        this.$element.addClass('is-open').attr({ 'aria-hidden': false });\n\n        if (this.options.autoFocus) {\n          var $focusable = Foundation.Keyboard.findFocusable(this.$element);\n          if ($focusable.length) {\n            $focusable.eq(0).focus();\n          }\n        }\n\n        if (this.options.closeOnClick) {\n          this._addBodyHandler();\n        }\n\n        /**\n         * Fires once the dropdown is visible.\n         * @event Dropdown#show\n         */\n        this.$element.trigger('show.zf.dropdown', [this.$element]);\n      }\n\n      /**\n       * Closes the open dropdown pane.\n       * @function\n       * @fires Dropdown#hide\n       */\n\n    }, {\n      key: 'close',\n      value: function close() {\n        if (!this.$element.hasClass('is-open')) {\n          return false;\n        }\n        this.$element.removeClass('is-open').attr({ 'aria-hidden': true });\n\n        this.$anchor.removeClass('hover').attr('aria-expanded', false);\n\n        if (this.classChanged) {\n          var curPositionClass = this.getPositionClass();\n          if (curPositionClass) {\n            this.$element.removeClass(curPositionClass);\n          }\n          this.$element.addClass(this.options.positionClass)\n          /*.hide()*/.css({ height: '', width: '' });\n          this.classChanged = false;\n          this.counter = 4;\n          this.usedPositions.length = 0;\n        }\n        this.$element.trigger('hide.zf.dropdown', [this.$element]);\n      }\n\n      /**\n       * Toggles the dropdown pane's visibility.\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.$element.hasClass('is-open')) {\n          if (this.$anchor.data('hover')) return;\n          this.close();\n        } else {\n          this.open();\n        }\n      }\n\n      /**\n       * Destroys the dropdown.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.trigger').hide();\n        this.$anchor.off('.zf.dropdown');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Dropdown;\n  }();\n\n  Dropdown.defaults = {\n    /**\n     * Amount of time to delay opening a submenu on hover event.\n     * @option\n     * @example 250\n     */\n    hoverDelay: 250,\n    /**\n     * Allow submenus to open on hover events\n     * @option\n     * @example false\n     */\n    hover: false,\n    /**\n     * Don't close dropdown when hovering over dropdown pane\n     * @option\n     * @example true\n     */\n    hoverPane: false,\n    /**\n     * Number of pixels between the dropdown pane and the triggering element on open.\n     * @option\n     * @example 1\n     */\n    vOffset: 1,\n    /**\n     * Number of pixels between the dropdown pane and the triggering element on open.\n     * @option\n     * @example 1\n     */\n    hOffset: 1,\n    /**\n     * Class applied to adjust open position. JS will test and fill this in.\n     * @option\n     * @example 'top'\n     */\n    positionClass: '',\n    /**\n     * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\n     * @option\n     * @example false\n     */\n    trapFocus: false,\n    /**\n     * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\n     * @option\n     * @example true\n     */\n    autoFocus: false,\n    /**\n     * Allows a click on the body to close the dropdown.\n     * @option\n     * @example false\n     */\n    closeOnClick: false\n  };\n\n  // Window exports\n  Foundation.plugin(Dropdown, 'Dropdown');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * DropdownMenu module.\n   * @module foundation.dropdown-menu\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.nest\n   */\n\n  var DropdownMenu = function () {\n    /**\n     * Creates a new instance of DropdownMenu.\n     * @class\n     * @fires DropdownMenu#init\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function DropdownMenu(element, options) {\n      _classCallCheck(this, DropdownMenu);\n\n      this.$element = element;\n      this.options = $.extend({}, DropdownMenu.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'dropdown');\n      this._init();\n\n      Foundation.registerPlugin(this, 'DropdownMenu');\n      Foundation.Keyboard.register('DropdownMenu', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'previous',\n        'ESCAPE': 'close'\n      });\n    }\n\n    /**\n     * Initializes the plugin, and calls _prepareMenu\n     * @private\n     * @function\n     */\n\n\n    _createClass(DropdownMenu, [{\n      key: '_init',\n      value: function _init() {\n        var subs = this.$element.find('li.is-dropdown-submenu-parent');\n        this.$element.children('.is-dropdown-submenu-parent').children('.is-dropdown-submenu').addClass('first-sub');\n\n        this.$menuItems = this.$element.find('[role=\"menuitem\"]');\n        this.$tabs = this.$element.children('[role=\"menuitem\"]');\n        this.$tabs.find('ul.is-dropdown-submenu').addClass(this.options.verticalClass);\n\n        if (this.$element.hasClass(this.options.rightClass) || this.options.alignment === 'right' || Foundation.rtl()) {\n          this.options.alignment = 'right';\n          subs.addClass('opens-left');\n        } else {\n          subs.addClass('opens-right');\n        }\n        this.changed = false;\n        this._events();\n      }\n    }, {\n      key: '_events',\n\n      /**\n       * Adds event listeners to elements within the menu\n       * @private\n       * @function\n       */\n      value: function _events() {\n        var _this = this,\n            hasTouch = 'ontouchstart' in window || typeof window.ontouchstart !== 'undefined',\n            parClass = 'is-dropdown-submenu-parent';\n\n        if (this.options.clickOpen || hasTouch) {\n          this.$menuItems.on('click.zf.dropdownmenu touchstart.zf.dropdownmenu', function (e) {\n            var $elem = $(e.target).parentsUntil('ul', '.' + parClass),\n                hasSub = $elem.hasClass(parClass),\n                hasClicked = $elem.attr('data-is-click') === 'true',\n                $sub = $elem.children('.is-dropdown-submenu');\n\n            if (hasSub) {\n              if (hasClicked) {\n                if (!_this.options.closeOnClick || !_this.options.clickOpen && !hasTouch || _this.options.forceFollow && hasTouch) {\n                  return;\n                } else {\n                  e.stopImmediatePropagation();\n                  e.preventDefault();\n                  _this._hide($elem);\n                }\n              } else {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                _this._show($elem.children('.is-dropdown-submenu'));\n                $elem.add($elem.parentsUntil(_this.$element, '.' + parClass)).attr('data-is-click', true);\n              }\n            } else {\n              return;\n            }\n          });\n        }\n\n        if (!this.options.disableHover) {\n          this.$menuItems.on('mouseenter.zf.dropdownmenu', function (e) {\n            e.stopImmediatePropagation();\n            var $elem = $(this),\n                hasSub = $elem.hasClass(parClass);\n\n            if (hasSub) {\n              clearTimeout(_this.delay);\n              _this.delay = setTimeout(function () {\n                _this._show($elem.children('.is-dropdown-submenu'));\n              }, _this.options.hoverDelay);\n            }\n          }).on('mouseleave.zf.dropdownmenu', function (e) {\n            var $elem = $(this),\n                hasSub = $elem.hasClass(parClass);\n            if (hasSub && _this.options.autoclose) {\n              if ($elem.attr('data-is-click') === 'true' && _this.options.clickOpen) {\n                return false;\n              }\n\n              clearTimeout(_this.delay);\n              _this.delay = setTimeout(function () {\n                _this._hide($elem);\n              }, _this.options.closingTime);\n            }\n          });\n        }\n        this.$menuItems.on('keydown.zf.dropdownmenu', function (e) {\n          var $element = $(e.target).parentsUntil('ul', '[role=\"menuitem\"]'),\n              isTab = _this.$tabs.index($element) > -1,\n              $elements = isTab ? _this.$tabs : $element.siblings('li').add($element),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(i - 1);\n              $nextElement = $elements.eq(i + 1);\n              return;\n            }\n          });\n\n          var nextSibling = function () {\n            if (!$element.is(':last-child')) $nextElement.children('a:first').focus();\n          },\n              prevSibling = function () {\n            $prevElement.children('a:first').focus();\n          },\n              openSub = function () {\n            var $sub = $element.children('ul.is-dropdown-submenu');\n            if ($sub.length) {\n              _this._show($sub);\n              $element.find('li > a:first').focus();\n            } else {\n              return;\n            }\n          },\n              closeSub = function () {\n            //if ($element.is(':first-child')) {\n            var close = $element.parent('ul').parent('li');\n            close.children('a:first').focus();\n            _this._hide(close);\n            //}\n          };\n          var functions = {\n            open: openSub,\n            close: function () {\n              _this._hide(_this.$element);\n              _this.$menuItems.find('a:first').focus(); // focus to first element\n            },\n            handled: function () {\n              e.preventDefault();\n              e.stopImmediatePropagation();\n            }\n          };\n\n          if (isTab) {\n            if (_this.vertical) {\n              // vertical menu\n              if (_this.options.alignment === 'left') {\n                // left aligned\n                $.extend(functions, {\n                  down: nextSibling,\n                  up: prevSibling,\n                  next: openSub,\n                  previous: closeSub\n                });\n              } else {\n                // right aligned\n                $.extend(functions, {\n                  down: nextSibling,\n                  up: prevSibling,\n                  next: closeSub,\n                  previous: openSub\n                });\n              }\n            } else {\n              // horizontal menu\n              $.extend(functions, {\n                next: nextSibling,\n                previous: prevSibling,\n                down: openSub,\n                up: closeSub\n              });\n            }\n          } else {\n            // not tabs -> one sub\n            if (_this.options.alignment === 'left') {\n              // left aligned\n              $.extend(functions, {\n                next: openSub,\n                previous: closeSub,\n                down: nextSibling,\n                up: prevSibling\n              });\n            } else {\n              // right aligned\n              $.extend(functions, {\n                next: closeSub,\n                previous: openSub,\n                down: nextSibling,\n                up: prevSibling\n              });\n            }\n          }\n          Foundation.Keyboard.handleKey(e, 'DropdownMenu', functions);\n        });\n      }\n\n      /**\n       * Adds an event handler to the body to close any dropdowns on a click.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_addBodyHandler',\n      value: function _addBodyHandler() {\n        var $body = $(document.body),\n            _this = this;\n        $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu').on('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu', function (e) {\n          var $link = _this.$element.find(e.target);\n          if ($link.length) {\n            return;\n          }\n\n          _this._hide();\n          $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu');\n        });\n      }\n\n      /**\n       * Opens a dropdown pane, and checks for collisions first.\n       * @param {jQuery} $sub - ul element that is a submenu to show\n       * @function\n       * @private\n       * @fires DropdownMenu#show\n       */\n\n    }, {\n      key: '_show',\n      value: function _show($sub) {\n        var idx = this.$tabs.index(this.$tabs.filter(function (i, el) {\n          return $(el).find($sub).length > 0;\n        }));\n        var $sibs = $sub.parent('li.is-dropdown-submenu-parent').siblings('li.is-dropdown-submenu-parent');\n        this._hide($sibs, idx);\n        $sub.css('visibility', 'hidden').addClass('js-dropdown-active').attr({ 'aria-hidden': false }).parent('li.is-dropdown-submenu-parent').addClass('is-active').attr({ 'aria-expanded': true });\n        var clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n        if (!clear) {\n          var oldClass = this.options.alignment === 'left' ? '-right' : '-left',\n              $parentLi = $sub.parent('.is-dropdown-submenu-parent');\n          $parentLi.removeClass('opens' + oldClass).addClass('opens-' + this.options.alignment);\n          clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n          if (!clear) {\n            $parentLi.removeClass('opens-' + this.options.alignment).addClass('opens-inner');\n          }\n          this.changed = true;\n        }\n        $sub.css('visibility', '');\n        if (this.options.closeOnClick) {\n          this._addBodyHandler();\n        }\n        /**\n         * Fires when the new dropdown pane is visible.\n         * @event DropdownMenu#show\n         */\n        this.$element.trigger('show.zf.dropdownmenu', [$sub]);\n      }\n\n      /**\n       * Hides a single, currently open dropdown pane, if passed a parameter, otherwise, hides everything.\n       * @function\n       * @param {jQuery} $elem - element with a submenu to hide\n       * @param {Number} idx - index of the $tabs collection to hide\n       * @private\n       */\n\n    }, {\n      key: '_hide',\n      value: function _hide($elem, idx) {\n        var $toClose;\n        if ($elem && $elem.length) {\n          $toClose = $elem;\n        } else if (idx !== undefined) {\n          $toClose = this.$tabs.not(function (i, el) {\n            return i === idx;\n          });\n        } else {\n          $toClose = this.$element;\n        }\n        var somethingToClose = $toClose.hasClass('is-active') || $toClose.find('.is-active').length > 0;\n\n        if (somethingToClose) {\n          $toClose.find('li.is-active').add($toClose).attr({\n            'aria-expanded': false,\n            'data-is-click': false\n          }).removeClass('is-active');\n\n          $toClose.find('ul.js-dropdown-active').attr({\n            'aria-hidden': true\n          }).removeClass('js-dropdown-active');\n\n          if (this.changed || $toClose.find('opens-inner').length) {\n            var oldClass = this.options.alignment === 'left' ? 'right' : 'left';\n            $toClose.find('li.is-dropdown-submenu-parent').add($toClose).removeClass('opens-inner opens-' + this.options.alignment).addClass('opens-' + oldClass);\n            this.changed = false;\n          }\n          /**\n           * Fires when the open menus are closed.\n           * @event DropdownMenu#hide\n           */\n          this.$element.trigger('hide.zf.dropdownmenu', [$toClose]);\n        }\n      }\n\n      /**\n       * Destroys the plugin.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$menuItems.off('.zf.dropdownmenu').removeAttr('data-is-click').removeClass('is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner');\n        $(document.body).off('.zf.dropdownmenu');\n        Foundation.Nest.Burn(this.$element, 'dropdown');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return DropdownMenu;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  DropdownMenu.defaults = {\n    /**\n     * Disallows hover events from opening submenus\n     * @option\n     * @example false\n     */\n    disableHover: false,\n    /**\n     * Allow a submenu to automatically close on a mouseleave event, if not clicked open.\n     * @option\n     * @example true\n     */\n    autoclose: true,\n    /**\n     * Amount of time to delay opening a submenu on hover event.\n     * @option\n     * @example 50\n     */\n    hoverDelay: 50,\n    /**\n     * Allow a submenu to open/remain open on parent click event. Allows cursor to move away from menu.\n     * @option\n     * @example true\n     */\n    clickOpen: false,\n    /**\n     * Amount of time to delay closing a submenu on a mouseleave event.\n     * @option\n     * @example 500\n     */\n\n    closingTime: 500,\n    /**\n     * Position of the menu relative to what direction the submenus should open. Handled by JS.\n     * @option\n     * @example 'left'\n     */\n    alignment: 'left',\n    /**\n     * Allow clicks on the body to close any open submenus.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n    /**\n     * Class applied to vertical oriented menus, Foundation default is `vertical`. Update this if using your own class.\n     * @option\n     * @example 'vertical'\n     */\n    verticalClass: 'vertical',\n    /**\n     * Class applied to right-side oriented menus, Foundation default is `align-right`. Update this if using your own class.\n     * @option\n     * @example 'align-right'\n     */\n    rightClass: 'align-right',\n    /**\n     * Boolean to force overide the clicking of links to perform default action, on second touch event for mobile.\n     * @option\n     * @example false\n     */\n    forceFollow: true\n  };\n\n  // Window exports\n  Foundation.plugin(DropdownMenu, 'DropdownMenu');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Equalizer module.\n   * @module foundation.equalizer\n   */\n\n  var Equalizer = function () {\n    /**\n     * Creates a new instance of Equalizer.\n     * @class\n     * @fires Equalizer#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Equalizer(element, options) {\n      _classCallCheck(this, Equalizer);\n\n      this.$element = element;\n      this.options = $.extend({}, Equalizer.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Equalizer');\n    }\n\n    /**\n     * Initializes the Equalizer plugin and calls functions to get equalizer functioning on load.\n     * @private\n     */\n\n\n    _createClass(Equalizer, [{\n      key: '_init',\n      value: function _init() {\n        var eqId = this.$element.attr('data-equalizer') || '';\n        var $watched = this.$element.find('[data-equalizer-watch=\"' + eqId + '\"]');\n\n        this.$watched = $watched.length ? $watched : this.$element.find('[data-equalizer-watch]');\n        this.$element.attr('data-resize', eqId || Foundation.GetYoDigits(6, 'eq'));\n\n        this.hasNested = this.$element.find('[data-equalizer]').length > 0;\n        this.isNested = this.$element.parentsUntil(document.body, '[data-equalizer]').length > 0;\n        this.isOn = false;\n\n        var imgs = this.$element.find('img');\n        var tooSmall;\n        if (this.options.equalizeOn) {\n          tooSmall = this._checkMQ();\n          $(window).on('changed.zf.mediaquery', this._checkMQ.bind(this));\n        } else {\n          this._events();\n        }\n        if (tooSmall !== undefined && tooSmall === false || tooSmall === undefined) {\n          if (imgs.length) {\n            Foundation.onImagesLoaded(imgs, this._reflow.bind(this));\n          } else {\n            this._reflow();\n          }\n        }\n      }\n\n      /**\n       * Removes event listeners if the breakpoint is too small.\n       * @private\n       */\n\n    }, {\n      key: '_pauseEvents',\n      value: function _pauseEvents() {\n        this.isOn = false;\n        this.$element.off('.zf.equalizer resizeme.zf.trigger');\n      }\n\n      /**\n       * Initializes events for Equalizer.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        this._pauseEvents();\n        if (this.hasNested) {\n          this.$element.on('postequalized.zf.equalizer', function (e) {\n            if (e.target !== _this.$element[0]) {\n              _this._reflow();\n            }\n          });\n        } else {\n          this.$element.on('resizeme.zf.trigger', this._reflow.bind(this));\n        }\n        this.isOn = true;\n      }\n\n      /**\n       * Checks the current breakpoint to the minimum required size.\n       * @private\n       */\n\n    }, {\n      key: '_checkMQ',\n      value: function _checkMQ() {\n        var tooSmall = !Foundation.MediaQuery.atLeast(this.options.equalizeOn);\n        if (tooSmall) {\n          if (this.isOn) {\n            this._pauseEvents();\n            this.$watched.css('height', 'auto');\n          }\n        } else {\n          if (!this.isOn) {\n            this._events();\n          }\n        }\n        return tooSmall;\n      }\n\n      /**\n       * A noop version for the plugin\n       * @private\n       */\n\n    }, {\n      key: '_killswitch',\n      value: function _killswitch() {\n        return;\n      }\n\n      /**\n       * Calls necessary functions to update Equalizer upon DOM change\n       * @private\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        if (!this.options.equalizeOnStack) {\n          if (this._isStacked()) {\n            this.$watched.css('height', 'auto');\n            return false;\n          }\n        }\n        if (this.options.equalizeByRow) {\n          this.getHeightsByRow(this.applyHeightByRow.bind(this));\n        } else {\n          this.getHeights(this.applyHeight.bind(this));\n        }\n      }\n\n      /**\n       * Manually determines if the first 2 elements are *NOT* stacked.\n       * @private\n       */\n\n    }, {\n      key: '_isStacked',\n      value: function _isStacked() {\n        return this.$watched[0].offsetTop !== this.$watched[1].offsetTop;\n      }\n\n      /**\n       * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\n       * @param {Function} cb - A non-optional callback to return the heights array to.\n       * @returns {Array} heights - An array of heights of children within Equalizer container\n       */\n\n    }, {\n      key: 'getHeights',\n      value: function getHeights(cb) {\n        var heights = [];\n        for (var i = 0, len = this.$watched.length; i < len; i++) {\n          this.$watched[i].style.height = 'auto';\n          heights.push(this.$watched[i].offsetHeight);\n        }\n        cb(heights);\n      }\n\n      /**\n       * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\n       * @param {Function} cb - A non-optional callback to return the heights array to.\n       * @returns {Array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\n       */\n\n    }, {\n      key: 'getHeightsByRow',\n      value: function getHeightsByRow(cb) {\n        var lastElTopOffset = this.$watched.first().offset().top,\n            groups = [],\n            group = 0;\n        //group by Row\n        groups[group] = [];\n        for (var i = 0, len = this.$watched.length; i < len; i++) {\n          this.$watched[i].style.height = 'auto';\n          //maybe could use this.$watched[i].offsetTop\n          var elOffsetTop = $(this.$watched[i]).offset().top;\n          if (elOffsetTop != lastElTopOffset) {\n            group++;\n            groups[group] = [];\n            lastElTopOffset = elOffsetTop;\n          }\n          groups[group].push([this.$watched[i], this.$watched[i].offsetHeight]);\n        }\n\n        for (var j = 0, ln = groups.length; j < ln; j++) {\n          var heights = $(groups[j]).map(function () {\n            return this[1];\n          }).get();\n          var max = Math.max.apply(null, heights);\n          groups[j].push(max);\n        }\n        cb(groups);\n      }\n\n      /**\n       * Changes the CSS height property of each child in an Equalizer parent to match the tallest\n       * @param {array} heights - An array of heights of children within Equalizer container\n       * @fires Equalizer#preequalized\n       * @fires Equalizer#postequalized\n       */\n\n    }, {\n      key: 'applyHeight',\n      value: function applyHeight(heights) {\n        var max = Math.max.apply(null, heights);\n        /**\n         * Fires before the heights are applied\n         * @event Equalizer#preequalized\n         */\n        this.$element.trigger('preequalized.zf.equalizer');\n\n        this.$watched.css('height', max);\n\n        /**\n         * Fires when the heights have been applied\n         * @event Equalizer#postequalized\n         */\n        this.$element.trigger('postequalized.zf.equalizer');\n      }\n\n      /**\n       * Changes the CSS height property of each child in an Equalizer parent to match the tallest by row\n       * @param {array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\n       * @fires Equalizer#preequalized\n       * @fires Equalizer#preequalizedRow\n       * @fires Equalizer#postequalizedRow\n       * @fires Equalizer#postequalized\n       */\n\n    }, {\n      key: 'applyHeightByRow',\n      value: function applyHeightByRow(groups) {\n        /**\n         * Fires before the heights are applied\n         */\n        this.$element.trigger('preequalized.zf.equalizer');\n        for (var i = 0, len = groups.length; i < len; i++) {\n          var groupsILength = groups[i].length,\n              max = groups[i][groupsILength - 1];\n          if (groupsILength <= 2) {\n            $(groups[i][0][0]).css({ 'height': 'auto' });\n            continue;\n          }\n          /**\n            * Fires before the heights per row are applied\n            * @event Equalizer#preequalizedRow\n            */\n          this.$element.trigger('preequalizedrow.zf.equalizer');\n          for (var j = 0, lenJ = groupsILength - 1; j < lenJ; j++) {\n            $(groups[i][j][0]).css({ 'height': max });\n          }\n          /**\n            * Fires when the heights per row have been applied\n            * @event Equalizer#postequalizedRow\n            */\n          this.$element.trigger('postequalizedrow.zf.equalizer');\n        }\n        /**\n         * Fires when the heights have been applied\n         */\n        this.$element.trigger('postequalized.zf.equalizer');\n      }\n\n      /**\n       * Destroys an instance of Equalizer.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this._pauseEvents();\n        this.$watched.css('height', 'auto');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Equalizer;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Equalizer.defaults = {\n    /**\n     * Enable height equalization when stacked on smaller screens.\n     * @option\n     * @example true\n     */\n    equalizeOnStack: true,\n    /**\n     * Enable height equalization row by row.\n     * @option\n     * @example false\n     */\n    equalizeByRow: false,\n    /**\n     * String representing the minimum breakpoint size the plugin should equalize heights on.\n     * @option\n     * @example 'medium'\n     */\n    equalizeOn: ''\n  };\n\n  // Window exports\n  Foundation.plugin(Equalizer, 'Equalizer');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Interchange module.\n   * @module foundation.interchange\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.timerAndImageLoader\n   */\n\n  var Interchange = function () {\n    /**\n     * Creates a new instance of Interchange.\n     * @class\n     * @fires Interchange#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Interchange(element, options) {\n      _classCallCheck(this, Interchange);\n\n      this.$element = element;\n      this.options = $.extend({}, Interchange.defaults, options);\n      this.rules = [];\n      this.currentPath = '';\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'Interchange');\n    }\n\n    /**\n     * Initializes the Interchange plugin and calls functions to get interchange functioning on load.\n     * @function\n     * @private\n     */\n\n\n    _createClass(Interchange, [{\n      key: '_init',\n      value: function _init() {\n        this._addBreakpoints();\n        this._generateRules();\n        this._reflow();\n      }\n\n      /**\n       * Initializes events for Interchange.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        $(window).on('resize.zf.interchange', Foundation.util.throttle(this._reflow.bind(this), 50));\n      }\n\n      /**\n       * Calls necessary functions to update Interchange upon DOM change\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        var match;\n\n        // Iterate through each rule, but only save the last match\n        for (var i in this.rules) {\n          var rule = this.rules[i];\n\n          if (window.matchMedia(rule.query).matches) {\n            match = rule;\n          }\n        }\n\n        if (match) {\n          this.replace(match.path);\n        }\n      }\n\n      /**\n       * Gets the Foundation breakpoints and adds them to the Interchange.SPECIAL_QUERIES object.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_addBreakpoints',\n      value: function _addBreakpoints() {\n        for (var i in Foundation.MediaQuery.queries) {\n          var query = Foundation.MediaQuery.queries[i];\n          Interchange.SPECIAL_QUERIES[query.name] = query.value;\n        }\n      }\n\n      /**\n       * Checks the Interchange element for the provided media query + content pairings\n       * @function\n       * @private\n       * @param {Object} element - jQuery object that is an Interchange instance\n       * @returns {Array} scenarios - Array of objects that have 'mq' and 'path' keys with corresponding keys\n       */\n\n    }, {\n      key: '_generateRules',\n      value: function _generateRules(element) {\n        var rulesList = [];\n        var rules;\n\n        if (this.options.rules) {\n          rules = this.options.rules;\n        } else {\n          rules = this.$element.data('interchange').match(/\\[.*?\\]/g);\n        }\n\n        for (var i in rules) {\n          var rule = rules[i].slice(1, -1).split(', ');\n          var path = rule.slice(0, -1).join('');\n          var query = rule[rule.length - 1];\n\n          if (Interchange.SPECIAL_QUERIES[query]) {\n            query = Interchange.SPECIAL_QUERIES[query];\n          }\n\n          rulesList.push({\n            path: path,\n            query: query\n          });\n        }\n\n        this.rules = rulesList;\n      }\n\n      /**\n       * Update the `src` property of an image, or change the HTML of a container, to the specified path.\n       * @function\n       * @param {String} path - Path to the image or HTML partial.\n       * @fires Interchange#replaced\n       */\n\n    }, {\n      key: 'replace',\n      value: function replace(path) {\n        if (this.currentPath === path) return;\n\n        var _this = this,\n            trigger = 'replaced.zf.interchange';\n\n        // Replacing images\n        if (this.$element[0].nodeName === 'IMG') {\n          this.$element.attr('src', path).load(function () {\n            _this.currentPath = path;\n          }).trigger(trigger);\n        }\n        // Replacing background images\n        else if (path.match(/\\.(gif|jpg|jpeg|tiff|png)([?#].*)?/i)) {\n            this.$element.css({ 'background-image': 'url(' + path + ')' }).trigger(trigger);\n          }\n          // Replacing HTML\n          else {\n              $.get(path, function (response) {\n                _this.$element.html(response).trigger(trigger);\n                $(response).foundation();\n                _this.currentPath = path;\n              });\n            }\n\n        /**\n         * Fires when content in an Interchange element is done being loaded.\n         * @event Interchange#replaced\n         */\n        // this.$element.trigger('replaced.zf.interchange');\n      }\n\n      /**\n       * Destroys an instance of interchange.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        //TODO this.\n      }\n    }]);\n\n    return Interchange;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Interchange.defaults = {\n    /**\n     * Rules to be applied to Interchange elements. Set with the `data-interchange` array notation.\n     * @option\n     */\n    rules: null\n  };\n\n  Interchange.SPECIAL_QUERIES = {\n    'landscape': 'screen and (orientation: landscape)',\n    'portrait': 'screen and (orientation: portrait)',\n    'retina': 'only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)'\n  };\n\n  // Window exports\n  Foundation.plugin(Interchange, 'Interchange');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Magellan module.\n   * @module foundation.magellan\n   */\n\n  var Magellan = function () {\n    /**\n     * Creates a new instance of Magellan.\n     * @class\n     * @fires Magellan#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Magellan(element, options) {\n      _classCallCheck(this, Magellan);\n\n      this.$element = element;\n      this.options = $.extend({}, Magellan.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Magellan');\n    }\n\n    /**\n     * Initializes the Magellan plugin and calls functions to get equalizer functioning on load.\n     * @private\n     */\n\n\n    _createClass(Magellan, [{\n      key: '_init',\n      value: function _init() {\n        var id = this.$element[0].id || Foundation.GetYoDigits(6, 'magellan');\n        var _this = this;\n        this.$targets = $('[data-magellan-target]');\n        this.$links = this.$element.find('a');\n        this.$element.attr({\n          'data-resize': id,\n          'data-scroll': id,\n          'id': id\n        });\n        this.$active = $();\n        this.scrollPos = parseInt(window.pageYOffset, 10);\n\n        this._events();\n      }\n\n      /**\n       * Calculates an array of pixel values that are the demarcation lines between locations on the page.\n       * Can be invoked if new elements are added or the size of a location changes.\n       * @function\n       */\n\n    }, {\n      key: 'calcPoints',\n      value: function calcPoints() {\n        var _this = this,\n            body = document.body,\n            html = document.documentElement;\n\n        this.points = [];\n        this.winHeight = Math.round(Math.max(window.innerHeight, html.clientHeight));\n        this.docHeight = Math.round(Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight));\n\n        this.$targets.each(function () {\n          var $tar = $(this),\n              pt = Math.round($tar.offset().top - _this.options.threshold);\n          $tar.targetPoint = pt;\n          _this.points.push(pt);\n        });\n      }\n\n      /**\n       * Initializes events for Magellan.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this,\n            $body = $('html, body'),\n            opts = {\n          duration: _this.options.animationDuration,\n          easing: _this.options.animationEasing\n        };\n        $(window).one('load', function () {\n          if (_this.options.deepLinking) {\n            if (location.hash) {\n              _this.scrollToLoc(location.hash);\n            }\n          }\n          _this.calcPoints();\n          _this._updateActive();\n        });\n\n        this.$element.on({\n          'resizeme.zf.trigger': this.reflow.bind(this),\n          'scrollme.zf.trigger': this._updateActive.bind(this)\n        }).on('click.zf.magellan', 'a[href^=\"#\"]', function (e) {\n          e.preventDefault();\n          var arrival = this.getAttribute('href');\n          _this.scrollToLoc(arrival);\n        });\n      }\n\n      /**\n       * Function to scroll to a given location on the page.\n       * @param {String} loc - a properly formatted jQuery id selector. Example: '#foo'\n       * @function\n       */\n\n    }, {\n      key: 'scrollToLoc',\n      value: function scrollToLoc(loc) {\n        var scrollPos = Math.round($(loc).offset().top - this.options.threshold / 2 - this.options.barOffset);\n\n        $('html, body').stop(true).animate({ scrollTop: scrollPos }, this.options.animationDuration, this.options.animationEasing);\n      }\n\n      /**\n       * Calls necessary functions to update Magellan upon DOM change\n       * @function\n       */\n\n    }, {\n      key: 'reflow',\n      value: function reflow() {\n        this.calcPoints();\n        this._updateActive();\n      }\n\n      /**\n       * Updates the visibility of an active location link, and updates the url hash for the page, if deepLinking enabled.\n       * @private\n       * @function\n       * @fires Magellan#update\n       */\n\n    }, {\n      key: '_updateActive',\n      value: function _updateActive() /*evt, elem, scrollPos*/{\n        var winPos = /*scrollPos ||*/parseInt(window.pageYOffset, 10),\n            curIdx;\n\n        if (winPos + this.winHeight === this.docHeight) {\n          curIdx = this.points.length - 1;\n        } else if (winPos < this.points[0]) {\n          curIdx = 0;\n        } else {\n          var isDown = this.scrollPos < winPos,\n              _this = this,\n              curVisible = this.points.filter(function (p, i) {\n            return isDown ? p <= winPos : p - _this.options.threshold <= winPos; //&& winPos >= _this.points[i -1] - _this.options.threshold;\n          });\n          curIdx = curVisible.length ? curVisible.length - 1 : 0;\n        }\n\n        this.$active.removeClass(this.options.activeClass);\n        this.$active = this.$links.eq(curIdx).addClass(this.options.activeClass);\n\n        if (this.options.deepLinking) {\n          var hash = this.$active[0].getAttribute('href');\n          if (window.history.pushState) {\n            window.history.pushState(null, null, hash);\n          } else {\n            window.location.hash = hash;\n          }\n        }\n\n        this.scrollPos = winPos;\n        /**\n         * Fires when magellan is finished updating to the new active element.\n         * @event Magellan#update\n         */\n        this.$element.trigger('update.zf.magellan', [this.$active]);\n      }\n\n      /**\n       * Destroys an instance of Magellan and resets the url of the window.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.trigger .zf.magellan').find('.' + this.options.activeClass).removeClass(this.options.activeClass);\n\n        if (this.options.deepLinking) {\n          var hash = this.$active[0].getAttribute('href');\n          window.location.hash.replace(hash, '');\n        }\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Magellan;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Magellan.defaults = {\n    /**\n     * Amount of time, in ms, the animated scrolling should take between locations.\n     * @option\n     * @example 500\n     */\n    animationDuration: 500,\n    /**\n     * Animation style to use when scrolling between locations.\n     * @option\n     * @example 'ease-in-out'\n     */\n    animationEasing: 'linear',\n    /**\n     * Number of pixels to use as a marker for location changes.\n     * @option\n     * @example 50\n     */\n    threshold: 50,\n    /**\n     * Class applied to the active locations link on the magellan container.\n     * @option\n     * @example 'active'\n     */\n    activeClass: 'active',\n    /**\n     * Allows the script to manipulate the url of the current page, and if supported, alter the history.\n     * @option\n     * @example true\n     */\n    deepLinking: false,\n    /**\n     * Number of pixels to offset the scroll of the page on item click if using a sticky nav bar.\n     * @option\n     * @example 25\n     */\n    barOffset: 0\n  };\n\n  // Window exports\n  Foundation.plugin(Magellan, 'Magellan');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * OffCanvas module.\n   * @module foundation.offcanvas\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.triggers\n   * @requires foundation.util.motion\n   */\n\n  var OffCanvas = function () {\n    /**\n     * Creates a new instance of an off-canvas wrapper.\n     * @class\n     * @fires OffCanvas#init\n     * @param {Object} element - jQuery object to initialize.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function OffCanvas(element, options) {\n      _classCallCheck(this, OffCanvas);\n\n      this.$element = element;\n      this.options = $.extend({}, OffCanvas.defaults, this.$element.data(), options);\n      this.$lastTrigger = $();\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'OffCanvas');\n    }\n\n    /**\n     * Initializes the off-canvas wrapper by adding the exit overlay (if needed).\n     * @function\n     * @private\n     */\n\n\n    _createClass(OffCanvas, [{\n      key: '_init',\n      value: function _init() {\n        var id = this.$element.attr('id');\n\n        this.$element.attr('aria-hidden', 'true');\n\n        // Find triggers that affect this element and add aria-expanded to them\n        $(document).find('[data-open=\"' + id + '\"], [data-close=\"' + id + '\"], [data-toggle=\"' + id + '\"]').attr('aria-expanded', 'false').attr('aria-controls', id);\n\n        // Add a close trigger over the body if necessary\n        if (this.options.closeOnClick) {\n          if ($('.js-off-canvas-exit').length) {\n            this.$exiter = $('.js-off-canvas-exit');\n          } else {\n            var exiter = document.createElement('div');\n            exiter.setAttribute('class', 'js-off-canvas-exit');\n            $('[data-off-canvas-content]').append(exiter);\n\n            this.$exiter = $(exiter);\n          }\n        }\n\n        this.options.isRevealed = this.options.isRevealed || new RegExp(this.options.revealClass, 'g').test(this.$element[0].className);\n\n        if (this.options.isRevealed) {\n          this.options.revealOn = this.options.revealOn || this.$element[0].className.match(/(reveal-for-medium|reveal-for-large)/g)[0].split('-')[2];\n          this._setMQChecker();\n        }\n        if (!this.options.transitionTime) {\n          this.options.transitionTime = parseFloat(window.getComputedStyle($('[data-off-canvas-wrapper]')[0]).transitionDuration) * 1000;\n        }\n      }\n\n      /**\n       * Adds event handlers to the off-canvas wrapper and the exit overlay.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this.$element.off('.zf.trigger .zf.offcanvas').on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': this.close.bind(this),\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'keydown.zf.offcanvas': this._handleKeyboard.bind(this)\n        });\n\n        if (this.options.closeOnClick && this.$exiter.length) {\n          this.$exiter.on({ 'click.zf.offcanvas': this.close.bind(this) });\n        }\n      }\n\n      /**\n       * Applies event listener for elements that will reveal at certain breakpoints.\n       * @private\n       */\n\n    }, {\n      key: '_setMQChecker',\n      value: function _setMQChecker() {\n        var _this = this;\n\n        $(window).on('changed.zf.mediaquery', function () {\n          if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n            _this.reveal(true);\n          } else {\n            _this.reveal(false);\n          }\n        }).one('load.zf.offcanvas', function () {\n          if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n            _this.reveal(true);\n          }\n        });\n      }\n\n      /**\n       * Handles the revealing/hiding the off-canvas at breakpoints, not the same as open.\n       * @param {Boolean} isRevealed - true if element should be revealed.\n       * @function\n       */\n\n    }, {\n      key: 'reveal',\n      value: function reveal(isRevealed) {\n        var $closer = this.$element.find('[data-close]');\n        if (isRevealed) {\n          this.close();\n          this.isRevealed = true;\n          // if (!this.options.forceTop) {\n          //   var scrollPos = parseInt(window.pageYOffset);\n          //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n          // }\n          // if (this.options.isSticky) { this._stick(); }\n          this.$element.off('open.zf.trigger toggle.zf.trigger');\n          if ($closer.length) {\n            $closer.hide();\n          }\n        } else {\n          this.isRevealed = false;\n          // if (this.options.isSticky || !this.options.forceTop) {\n          //   this.$element[0].style.transform = '';\n          //   $(window).off('scroll.zf.offcanvas');\n          // }\n          this.$element.on({\n            'open.zf.trigger': this.open.bind(this),\n            'toggle.zf.trigger': this.toggle.bind(this)\n          });\n          if ($closer.length) {\n            $closer.show();\n          }\n        }\n      }\n\n      /**\n       * Opens the off-canvas menu.\n       * @function\n       * @param {Object} event - Event object passed from listener.\n       * @param {jQuery} trigger - element that triggered the off-canvas to open.\n       * @fires OffCanvas#opened\n       */\n\n    }, {\n      key: 'open',\n      value: function open(event, trigger) {\n        if (this.$element.hasClass('is-open') || this.isRevealed) {\n          return;\n        }\n        var _this = this,\n            $body = $(document.body);\n\n        if (this.options.forceTop) {\n          $('body').scrollTop(0);\n        }\n        // window.pageYOffset = 0;\n\n        // if (!this.options.forceTop) {\n        //   var scrollPos = parseInt(window.pageYOffset);\n        //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n        //   if (this.$exiter.length) {\n        //     this.$exiter[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n        //   }\n        // }\n        /**\n         * Fires when the off-canvas menu opens.\n         * @event OffCanvas#opened\n         */\n        Foundation.Move(this.options.transitionTime, this.$element, function () {\n          $('[data-off-canvas-wrapper]').addClass('is-off-canvas-open is-open-' + _this.options.position);\n\n          _this.$element.addClass('is-open');\n\n          // if (_this.options.isSticky) {\n          //   _this._stick();\n          // }\n        });\n        this.$element.attr('aria-hidden', 'false').trigger('opened.zf.offcanvas');\n\n        if (this.options.closeOnClick) {\n          this.$exiter.addClass('is-visible');\n        }\n\n        if (trigger) {\n          this.$lastTrigger = trigger.attr('aria-expanded', 'true');\n        }\n\n        if (this.options.autoFocus) {\n          this.$element.one(Foundation.transitionend(this.$element), function () {\n            _this.$element.find('a, button').eq(0).focus();\n          });\n        }\n\n        if (this.options.trapFocus) {\n          $('[data-off-canvas-content]').attr('tabindex', '-1');\n          this._trapFocus();\n        }\n      }\n\n      /**\n       * Traps focus within the offcanvas on open.\n       * @private\n       */\n\n    }, {\n      key: '_trapFocus',\n      value: function _trapFocus() {\n        var focusable = Foundation.Keyboard.findFocusable(this.$element),\n            first = focusable.eq(0),\n            last = focusable.eq(-1);\n\n        focusable.off('.zf.offcanvas').on('keydown.zf.offcanvas', function (e) {\n          if (e.which === 9 || e.keycode === 9) {\n            if (e.target === last[0] && !e.shiftKey) {\n              e.preventDefault();\n              first.focus();\n            }\n            if (e.target === first[0] && e.shiftKey) {\n              e.preventDefault();\n              last.focus();\n            }\n          }\n        });\n      }\n\n      /**\n       * Allows the offcanvas to appear sticky utilizing translate properties.\n       * @private\n       */\n      // OffCanvas.prototype._stick = function() {\n      //   var elStyle = this.$element[0].style;\n      //\n      //   if (this.options.closeOnClick) {\n      //     var exitStyle = this.$exiter[0].style;\n      //   }\n      //\n      //   $(window).on('scroll.zf.offcanvas', function(e) {\n      //     console.log(e);\n      //     var pageY = window.pageYOffset;\n      //     elStyle.transform = 'translate(0,' + pageY + 'px)';\n      //     if (exitStyle !== undefined) { exitStyle.transform = 'translate(0,' + pageY + 'px)'; }\n      //   });\n      //   // this.$element.trigger('stuck.zf.offcanvas');\n      // };\n      /**\n       * Closes the off-canvas menu.\n       * @function\n       * @param {Function} cb - optional cb to fire after closure.\n       * @fires OffCanvas#closed\n       */\n\n    }, {\n      key: 'close',\n      value: function close(cb) {\n        if (!this.$element.hasClass('is-open') || this.isRevealed) {\n          return;\n        }\n\n        var _this = this;\n\n        //  Foundation.Move(this.options.transitionTime, this.$element, function() {\n        $('[data-off-canvas-wrapper]').removeClass('is-off-canvas-open is-open-' + _this.options.position);\n        _this.$element.removeClass('is-open');\n        // Foundation._reflow();\n        // });\n        this.$element.attr('aria-hidden', 'true')\n        /**\n         * Fires when the off-canvas menu opens.\n         * @event OffCanvas#closed\n         */\n        .trigger('closed.zf.offcanvas');\n        // if (_this.options.isSticky || !_this.options.forceTop) {\n        //   setTimeout(function() {\n        //     _this.$element[0].style.transform = '';\n        //     $(window).off('scroll.zf.offcanvas');\n        //   }, this.options.transitionTime);\n        // }\n        if (this.options.closeOnClick) {\n          this.$exiter.removeClass('is-visible');\n        }\n\n        this.$lastTrigger.attr('aria-expanded', 'false');\n        if (this.options.trapFocus) {\n          $('[data-off-canvas-content]').removeAttr('tabindex');\n        }\n      }\n\n      /**\n       * Toggles the off-canvas menu open or closed.\n       * @function\n       * @param {Object} event - Event object passed from listener.\n       * @param {jQuery} trigger - element that triggered the off-canvas to open.\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle(event, trigger) {\n        if (this.$element.hasClass('is-open')) {\n          this.close(event, trigger);\n        } else {\n          this.open(event, trigger);\n        }\n      }\n\n      /**\n       * Handles keyboard input when detected. When the escape key is pressed, the off-canvas menu closes, and focus is restored to the element that opened the menu.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_handleKeyboard',\n      value: function _handleKeyboard(event) {\n        if (event.which !== 27) return;\n\n        event.stopPropagation();\n        event.preventDefault();\n        this.close();\n        this.$lastTrigger.focus();\n      }\n\n      /**\n       * Destroys the offcanvas plugin.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.close();\n        this.$element.off('.zf.trigger .zf.offcanvas');\n        this.$exiter.off('.zf.offcanvas');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return OffCanvas;\n  }();\n\n  OffCanvas.defaults = {\n    /**\n     * Allow the user to click outside of the menu to close it.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n\n    /**\n     * Amount of time in ms the open and close transition requires. If none selected, pulls from body style.\n     * @option\n     * @example 500\n     */\n    transitionTime: 0,\n\n    /**\n     * Direction the offcanvas opens from. Determines class applied to body.\n     * @option\n     * @example left\n     */\n    position: 'left',\n\n    /**\n     * Force the page to scroll to top on open.\n     * @option\n     * @example true\n     */\n    forceTop: true,\n\n    /**\n     * Allow the offcanvas to remain open for certain breakpoints.\n     * @option\n     * @example false\n     */\n    isRevealed: false,\n\n    /**\n     * Breakpoint at which to reveal. JS will use a RegExp to target standard classes, if changing classnames, pass your class with the `revealClass` option.\n     * @option\n     * @example reveal-for-large\n     */\n    revealOn: null,\n\n    /**\n     * Force focus to the offcanvas on open. If true, will focus the opening trigger on close.\n     * @option\n     * @example true\n     */\n    autoFocus: true,\n\n    /**\n     * Class used to force an offcanvas to remain open. Foundation defaults for this are `reveal-for-large` & `reveal-for-medium`.\n     * @option\n     * TODO improve the regex testing for this.\n     * @example reveal-for-large\n     */\n    revealClass: 'reveal-for-',\n\n    /**\n     * Triggers optional focus trapping when opening an offcanvas. Sets tabindex of [data-off-canvas-content] to -1 for accessibility purposes.\n     * @option\n     * @example true\n     */\n    trapFocus: false\n  };\n\n  // Window exports\n  Foundation.plugin(OffCanvas, 'OffCanvas');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Orbit module.\n   * @module foundation.orbit\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   * @requires foundation.util.timerAndImageLoader\n   * @requires foundation.util.touch\n   */\n\n  var Orbit = function () {\n    /**\n    * Creates a new instance of an orbit carousel.\n    * @class\n    * @param {jQuery} element - jQuery object to make into an Orbit Carousel.\n    * @param {Object} options - Overrides to the default plugin settings.\n    */\n\n    function Orbit(element, options) {\n      _classCallCheck(this, Orbit);\n\n      this.$element = element;\n      this.options = $.extend({}, Orbit.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Orbit');\n      Foundation.Keyboard.register('Orbit', {\n        'ltr': {\n          'ARROW_RIGHT': 'next',\n          'ARROW_LEFT': 'previous'\n        },\n        'rtl': {\n          'ARROW_LEFT': 'next',\n          'ARROW_RIGHT': 'previous'\n        }\n      });\n    }\n\n    /**\n    * Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\n    * @function\n    * @private\n    */\n\n\n    _createClass(Orbit, [{\n      key: '_init',\n      value: function _init() {\n        this.$wrapper = this.$element.find('.' + this.options.containerClass);\n        this.$slides = this.$element.find('.' + this.options.slideClass);\n        var $images = this.$element.find('img'),\n            initActive = this.$slides.filter('.is-active');\n\n        if (!initActive.length) {\n          this.$slides.eq(0).addClass('is-active');\n        }\n\n        if (!this.options.useMUI) {\n          this.$slides.addClass('no-motionui');\n        }\n\n        if ($images.length) {\n          Foundation.onImagesLoaded($images, this._prepareForOrbit.bind(this));\n        } else {\n          this._prepareForOrbit(); //hehe\n        }\n\n        if (this.options.bullets) {\n          this._loadBullets();\n        }\n\n        this._events();\n\n        if (this.options.autoPlay && this.$slides.length > 1) {\n          this.geoSync();\n        }\n\n        if (this.options.accessible) {\n          // allow wrapper to be focusable to enable arrow navigation\n          this.$wrapper.attr('tabindex', 0);\n        }\n      }\n\n      /**\n      * Creates a jQuery collection of bullets, if they are being used.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_loadBullets',\n      value: function _loadBullets() {\n        this.$bullets = this.$element.find('.' + this.options.boxOfBullets).find('button');\n      }\n\n      /**\n      * Sets a `timer` object on the orbit, and starts the counter for the next slide.\n      * @function\n      */\n\n    }, {\n      key: 'geoSync',\n      value: function geoSync() {\n        var _this = this;\n        this.timer = new Foundation.Timer(this.$element, {\n          duration: this.options.timerDelay,\n          infinite: false\n        }, function () {\n          _this.changeSlide(true);\n        });\n        this.timer.start();\n      }\n\n      /**\n      * Sets wrapper and slide heights for the orbit.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_prepareForOrbit',\n      value: function _prepareForOrbit() {\n        var _this = this;\n        this._setWrapperHeight(function (max) {\n          _this._setSlideHeight(max);\n        });\n      }\n\n      /**\n      * Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\n      * @function\n      * @private\n      * @param {Function} cb - a callback function to fire when complete.\n      */\n\n    }, {\n      key: '_setWrapperHeight',\n      value: function _setWrapperHeight(cb) {\n        //rewrite this to `for` loop\n        var max = 0,\n            temp,\n            counter = 0;\n\n        this.$slides.each(function () {\n          temp = this.getBoundingClientRect().height;\n          $(this).attr('data-slide', counter);\n\n          if (counter) {\n            //if not the first slide, set css position and display property\n            $(this).css({ 'position': 'relative', 'display': 'none' });\n          }\n          max = temp > max ? temp : max;\n          counter++;\n        });\n\n        if (counter === this.$slides.length) {\n          this.$wrapper.css({ 'height': max }); //only change the wrapper height property once.\n          cb(max); //fire callback with max height dimension.\n        }\n      }\n\n      /**\n      * Sets the max-height of each slide.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_setSlideHeight',\n      value: function _setSlideHeight(height) {\n        this.$slides.each(function () {\n          $(this).css('max-height', height);\n        });\n      }\n\n      /**\n      * Adds event listeners to basically everything within the element.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        //***************************************\n        //**Now using custom event - thanks to:**\n        //**      Yohai Ararat of Toronto      **\n        //***************************************\n        if (this.$slides.length > 1) {\n\n          if (this.options.swipe) {\n            this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit').on('swipeleft.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide(true);\n            }).on('swiperight.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide(false);\n            });\n          }\n          //***************************************\n\n          if (this.options.autoPlay) {\n            this.$slides.on('click.zf.orbit', function () {\n              _this.$element.data('clickedOn', _this.$element.data('clickedOn') ? false : true);\n              _this.timer[_this.$element.data('clickedOn') ? 'pause' : 'start']();\n            });\n\n            if (this.options.pauseOnHover) {\n              this.$element.on('mouseenter.zf.orbit', function () {\n                _this.timer.pause();\n              }).on('mouseleave.zf.orbit', function () {\n                if (!_this.$element.data('clickedOn')) {\n                  _this.timer.start();\n                }\n              });\n            }\n          }\n\n          if (this.options.navButtons) {\n            var $controls = this.$element.find('.' + this.options.nextClass + ', .' + this.options.prevClass);\n            $controls.attr('tabindex', 0)\n            //also need to handle enter/return and spacebar key presses\n            .on('click.zf.orbit touchend.zf.orbit', function () {\n              _this.changeSlide($(this).hasClass(_this.options.nextClass));\n            });\n          }\n\n          if (this.options.bullets) {\n            this.$bullets.on('click.zf.orbit touchend.zf.orbit', function () {\n              if (/is-active/g.test(this.className)) {\n                return false;\n              } //if this is active, kick out of function.\n              var idx = $(this).data('slide'),\n                  ltr = idx > _this.$slides.filter('.is-active').data('slide'),\n                  $slide = _this.$slides.eq(idx);\n\n              _this.changeSlide(ltr, $slide, idx);\n            });\n          }\n\n          this.$wrapper.add(this.$bullets).on('keydown.zf.orbit', function (e) {\n            // handle keyboard event with keyboard util\n            Foundation.Keyboard.handleKey(e, 'Orbit', {\n              next: function () {\n                _this.changeSlide(true);\n              },\n              previous: function () {\n                _this.changeSlide(false);\n              },\n              handled: function () {\n                // if bullet is focused, make sure focus moves\n                if ($(e.target).is(_this.$bullets)) {\n                  _this.$bullets.filter('.is-active').focus();\n                }\n              }\n            });\n          });\n        }\n      }\n\n      /**\n      * Changes the current slide to a new one.\n      * @function\n      * @param {Boolean} isLTR - flag if the slide should move left to right.\n      * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\n      * @param {Number} idx - the index of the new slide in its collection, if one chosen.\n      * @fires Orbit#slidechange\n      */\n\n    }, {\n      key: 'changeSlide',\n      value: function changeSlide(isLTR, chosenSlide, idx) {\n        var $curSlide = this.$slides.filter('.is-active').eq(0);\n\n        if (/mui/g.test($curSlide[0].className)) {\n          return false;\n        } //if the slide is currently animating, kick out of the function\n\n        var $firstSlide = this.$slides.first(),\n            $lastSlide = this.$slides.last(),\n            dirIn = isLTR ? 'Right' : 'Left',\n            dirOut = isLTR ? 'Left' : 'Right',\n            _this = this,\n            $newSlide;\n\n        if (!chosenSlide) {\n          //most of the time, this will be auto played or clicked from the navButtons.\n          $newSlide = isLTR ? //if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!\n          this.options.infiniteWrap ? $curSlide.next('.' + this.options.slideClass).length ? $curSlide.next('.' + this.options.slideClass) : $firstSlide : $curSlide.next('.' + this.options.slideClass) : //pick next slide if moving left to right\n          this.options.infiniteWrap ? $curSlide.prev('.' + this.options.slideClass).length ? $curSlide.prev('.' + this.options.slideClass) : $lastSlide : $curSlide.prev('.' + this.options.slideClass); //pick prev slide if moving right to left\n        } else {\n            $newSlide = chosenSlide;\n          }\n\n        if ($newSlide.length) {\n          if (this.options.bullets) {\n            idx = idx || this.$slides.index($newSlide); //grab index to update bullets\n            this._updateBullets(idx);\n          }\n\n          if (this.options.useMUI) {\n            Foundation.Motion.animateIn($newSlide.addClass('is-active').css({ 'position': 'absolute', 'top': 0 }), this.options['animInFrom' + dirIn], function () {\n              $newSlide.css({ 'position': 'relative', 'display': 'block' }).attr('aria-live', 'polite');\n            });\n\n            Foundation.Motion.animateOut($curSlide.removeClass('is-active'), this.options['animOutTo' + dirOut], function () {\n              $curSlide.removeAttr('aria-live');\n              if (_this.options.autoPlay && !_this.timer.isPaused) {\n                _this.timer.restart();\n              }\n              //do stuff?\n            });\n          } else {\n              $curSlide.removeClass('is-active is-in').removeAttr('aria-live').hide();\n              $newSlide.addClass('is-active is-in').attr('aria-live', 'polite').show();\n              if (this.options.autoPlay && !this.timer.isPaused) {\n                this.timer.restart();\n              }\n            }\n          /**\n          * Triggers when the slide has finished animating in.\n          * @event Orbit#slidechange\n          */\n          this.$element.trigger('slidechange.zf.orbit', [$newSlide]);\n        }\n      }\n\n      /**\n      * Updates the active state of the bullets, if displayed.\n      * @function\n      * @private\n      * @param {Number} idx - the index of the current slide.\n      */\n\n    }, {\n      key: '_updateBullets',\n      value: function _updateBullets(idx) {\n        var $oldBullet = this.$element.find('.' + this.options.boxOfBullets).find('.is-active').removeClass('is-active').blur(),\n            span = $oldBullet.find('span:last').detach(),\n            $newBullet = this.$bullets.eq(idx).addClass('is-active').append(span);\n      }\n\n      /**\n      * Destroys the carousel and hides the element.\n      * @function\n      */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Orbit;\n  }();\n\n  Orbit.defaults = {\n    /**\n    * Tells the JS to look for and loadBullets.\n    * @option\n    * @example true\n    */\n    bullets: true,\n    /**\n    * Tells the JS to apply event listeners to nav buttons\n    * @option\n    * @example true\n    */\n    navButtons: true,\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-in-right'\n    */\n    animInFromRight: 'slide-in-right',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-out-right'\n    */\n    animOutToRight: 'slide-out-right',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-in-left'\n    *\n    */\n    animInFromLeft: 'slide-in-left',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-out-left'\n    */\n    animOutToLeft: 'slide-out-left',\n    /**\n    * Allows Orbit to automatically animate on page load.\n    * @option\n    * @example true\n    */\n    autoPlay: true,\n    /**\n    * Amount of time, in ms, between slide transitions\n    * @option\n    * @example 5000\n    */\n    timerDelay: 5000,\n    /**\n    * Allows Orbit to infinitely loop through the slides\n    * @option\n    * @example true\n    */\n    infiniteWrap: true,\n    /**\n    * Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\n    * @option\n    * @example true\n    */\n    swipe: true,\n    /**\n    * Allows the timing function to pause animation on hover.\n    * @option\n    * @example true\n    */\n    pauseOnHover: true,\n    /**\n    * Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\n    * @option\n    * @example true\n    */\n    accessible: true,\n    /**\n    * Class applied to the container of Orbit\n    * @option\n    * @example 'orbit-container'\n    */\n    containerClass: 'orbit-container',\n    /**\n    * Class applied to individual slides.\n    * @option\n    * @example 'orbit-slide'\n    */\n    slideClass: 'orbit-slide',\n    /**\n    * Class applied to the bullet container. You're welcome.\n    * @option\n    * @example 'orbit-bullets'\n    */\n    boxOfBullets: 'orbit-bullets',\n    /**\n    * Class applied to the `next` navigation button.\n    * @option\n    * @example 'orbit-next'\n    */\n    nextClass: 'orbit-next',\n    /**\n    * Class applied to the `previous` navigation button.\n    * @option\n    * @example 'orbit-previous'\n    */\n    prevClass: 'orbit-previous',\n    /**\n    * Boolean to flag the js to use motion ui classes or not. Default to true for backwards compatability.\n    * @option\n    * @example true\n    */\n    useMUI: true\n  };\n\n  // Window exports\n  Foundation.plugin(Orbit, 'Orbit');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * ResponsiveMenu module.\n   * @module foundation.responsiveMenu\n   * @requires foundation.util.triggers\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.accordionMenu\n   * @requires foundation.util.drilldown\n   * @requires foundation.util.dropdown-menu\n   */\n\n  var ResponsiveMenu = function () {\n    /**\n     * Creates a new instance of a responsive menu.\n     * @class\n     * @fires ResponsiveMenu#init\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function ResponsiveMenu(element, options) {\n      _classCallCheck(this, ResponsiveMenu);\n\n      this.$element = $(element);\n      this.rules = this.$element.data('responsive-menu');\n      this.currentMq = null;\n      this.currentPlugin = null;\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveMenu');\n    }\n\n    /**\n     * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\n     * @function\n     * @private\n     */\n\n\n    _createClass(ResponsiveMenu, [{\n      key: '_init',\n      value: function _init() {\n        var rulesTree = {};\n\n        // Parse rules from \"classes\" in data attribute\n        var rules = this.rules.split(' ');\n\n        // Iterate through every rule found\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i].split('-');\n          var ruleSize = rule.length > 1 ? rule[0] : 'small';\n          var rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n          if (MenuPlugins[rulePlugin] !== null) {\n            rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n          }\n        }\n\n        this.rules = rulesTree;\n\n        if (!$.isEmptyObject(rulesTree)) {\n          this._checkMediaQueries();\n        }\n      }\n\n      /**\n       * Initializes events for the Menu.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        $(window).on('changed.zf.mediaquery', function () {\n          _this._checkMediaQueries();\n        });\n        // $(window).on('resize.zf.ResponsiveMenu', function() {\n        //   _this._checkMediaQueries();\n        // });\n      }\n\n      /**\n       * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_checkMediaQueries',\n      value: function _checkMediaQueries() {\n        var matchedMq,\n            _this = this;\n        // Iterate through each rule and find the last matching rule\n        $.each(this.rules, function (key) {\n          if (Foundation.MediaQuery.atLeast(key)) {\n            matchedMq = key;\n          }\n        });\n\n        // No match? No dice\n        if (!matchedMq) return;\n\n        // Plugin already initialized? We good\n        if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\n\n        // Remove existing plugin-specific CSS classes\n        $.each(MenuPlugins, function (key, value) {\n          _this.$element.removeClass(value.cssClass);\n        });\n\n        // Add the CSS class for the new plugin\n        this.$element.addClass(this.rules[matchedMq].cssClass);\n\n        // Create an instance of the new plugin\n        if (this.currentPlugin) this.currentPlugin.destroy();\n        this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n      }\n\n      /**\n       * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.currentPlugin.destroy();\n        $(window).off('.zf.ResponsiveMenu');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return ResponsiveMenu;\n  }();\n\n  ResponsiveMenu.defaults = {};\n\n  // The plugin matches the plugin classes with these plugin instances.\n  var MenuPlugins = {\n    dropdown: {\n      cssClass: 'dropdown',\n      plugin: Foundation._plugins['dropdown-menu'] || null\n    },\n    drilldown: {\n      cssClass: 'drilldown',\n      plugin: Foundation._plugins['drilldown'] || null\n    },\n    accordion: {\n      cssClass: 'accordion-menu',\n      plugin: Foundation._plugins['accordion-menu'] || null\n    }\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveMenu, 'ResponsiveMenu');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * ResponsiveToggle module.\n   * @module foundation.responsiveToggle\n   * @requires foundation.util.mediaQuery\n   */\n\n  var ResponsiveToggle = function () {\n    /**\n     * Creates a new instance of Tab Bar.\n     * @class\n     * @fires ResponsiveToggle#init\n     * @param {jQuery} element - jQuery object to attach tab bar functionality to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function ResponsiveToggle(element, options) {\n      _classCallCheck(this, ResponsiveToggle);\n\n      this.$element = $(element);\n      this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveToggle');\n    }\n\n    /**\n     * Initializes the tab bar by finding the target element, toggling element, and running update().\n     * @function\n     * @private\n     */\n\n\n    _createClass(ResponsiveToggle, [{\n      key: '_init',\n      value: function _init() {\n        var targetID = this.$element.data('responsive-toggle');\n        if (!targetID) {\n          console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\n        }\n\n        this.$targetMenu = $('#' + targetID);\n        this.$toggler = this.$element.find('[data-toggle]');\n\n        this._update();\n      }\n\n      /**\n       * Adds necessary event handlers for the tab bar to work.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        $(window).on('changed.zf.mediaquery', this._update.bind(this));\n\n        this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\n      }\n\n      /**\n       * Checks the current media query to determine if the tab bar should be visible or hidden.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_update',\n      value: function _update() {\n        // Mobile\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n          this.$element.show();\n          this.$targetMenu.hide();\n        }\n\n        // Desktop\n        else {\n            this.$element.hide();\n            this.$targetMenu.show();\n          }\n      }\n\n      /**\n       * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\n       * @function\n       * @fires ResponsiveToggle#toggled\n       */\n\n    }, {\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n          this.$targetMenu.toggle(0);\n\n          /**\n           * Fires when the element attached to the tab bar toggles.\n           * @event ResponsiveToggle#toggled\n           */\n          this.$element.trigger('toggled.zf.responsiveToggle');\n        }\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        //TODO this...\n      }\n    }]);\n\n    return ResponsiveToggle;\n  }();\n\n  ResponsiveToggle.defaults = {\n    /**\n     * The breakpoint after which the menu is always shown, and the tab bar is hidden.\n     * @option\n     * @example 'medium'\n     */\n    hideFor: 'medium'\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Reveal module.\n   * @module foundation.reveal\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.triggers\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.motion if using animations\n   */\n\n  var Reveal = function () {\n    /**\n     * Creates a new instance of Reveal.\n     * @class\n     * @param {jQuery} element - jQuery object to use for the modal.\n     * @param {Object} options - optional parameters.\n     */\n\n    function Reveal(element, options) {\n      _classCallCheck(this, Reveal);\n\n      this.$element = element;\n      this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Reveal');\n      Foundation.Keyboard.register('Reveal', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close',\n        'TAB': 'tab_forward',\n        'SHIFT_TAB': 'tab_backward'\n      });\n    }\n\n    /**\n     * Initializes the modal by adding the overlay and close buttons, (if selected).\n     * @private\n     */\n\n\n    _createClass(Reveal, [{\n      key: '_init',\n      value: function _init() {\n        this.id = this.$element.attr('id');\n        this.isActive = false;\n        this.cached = { mq: Foundation.MediaQuery.current };\n        this.isiOS = iPhoneSniff();\n\n        if (this.isiOS) {\n          this.$element.addClass('is-ios');\n        }\n\n        this.$anchor = $('[data-open=\"' + this.id + '\"]').length ? $('[data-open=\"' + this.id + '\"]') : $('[data-toggle=\"' + this.id + '\"]');\n\n        if (this.$anchor.length) {\n          var anchorId = this.$anchor[0].id || Foundation.GetYoDigits(6, 'reveal');\n\n          this.$anchor.attr({\n            'aria-controls': this.id,\n            'id': anchorId,\n            'aria-haspopup': true,\n            'tabindex': 0\n          });\n          this.$element.attr({ 'aria-labelledby': anchorId });\n        }\n\n        if (this.options.fullScreen || this.$element.hasClass('full')) {\n          this.options.fullScreen = true;\n          this.options.overlay = false;\n        }\n        if (this.options.overlay && !this.$overlay) {\n          this.$overlay = this._makeOverlay(this.id);\n        }\n\n        this.$element.attr({\n          'role': 'dialog',\n          'aria-hidden': true,\n          'data-yeti-box': this.id,\n          'data-resize': this.id\n        });\n\n        if (this.$overlay) {\n          this.$element.detach().appendTo(this.$overlay);\n        } else {\n          this.$element.detach().appendTo($('body'));\n          this.$element.addClass('without-overlay');\n        }\n        this._events();\n        if (this.options.deepLink && window.location.hash === '#' + this.id) {\n          $(window).one('load.zf.reveal', this.open.bind(this));\n        }\n      }\n\n      /**\n       * Creates an overlay div to display behind the modal.\n       * @private\n       */\n\n    }, {\n      key: '_makeOverlay',\n      value: function _makeOverlay(id) {\n        var $overlay = $('<div></div>').addClass('reveal-overlay').attr({ 'tabindex': -1, 'aria-hidden': true }).appendTo('body');\n        return $overlay;\n      }\n\n      /**\n       * Updates position of modal\n       * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\n       * @private\n       */\n\n    }, {\n      key: '_updatePosition',\n      value: function _updatePosition() {\n        var width = this.$element.outerWidth();\n        var outerWidth = $(window).width();\n        var height = this.$element.outerHeight();\n        var outerHeight = $(window).height();\n        var left = parseInt((outerWidth - width) / 2, 10);\n        var top;\n        if (height > outerHeight) {\n          top = parseInt(Math.min(100, outerHeight / 10), 10);\n        } else {\n          top = parseInt((outerHeight - height) / 4, 10);\n        }\n        this.$element.css({ top: top + 'px' });\n        // only worry about left if we don't have an overlay, otherwise we're perfectly in the middle\n        if (!this.$overlay) {\n          this.$element.css({ left: left + 'px' });\n        }\n      }\n\n      /**\n       * Adds event handlers for the modal.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this.$element.on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': this.close.bind(this),\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'resizeme.zf.trigger': function () {\n            _this._updatePosition();\n          }\n        });\n\n        if (this.$anchor.length) {\n          this.$anchor.on('keydown.zf.reveal', function (e) {\n            if (e.which === 13 || e.which === 32) {\n              e.stopPropagation();\n              e.preventDefault();\n              _this.open();\n            }\n          });\n        }\n\n        if (this.options.closeOnClick && this.options.overlay) {\n          this.$overlay.off('.zf.reveal').on('click.zf.reveal', function (e) {\n            if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) {\n              return;\n            }\n            _this.close();\n          });\n        }\n        if (this.options.deepLink) {\n          $(window).on('popstate.zf.reveal:' + this.id, this._handleState.bind(this));\n        }\n      }\n\n      /**\n       * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\n       * @private\n       */\n\n    }, {\n      key: '_handleState',\n      value: function _handleState(e) {\n        if (window.location.hash === '#' + this.id && !this.isActive) {\n          this.open();\n        } else {\n          this.close();\n        }\n      }\n\n      /**\n       * Opens the modal controlled by `this.$anchor`, and closes all others by default.\n       * @function\n       * @fires Reveal#closeme\n       * @fires Reveal#open\n       */\n\n    }, {\n      key: 'open',\n      value: function open() {\n        var _this2 = this;\n\n        if (this.options.deepLink) {\n          var hash = '#' + this.id;\n\n          if (window.history.pushState) {\n            window.history.pushState(null, null, hash);\n          } else {\n            window.location.hash = hash;\n          }\n        }\n\n        this.isActive = true;\n\n        // Make elements invisible, but remove display: none so we can get size and positioning\n        this.$element.css({ 'visibility': 'hidden' }).show().scrollTop(0);\n        if (this.options.overlay) {\n          this.$overlay.css({ 'visibility': 'hidden' }).show();\n        }\n\n        this._updatePosition();\n\n        this.$element.hide().css({ 'visibility': '' });\n\n        if (this.$overlay) {\n          this.$overlay.css({ 'visibility': '' }).hide();\n        }\n\n        if (!this.options.multipleOpened) {\n          /**\n           * Fires immediately before the modal opens.\n           * Closes any other modals that are currently open\n           * @event Reveal#closeme\n           */\n          this.$element.trigger('closeme.zf.reveal', this.id);\n        }\n\n        // Motion UI method of reveal\n        if (this.options.animationIn) {\n          if (this.options.overlay) {\n            Foundation.Motion.animateIn(this.$overlay, 'fade-in');\n          }\n          Foundation.Motion.animateIn(this.$element, this.options.animationIn, function () {\n            this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\n          });\n        }\n        // jQuery method of reveal\n        else {\n            if (this.options.overlay) {\n              this.$overlay.show(0);\n            }\n            this.$element.show(this.options.showDelay);\n          }\n\n        // handle accessibility\n        this.$element.attr({\n          'aria-hidden': false,\n          'tabindex': -1\n        }).focus();\n\n        /**\n         * Fires when the modal has successfully opened.\n         * @event Reveal#open\n         */\n        this.$element.trigger('open.zf.reveal');\n\n        if (this.isiOS) {\n          var scrollPos = window.pageYOffset;\n          $('html, body').addClass('is-reveal-open').scrollTop(scrollPos);\n        } else {\n          $('body').addClass('is-reveal-open');\n        }\n\n        $('body').addClass('is-reveal-open').attr('aria-hidden', this.options.overlay || this.options.fullScreen ? true : false);\n\n        setTimeout(function () {\n          _this2._extraHandlers();\n        }, 0);\n      }\n\n      /**\n       * Adds extra event handlers for the body and window if necessary.\n       * @private\n       */\n\n    }, {\n      key: '_extraHandlers',\n      value: function _extraHandlers() {\n        var _this = this;\n        this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\n\n        if (!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen) {\n          $('body').on('click.zf.reveal', function (e) {\n            if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) {\n              return;\n            }\n            _this.close();\n          });\n        }\n\n        if (this.options.closeOnEsc) {\n          $(window).on('keydown.zf.reveal', function (e) {\n            Foundation.Keyboard.handleKey(e, 'Reveal', {\n              close: function () {\n                if (_this.options.closeOnEsc) {\n                  _this.close();\n                  _this.$anchor.focus();\n                }\n              }\n            });\n            if (_this.focusableElements.length === 0) {\n              // no focusable elements inside the modal at all, prevent tabbing in general\n              e.preventDefault();\n            }\n          });\n        }\n\n        // lock focus within modal while tabbing\n        this.$element.on('keydown.zf.reveal', function (e) {\n          var $target = $(this);\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Reveal', {\n            tab_forward: function () {\n              if (_this.$element.find(':focus').is(_this.focusableElements.eq(-1))) {\n                // left modal downwards, setting focus to first element\n                _this.focusableElements.eq(0).focus();\n                e.preventDefault();\n              }\n            },\n            tab_backward: function () {\n              if (_this.$element.find(':focus').is(_this.focusableElements.eq(0)) || _this.$element.is(':focus')) {\n                // left modal upwards, setting focus to last element\n                _this.focusableElements.eq(-1).focus();\n                e.preventDefault();\n              }\n            },\n            open: function () {\n              if (_this.$element.find(':focus').is(_this.$element.find('[data-close]'))) {\n                setTimeout(function () {\n                  // set focus back to anchor if close button has been activated\n                  _this.$anchor.focus();\n                }, 1);\n              } else if ($target.is(_this.focusableElements)) {\n                // dont't trigger if acual element has focus (i.e. inputs, links, ...)\n                _this.open();\n              }\n            },\n            close: function () {\n              if (_this.options.closeOnEsc) {\n                _this.close();\n                _this.$anchor.focus();\n              }\n            }\n          });\n        });\n      }\n\n      /**\n       * Closes the modal.\n       * @function\n       * @fires Reveal#closed\n       */\n\n    }, {\n      key: 'close',\n      value: function close() {\n        if (!this.isActive || !this.$element.is(':visible')) {\n          return false;\n        }\n        var _this = this;\n\n        // Motion UI method of hiding\n        if (this.options.animationOut) {\n          if (this.options.overlay) {\n            Foundation.Motion.animateOut(this.$overlay, 'fade-out', finishUp);\n          } else {\n            finishUp();\n          }\n\n          Foundation.Motion.animateOut(this.$element, this.options.animationOut);\n        }\n        // jQuery method of hiding\n        else {\n            if (this.options.overlay) {\n              this.$overlay.hide(0, finishUp);\n            } else {\n              finishUp();\n            }\n\n            this.$element.hide(this.options.hideDelay);\n          }\n\n        // Conditionals to remove extra event listeners added on open\n        if (this.options.closeOnEsc) {\n          $(window).off('keydown.zf.reveal');\n        }\n\n        if (!this.options.overlay && this.options.closeOnClick) {\n          $('body').off('click.zf.reveal');\n        }\n\n        this.$element.off('keydown.zf.reveal');\n\n        function finishUp() {\n          if (_this.isiOS) {\n            $('html, body').removeClass('is-reveal-open');\n          } else {\n            $('body').removeClass('is-reveal-open');\n          }\n\n          $('body').attr({\n            'aria-hidden': false,\n            'tabindex': ''\n          });\n\n          _this.$element.attr('aria-hidden', true);\n\n          /**\n          * Fires when the modal is done closing.\n          * @event Reveal#closed\n          */\n          _this.$element.trigger('closed.zf.reveal');\n        }\n\n        /**\n        * Resets the modal content\n        * This prevents a running video to keep going in the background\n        */\n        if (this.options.resetOnClose) {\n          this.$element.html(this.$element.html());\n        }\n\n        this.isActive = false;\n        if (_this.options.deepLink) {\n          if (window.history.replaceState) {\n            window.history.replaceState(\"\", document.title, window.location.pathname);\n          } else {\n            window.location.hash = '';\n          }\n        }\n      }\n\n      /**\n       * Toggles the open/closed state of a modal.\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.isActive) {\n          this.close();\n        } else {\n          this.open();\n        }\n      }\n    }, {\n      key: 'destroy',\n\n\n      /**\n       * Destroys an instance of a modal.\n       * @function\n       */\n      value: function destroy() {\n        if (this.options.overlay) {\n          this.$overlay.hide().off().remove();\n        }\n        this.$element.hide().off();\n        this.$anchor.off('.zf');\n        $(window).off('.zf.reveal:' + this.id);\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Reveal;\n  }();\n\n  Reveal.defaults = {\n    /**\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n     * @option\n     * @example 'slide-in-left'\n     */\n    animationIn: '',\n    /**\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n     * @option\n     * @example 'slide-out-right'\n     */\n    animationOut: '',\n    /**\n     * Time, in ms, to delay the opening of a modal after a click if no animation used.\n     * @option\n     * @example 10\n     */\n    showDelay: 0,\n    /**\n     * Time, in ms, to delay the closing of a modal after a click if no animation used.\n     * @option\n     * @example 10\n     */\n    hideDelay: 0,\n    /**\n     * Allows a click on the body/overlay to close the modal.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n    /**\n     * Allows the modal to close if the user presses the `ESCAPE` key.\n     * @option\n     * @example true\n     */\n    closeOnEsc: true,\n    /**\n     * If true, allows multiple modals to be displayed at once.\n     * @option\n     * @example false\n     */\n    multipleOpened: false,\n    /**\n     * Distance, in pixels, the modal should push down from the top of the screen.\n     * @option\n     * @example 100\n     */\n    vOffset: 100,\n    /**\n     * Distance, in pixels, the modal should push in from the side of the screen.\n     * @option\n     * @example 0\n     */\n    hOffset: 0,\n    /**\n     * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\n     * @option\n     * @example false\n     */\n    fullScreen: false,\n    /**\n     * Percentage of screen height the modal should push up from the bottom of the view.\n     * @option\n     * @example 10\n     */\n    btmOffsetPct: 10,\n    /**\n     * Allows the modal to generate an overlay div, which will cover the view when modal opens.\n     * @option\n     * @example true\n     */\n    overlay: true,\n    /**\n     * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\n     * @option\n     * @example false\n     */\n    resetOnClose: false,\n    /**\n     * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\n     * @option\n     * @example false\n     */\n    deepLink: false\n  };\n\n  // Window exports\n  Foundation.plugin(Reveal, 'Reveal');\n\n  function iPhoneSniff() {\n    return (/iP(ad|hone|od).*OS/.test(window.navigator.userAgent)\n    );\n  }\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Slider module.\n   * @module foundation.slider\n   * @requires foundation.util.motion\n   * @requires foundation.util.triggers\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.touch\n   */\n\n  var Slider = function () {\n    /**\n     * Creates a new instance of a drilldown menu.\n     * @class\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Slider(element, options) {\n      _classCallCheck(this, Slider);\n\n      this.$element = element;\n      this.options = $.extend({}, Slider.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Slider');\n      Foundation.Keyboard.register('Slider', {\n        'ltr': {\n          'ARROW_RIGHT': 'increase',\n          'ARROW_UP': 'increase',\n          'ARROW_DOWN': 'decrease',\n          'ARROW_LEFT': 'decrease',\n          'SHIFT_ARROW_RIGHT': 'increase_fast',\n          'SHIFT_ARROW_UP': 'increase_fast',\n          'SHIFT_ARROW_DOWN': 'decrease_fast',\n          'SHIFT_ARROW_LEFT': 'decrease_fast'\n        },\n        'rtl': {\n          'ARROW_LEFT': 'increase',\n          'ARROW_RIGHT': 'decrease',\n          'SHIFT_ARROW_LEFT': 'increase_fast',\n          'SHIFT_ARROW_RIGHT': 'decrease_fast'\n        }\n      });\n    }\n\n    /**\n     * Initilizes the plugin by reading/setting attributes, creating collections and setting the initial position of the handle(s).\n     * @function\n     * @private\n     */\n\n\n    _createClass(Slider, [{\n      key: '_init',\n      value: function _init() {\n        this.inputs = this.$element.find('input');\n        this.handles = this.$element.find('[data-slider-handle]');\n\n        this.$handle = this.handles.eq(0);\n        this.$input = this.inputs.length ? this.inputs.eq(0) : $('#' + this.$handle.attr('aria-controls'));\n        this.$fill = this.$element.find('[data-slider-fill]').css(this.options.vertical ? 'height' : 'width', 0);\n\n        var isDbl = false,\n            _this = this;\n        if (this.options.disabled || this.$element.hasClass(this.options.disabledClass)) {\n          this.options.disabled = true;\n          this.$element.addClass(this.options.disabledClass);\n        }\n        if (!this.inputs.length) {\n          this.inputs = $().add(this.$input);\n          this.options.binding = true;\n        }\n        this._setInitAttr(0);\n        this._events(this.$handle);\n\n        if (this.handles[1]) {\n          this.options.doubleSided = true;\n          this.$handle2 = this.handles.eq(1);\n          this.$input2 = this.inputs.length > 1 ? this.inputs.eq(1) : $('#' + this.$handle2.attr('aria-controls'));\n\n          if (!this.inputs[1]) {\n            this.inputs = this.inputs.add(this.$input2);\n          }\n          isDbl = true;\n\n          this._setHandlePos(this.$handle, this.options.initialStart, true, function () {\n\n            _this._setHandlePos(_this.$handle2, _this.options.initialEnd, true);\n          });\n          // this.$handle.triggerHandler('click.zf.slider');\n          this._setInitAttr(1);\n          this._events(this.$handle2);\n        }\n\n        if (!isDbl) {\n          this._setHandlePos(this.$handle, this.options.initialStart, true);\n        }\n      }\n\n      /**\n       * Sets the position of the selected handle and fill bar.\n       * @function\n       * @private\n       * @param {jQuery} $hndl - the selected handle to move.\n       * @param {Number} location - floating point between the start and end values of the slider bar.\n       * @param {Function} cb - callback function to fire on completion.\n       * @fires Slider#moved\n       */\n\n    }, {\n      key: '_setHandlePos',\n      value: function _setHandlePos($hndl, location, noInvert, cb) {\n        //might need to alter that slightly for bars that will have odd number selections.\n        location = parseFloat(location); //on input change events, convert string to number...grumble.\n\n        // prevent slider from running out of bounds, if value exceeds the limits set through options, override the value to min/max\n        if (location < this.options.start) {\n          location = this.options.start;\n        } else if (location > this.options.end) {\n          location = this.options.end;\n        }\n\n        var isDbl = this.options.doubleSided;\n\n        if (isDbl) {\n          //this block is to prevent 2 handles from crossing eachother. Could/should be improved.\n          if (this.handles.index($hndl) === 0) {\n            var h2Val = parseFloat(this.$handle2.attr('aria-valuenow'));\n            location = location >= h2Val ? h2Val - this.options.step : location;\n          } else {\n            var h1Val = parseFloat(this.$handle.attr('aria-valuenow'));\n            location = location <= h1Val ? h1Val + this.options.step : location;\n          }\n        }\n\n        //this is for single-handled vertical sliders, it adjusts the value to account for the slider being \"upside-down\"\n        //for click and drag events, it's weird due to the scale(-1, 1) css property\n        if (this.options.vertical && !noInvert) {\n          location = this.options.end - location;\n        }\n\n        var _this = this,\n            vert = this.options.vertical,\n            hOrW = vert ? 'height' : 'width',\n            lOrT = vert ? 'top' : 'left',\n            handleDim = $hndl[0].getBoundingClientRect()[hOrW],\n            elemDim = this.$element[0].getBoundingClientRect()[hOrW],\n\n        //percentage of bar min/max value based on click or drag point\n        pctOfBar = percent(location, this.options.end).toFixed(2),\n\n        //number of actual pixels to shift the handle, based on the percentage obtained above\n        pxToMove = (elemDim - handleDim) * pctOfBar,\n\n        //percentage of bar to shift the handle\n        movement = (percent(pxToMove, elemDim) * 100).toFixed(this.options.decimal);\n        //fixing the decimal value for the location number, is passed to other methods as a fixed floating-point value\n        location = parseFloat(location.toFixed(this.options.decimal));\n        // declare empty object for css adjustments, only used with 2 handled-sliders\n        var css = {};\n\n        this._setValues($hndl, location);\n\n        // TODO update to calculate based on values set to respective inputs??\n        if (isDbl) {\n          var isLeftHndl = this.handles.index($hndl) === 0,\n\n          //empty variable, will be used for min-height/width for fill bar\n          dim,\n\n          //percentage w/h of the handle compared to the slider bar\n          handlePct = ~ ~(percent(handleDim, elemDim) * 100);\n          //if left handle, the math is slightly different than if it's the right handle, and the left/top property needs to be changed for the fill bar\n          if (isLeftHndl) {\n            //left or top percentage value to apply to the fill bar.\n            css[lOrT] = movement + '%';\n            //calculate the new min-height/width for the fill bar.\n            dim = parseFloat(this.$handle2[0].style[lOrT]) - movement + handlePct;\n            //this callback is necessary to prevent errors and allow the proper placement and initialization of a 2-handled slider\n            //plus, it means we don't care if 'dim' isNaN on init, it won't be in the future.\n            if (cb && typeof cb === 'function') {\n              cb();\n            } //this is only needed for the initialization of 2 handled sliders\n          } else {\n              //just caching the value of the left/bottom handle's left/top property\n              var handlePos = parseFloat(this.$handle[0].style[lOrT]);\n              //calculate the new min-height/width for the fill bar. Use isNaN to prevent false positives for numbers <= 0\n              //based on the percentage of movement of the handle being manipulated, less the opposing handle's left/top position, plus the percentage w/h of the handle itself\n              dim = movement - (isNaN(handlePos) ? this.options.initialStart / ((this.options.end - this.options.start) / 100) : handlePos) + handlePct;\n            }\n          // assign the min-height/width to our css object\n          css['min-' + hOrW] = dim + '%';\n        }\n\n        this.$element.one('finished.zf.animate', function () {\n          /**\n           * Fires when the handle is done moving.\n           * @event Slider#moved\n           */\n          _this.$element.trigger('moved.zf.slider', [$hndl]);\n        });\n\n        //because we don't know exactly how the handle will be moved, check the amount of time it should take to move.\n        var moveTime = this.$element.data('dragging') ? 1000 / 60 : this.options.moveTime;\n\n        Foundation.Move(moveTime, $hndl, function () {\n          //adjusting the left/top property of the handle, based on the percentage calculated above\n          $hndl.css(lOrT, movement + '%');\n\n          if (!_this.options.doubleSided) {\n            //if single-handled, a simple method to expand the fill bar\n            _this.$fill.css(hOrW, pctOfBar * 100 + '%');\n          } else {\n            //otherwise, use the css object we created above\n            _this.$fill.css(css);\n          }\n        });\n      }\n\n      /**\n       * Sets the initial attribute for the slider element.\n       * @function\n       * @private\n       * @param {Number} idx - index of the current handle/input to use.\n       */\n\n    }, {\n      key: '_setInitAttr',\n      value: function _setInitAttr(idx) {\n        var id = this.inputs.eq(idx).attr('id') || Foundation.GetYoDigits(6, 'slider');\n        this.inputs.eq(idx).attr({\n          'id': id,\n          'max': this.options.end,\n          'min': this.options.start,\n          'step': this.options.step\n        });\n        this.handles.eq(idx).attr({\n          'role': 'slider',\n          'aria-controls': id,\n          'aria-valuemax': this.options.end,\n          'aria-valuemin': this.options.start,\n          'aria-valuenow': idx === 0 ? this.options.initialStart : this.options.initialEnd,\n          'aria-orientation': this.options.vertical ? 'vertical' : 'horizontal',\n          'tabindex': 0\n        });\n      }\n\n      /**\n       * Sets the input and `aria-valuenow` values for the slider element.\n       * @function\n       * @private\n       * @param {jQuery} $handle - the currently selected handle.\n       * @param {Number} val - floating point of the new value.\n       */\n\n    }, {\n      key: '_setValues',\n      value: function _setValues($handle, val) {\n        var idx = this.options.doubleSided ? this.handles.index($handle) : 0;\n        this.inputs.eq(idx).val(val);\n        $handle.attr('aria-valuenow', val);\n      }\n\n      /**\n       * Handles events on the slider element.\n       * Calculates the new location of the current handle.\n       * If there are two handles and the bar was clicked, it determines which handle to move.\n       * @function\n       * @private\n       * @param {Object} e - the `event` object passed from the listener.\n       * @param {jQuery} $handle - the current handle to calculate for, if selected.\n       * @param {Number} val - floating point number for the new value of the slider.\n       * TODO clean this up, there's a lot of repeated code between this and the _setHandlePos fn.\n       */\n\n    }, {\n      key: '_handleEvent',\n      value: function _handleEvent(e, $handle, val) {\n        var value, hasVal;\n        if (!val) {\n          //click or drag events\n          e.preventDefault();\n          var _this = this,\n              vertical = this.options.vertical,\n              param = vertical ? 'height' : 'width',\n              direction = vertical ? 'top' : 'left',\n              pageXY = vertical ? e.pageY : e.pageX,\n              halfOfHandle = this.$handle[0].getBoundingClientRect()[param] / 2,\n              barDim = this.$element[0].getBoundingClientRect()[param],\n              barOffset = this.$element.offset()[direction] - pageXY,\n\n          //if the cursor position is less than or greater than the elements bounding coordinates, set coordinates within those bounds\n          barXY = barOffset > 0 ? -halfOfHandle : barOffset - halfOfHandle < -barDim ? barDim : Math.abs(barOffset),\n              offsetPct = percent(barXY, barDim);\n          value = (this.options.end - this.options.start) * offsetPct;\n\n          // turn everything around for RTL, yay math!\n          if (Foundation.rtl() && !this.options.vertical) {\n            value = this.options.end - value;\n          }\n\n          value = _this._adjustValue(null, value);\n          //boolean flag for the setHandlePos fn, specifically for vertical sliders\n          hasVal = false;\n\n          if (!$handle) {\n            //figure out which handle it is, pass it to the next function.\n            var firstHndlPos = absPosition(this.$handle, direction, barXY, param),\n                secndHndlPos = absPosition(this.$handle2, direction, barXY, param);\n            $handle = firstHndlPos <= secndHndlPos ? this.$handle : this.$handle2;\n          }\n        } else {\n          //change event on input\n          value = this._adjustValue(null, val);\n          hasVal = true;\n        }\n\n        this._setHandlePos($handle, value, hasVal);\n      }\n\n      /**\n       * Adjustes value for handle in regard to step value. returns adjusted value\n       * @function\n       * @private\n       * @param {jQuery} $handle - the selected handle.\n       * @param {Number} value - value to adjust. used if $handle is falsy\n       */\n\n    }, {\n      key: '_adjustValue',\n      value: function _adjustValue($handle, value) {\n        var val,\n            step = this.options.step,\n            div = parseFloat(step / 2),\n            left,\n            prev_val,\n            next_val;\n        if (!!$handle) {\n          val = parseFloat($handle.attr('aria-valuenow'));\n        } else {\n          val = value;\n        }\n        left = val % step;\n        prev_val = val - left;\n        next_val = prev_val + step;\n        if (left === 0) {\n          return val;\n        }\n        val = val >= prev_val + div ? next_val : prev_val;\n        return val;\n      }\n\n      /**\n       * Adds event listeners to the slider elements.\n       * @function\n       * @private\n       * @param {jQuery} $handle - the current handle to apply listeners to.\n       */\n\n    }, {\n      key: '_events',\n      value: function _events($handle) {\n        if (this.options.disabled) {\n          return false;\n        }\n\n        var _this = this,\n            curHandle,\n            timer;\n\n        this.inputs.off('change.zf.slider').on('change.zf.slider', function (e) {\n          var idx = _this.inputs.index($(this));\n          _this._handleEvent(e, _this.handles.eq(idx), $(this).val());\n        });\n\n        if (this.options.clickSelect) {\n          this.$element.off('click.zf.slider').on('click.zf.slider', function (e) {\n            if (_this.$element.data('dragging')) {\n              return false;\n            }\n\n            if (!$(e.target).is('[data-slider-handle]')) {\n              if (_this.options.doubleSided) {\n                _this._handleEvent(e);\n              } else {\n                _this._handleEvent(e, _this.$handle);\n              }\n            }\n          });\n        }\n\n        if (this.options.draggable) {\n          this.handles.addTouch();\n\n          var $body = $('body');\n          $handle.off('mousedown.zf.slider').on('mousedown.zf.slider', function (e) {\n            $handle.addClass('is-dragging');\n            _this.$fill.addClass('is-dragging'); //\n            _this.$element.data('dragging', true);\n\n            curHandle = $(e.currentTarget);\n\n            $body.on('mousemove.zf.slider', function (e) {\n              e.preventDefault();\n\n              _this._handleEvent(e, curHandle);\n            }).on('mouseup.zf.slider', function (e) {\n              _this._handleEvent(e, curHandle);\n\n              $handle.removeClass('is-dragging');\n              _this.$fill.removeClass('is-dragging');\n              _this.$element.data('dragging', false);\n\n              $body.off('mousemove.zf.slider mouseup.zf.slider');\n            });\n          });\n        }\n\n        $handle.off('keydown.zf.slider').on('keydown.zf.slider', function (e) {\n          var _$handle = $(this),\n              idx = _this.options.doubleSided ? _this.handles.index(_$handle) : 0,\n              oldValue = parseFloat(_this.inputs.eq(idx).val()),\n              newValue;\n\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Slider', {\n            decrease: function () {\n              newValue = oldValue - _this.options.step;\n            },\n            increase: function () {\n              newValue = oldValue + _this.options.step;\n            },\n            decrease_fast: function () {\n              newValue = oldValue - _this.options.step * 10;\n            },\n            increase_fast: function () {\n              newValue = oldValue + _this.options.step * 10;\n            },\n            handled: function () {\n              // only set handle pos when event was handled specially\n              e.preventDefault();\n              _this._setHandlePos(_$handle, newValue, true);\n            }\n          });\n          /*if (newValue) { // if pressed key has special function, update value\n            e.preventDefault();\n            _this._setHandlePos(_$handle, newValue);\n          }*/\n        });\n      }\n\n      /**\n       * Destroys the slider plugin.\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.handles.off('.zf.slider');\n        this.inputs.off('.zf.slider');\n        this.$element.off('.zf.slider');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Slider;\n  }();\n\n  Slider.defaults = {\n    /**\n     * Minimum value for the slider scale.\n     * @option\n     * @example 0\n     */\n    start: 0,\n    /**\n     * Maximum value for the slider scale.\n     * @option\n     * @example 100\n     */\n    end: 100,\n    /**\n     * Minimum value change per change event.\n     * @option\n     * @example 1\n     */\n    step: 1,\n    /**\n     * Value at which the handle/input *(left handle/first input)* should be set to on initialization.\n     * @option\n     * @example 0\n     */\n    initialStart: 0,\n    /**\n     * Value at which the right handle/second input should be set to on initialization.\n     * @option\n     * @example 100\n     */\n    initialEnd: 100,\n    /**\n     * Allows the input to be located outside the container and visible. Set to by the JS\n     * @option\n     * @example false\n     */\n    binding: false,\n    /**\n     * Allows the user to click/tap on the slider bar to select a value.\n     * @option\n     * @example true\n     */\n    clickSelect: true,\n    /**\n     * Set to true and use the `vertical` class to change alignment to vertical.\n     * @option\n     * @example false\n     */\n    vertical: false,\n    /**\n     * Allows the user to drag the slider handle(s) to select a value.\n     * @option\n     * @example true\n     */\n    draggable: true,\n    /**\n     * Disables the slider and prevents event listeners from being applied. Double checked by JS with `disabledClass`.\n     * @option\n     * @example false\n     */\n    disabled: false,\n    /**\n     * Allows the use of two handles. Double checked by the JS. Changes some logic handling.\n     * @option\n     * @example false\n     */\n    doubleSided: false,\n    /**\n     * Potential future feature.\n     */\n    // steps: 100,\n    /**\n     * Number of decimal places the plugin should go to for floating point precision.\n     * @option\n     * @example 2\n     */\n    decimal: 2,\n    /**\n     * Time delay for dragged elements.\n     */\n    // dragDelay: 0,\n    /**\n     * Time, in ms, to animate the movement of a slider handle if user clicks/taps on the bar. Needs to be manually set if updating the transition time in the Sass settings.\n     * @option\n     * @example 200\n     */\n    moveTime: 200, //update this if changing the transition time in the sass\n    /**\n     * Class applied to disabled sliders.\n     * @option\n     * @example 'disabled'\n     */\n    disabledClass: 'disabled',\n    /**\n     * Will invert the default layout for a vertical<span data-tooltip title=\"who would do this???\"> </span>slider.\n     * @option\n     * @example false\n     */\n    invertVertical: false\n  };\n\n  function percent(frac, num) {\n    return frac / num;\n  }\n  function absPosition($handle, dir, clickPos, param) {\n    return Math.abs($handle.position()[dir] + $handle[param]() / 2 - clickPos);\n  }\n\n  // Window exports\n  Foundation.plugin(Slider, 'Slider');\n}(jQuery);\n\n//*********this is in case we go to static, absolute positions instead of dynamic positioning********\n// this.setSteps(function() {\n//   _this._events();\n//   var initStart = _this.options.positions[_this.options.initialStart - 1] || null;\n//   var initEnd = _this.options.initialEnd ? _this.options.position[_this.options.initialEnd - 1] : null;\n//   if (initStart || initEnd) {\n//     _this._handleEvent(initStart, initEnd);\n//   }\n// });\n\n//***********the other part of absolute positions*************\n// Slider.prototype.setSteps = function(cb) {\n//   var posChange = this.$element.outerWidth() / this.options.steps;\n//   var counter = 0\n//   while(counter < this.options.steps) {\n//     if (counter) {\n//       this.options.positions.push(this.options.positions[counter - 1] + posChange);\n//     } else {\n//       this.options.positions.push(posChange);\n//     }\n//     counter++;\n//   }\n//   cb();\n// };\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Sticky module.\n   * @module foundation.sticky\n   * @requires foundation.util.triggers\n   * @requires foundation.util.mediaQuery\n   */\n\n  var Sticky = function () {\n    /**\n     * Creates a new instance of a sticky thing.\n     * @class\n     * @param {jQuery} element - jQuery object to make sticky.\n     * @param {Object} options - options object passed when creating the element programmatically.\n     */\n\n    function Sticky(element, options) {\n      _classCallCheck(this, Sticky);\n\n      this.$element = element;\n      this.options = $.extend({}, Sticky.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Sticky');\n    }\n\n    /**\n     * Initializes the sticky element by adding classes, getting/setting dimensions, breakpoints and attributes\n     * @function\n     * @private\n     */\n\n\n    _createClass(Sticky, [{\n      key: '_init',\n      value: function _init() {\n        var $parent = this.$element.parent('[data-sticky-container]'),\n            id = this.$element[0].id || Foundation.GetYoDigits(6, 'sticky'),\n            _this = this;\n\n        if (!$parent.length) {\n          this.wasWrapped = true;\n        }\n        this.$container = $parent.length ? $parent : $(this.options.container).wrapInner(this.$element);\n        this.$container.addClass(this.options.containerClass);\n\n        this.$element.addClass(this.options.stickyClass).attr({ 'data-resize': id });\n\n        this.scrollCount = this.options.checkEvery;\n        this.isStuck = false;\n        $(window).one('load.zf.sticky', function () {\n          if (_this.options.anchor !== '') {\n            _this.$anchor = $('#' + _this.options.anchor);\n          } else {\n            _this._parsePoints();\n          }\n\n          _this._setSizes(function () {\n            _this._calc(false);\n          });\n          _this._events(id.split('-').reverse().join('-'));\n        });\n      }\n\n      /**\n       * If using multiple elements as anchors, calculates the top and bottom pixel values the sticky thing should stick and unstick on.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_parsePoints',\n      value: function _parsePoints() {\n        var top = this.options.topAnchor,\n            btm = this.options.btmAnchor,\n            pts = [top, btm],\n            breaks = {};\n        if (top && btm) {\n\n          for (var i = 0, len = pts.length; i < len && pts[i]; i++) {\n            var pt;\n            if (typeof pts[i] === 'number') {\n              pt = pts[i];\n            } else {\n              var place = pts[i].split(':'),\n                  anchor = $('#' + place[0]);\n\n              pt = anchor.offset().top;\n              if (place[1] && place[1].toLowerCase() === 'bottom') {\n                pt += anchor[0].getBoundingClientRect().height;\n              }\n            }\n            breaks[i] = pt;\n          }\n        } else {\n          breaks = { 0: 1, 1: document.documentElement.scrollHeight };\n        }\n\n        this.points = breaks;\n        return;\n      }\n\n      /**\n       * Adds event handlers for the scrolling element.\n       * @private\n       * @param {String} id - psuedo-random id for unique scroll event listener.\n       */\n\n    }, {\n      key: '_events',\n      value: function _events(id) {\n        var _this = this,\n            scrollListener = this.scrollListener = 'scroll.zf.' + id;\n        if (this.isOn) {\n          return;\n        }\n        if (this.canStick) {\n          this.isOn = true;\n          $(window).off(scrollListener).on(scrollListener, function (e) {\n            if (_this.scrollCount === 0) {\n              _this.scrollCount = _this.options.checkEvery;\n              _this._setSizes(function () {\n                _this._calc(false, window.pageYOffset);\n              });\n            } else {\n              _this.scrollCount--;\n              _this._calc(false, window.pageYOffset);\n            }\n          });\n        }\n\n        this.$element.off('resizeme.zf.trigger').on('resizeme.zf.trigger', function (e, el) {\n          _this._setSizes(function () {\n            _this._calc(false);\n            if (_this.canStick) {\n              if (!_this.isOn) {\n                _this._events(id);\n              }\n            } else if (_this.isOn) {\n              _this._pauseListeners(scrollListener);\n            }\n          });\n        });\n      }\n\n      /**\n       * Removes event handlers for scroll and change events on anchor.\n       * @fires Sticky#pause\n       * @param {String} scrollListener - unique, namespaced scroll listener attached to `window`\n       */\n\n    }, {\n      key: '_pauseListeners',\n      value: function _pauseListeners(scrollListener) {\n        this.isOn = false;\n        $(window).off(scrollListener);\n\n        /**\n         * Fires when the plugin is paused due to resize event shrinking the view.\n         * @event Sticky#pause\n         * @private\n         */\n        this.$element.trigger('pause.zf.sticky');\n      }\n\n      /**\n       * Called on every `scroll` event and on `_init`\n       * fires functions based on booleans and cached values\n       * @param {Boolean} checkSizes - true if plugin should recalculate sizes and breakpoints.\n       * @param {Number} scroll - current scroll position passed from scroll event cb function. If not passed, defaults to `window.pageYOffset`.\n       */\n\n    }, {\n      key: '_calc',\n      value: function _calc(checkSizes, scroll) {\n        if (checkSizes) {\n          this._setSizes();\n        }\n\n        if (!this.canStick) {\n          if (this.isStuck) {\n            this._removeSticky(true);\n          }\n          return false;\n        }\n\n        if (!scroll) {\n          scroll = window.pageYOffset;\n        }\n\n        if (scroll >= this.topPoint) {\n          if (scroll <= this.bottomPoint) {\n            if (!this.isStuck) {\n              this._setSticky();\n            }\n          } else {\n            if (this.isStuck) {\n              this._removeSticky(false);\n            }\n          }\n        } else {\n          if (this.isStuck) {\n            this._removeSticky(true);\n          }\n        }\n      }\n\n      /**\n       * Causes the $element to become stuck.\n       * Adds `position: fixed;`, and helper classes.\n       * @fires Sticky#stuckto\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_setSticky',\n      value: function _setSticky() {\n        var stickTo = this.options.stickTo,\n            mrgn = stickTo === 'top' ? 'marginTop' : 'marginBottom',\n            notStuckTo = stickTo === 'top' ? 'bottom' : 'top',\n            css = {};\n\n        css[mrgn] = this.options[mrgn] + 'em';\n        css[stickTo] = 0;\n        css[notStuckTo] = 'auto';\n        css['left'] = this.$container.offset().left + parseInt(window.getComputedStyle(this.$container[0])[\"padding-left\"], 10);\n        this.isStuck = true;\n        this.$element.removeClass('is-anchored is-at-' + notStuckTo).addClass('is-stuck is-at-' + stickTo).css(css)\n        /**\n         * Fires when the $element has become `position: fixed;`\n         * Namespaced to `top` or `bottom`, e.g. `sticky.zf.stuckto:top`\n         * @event Sticky#stuckto\n         */\n        .trigger('sticky.zf.stuckto:' + stickTo);\n      }\n\n      /**\n       * Causes the $element to become unstuck.\n       * Removes `position: fixed;`, and helper classes.\n       * Adds other helper classes.\n       * @param {Boolean} isTop - tells the function if the $element should anchor to the top or bottom of its $anchor element.\n       * @fires Sticky#unstuckfrom\n       * @private\n       */\n\n    }, {\n      key: '_removeSticky',\n      value: function _removeSticky(isTop) {\n        var stickTo = this.options.stickTo,\n            stickToTop = stickTo === 'top',\n            css = {},\n            anchorPt = (this.points ? this.points[1] - this.points[0] : this.anchorHeight) - this.elemHeight,\n            mrgn = stickToTop ? 'marginTop' : 'marginBottom',\n            notStuckTo = stickToTop ? 'bottom' : 'top',\n            topOrBottom = isTop ? 'top' : 'bottom';\n\n        css[mrgn] = 0;\n\n        if (isTop && !stickToTop || stickToTop && !isTop) {\n          css[stickTo] = anchorPt;\n          css[notStuckTo] = 0;\n        } else {\n          css[stickTo] = 0;\n          css[notStuckTo] = anchorPt;\n        }\n\n        css['left'] = '';\n        this.isStuck = false;\n        this.$element.removeClass('is-stuck is-at-' + stickTo).addClass('is-anchored is-at-' + topOrBottom).css(css)\n        /**\n         * Fires when the $element has become anchored.\n         * Namespaced to `top` or `bottom`, e.g. `sticky.zf.unstuckfrom:bottom`\n         * @event Sticky#unstuckfrom\n         */\n        .trigger('sticky.zf.unstuckfrom:' + topOrBottom);\n      }\n\n      /**\n       * Sets the $element and $container sizes for plugin.\n       * Calls `_setBreakPoints`.\n       * @param {Function} cb - optional callback function to fire on completion of `_setBreakPoints`.\n       * @private\n       */\n\n    }, {\n      key: '_setSizes',\n      value: function _setSizes(cb) {\n        this.canStick = Foundation.MediaQuery.atLeast(this.options.stickyOn);\n        if (!this.canStick) {\n          cb();\n        }\n        var _this = this,\n            newElemWidth = this.$container[0].getBoundingClientRect().width,\n            comp = window.getComputedStyle(this.$container[0]),\n            pdng = parseInt(comp['padding-right'], 10);\n\n        if (this.$anchor && this.$anchor.length) {\n          this.anchorHeight = this.$anchor[0].getBoundingClientRect().height;\n        } else {\n          this._parsePoints();\n        }\n\n        this.$element.css({\n          'max-width': newElemWidth - pdng + 'px'\n        });\n\n        var newContainerHeight = this.$element[0].getBoundingClientRect().height || this.containerHeight;\n        this.containerHeight = newContainerHeight;\n        this.$container.css({\n          height: newContainerHeight\n        });\n        this.elemHeight = newContainerHeight;\n\n        if (this.isStuck) {\n          this.$element.css({ \"left\": this.$container.offset().left + parseInt(comp['padding-left'], 10) });\n        }\n\n        this._setBreakPoints(newContainerHeight, function () {\n          if (cb) {\n            cb();\n          }\n        });\n      }\n\n      /**\n       * Sets the upper and lower breakpoints for the element to become sticky/unsticky.\n       * @param {Number} elemHeight - px value for sticky.$element height, calculated by `_setSizes`.\n       * @param {Function} cb - optional callback function to be called on completion.\n       * @private\n       */\n\n    }, {\n      key: '_setBreakPoints',\n      value: function _setBreakPoints(elemHeight, cb) {\n        if (!this.canStick) {\n          if (cb) {\n            cb();\n          } else {\n            return false;\n          }\n        }\n        var mTop = emCalc(this.options.marginTop),\n            mBtm = emCalc(this.options.marginBottom),\n            topPoint = this.points ? this.points[0] : this.$anchor.offset().top,\n            bottomPoint = this.points ? this.points[1] : topPoint + this.anchorHeight,\n\n        // topPoint = this.$anchor.offset().top || this.points[0],\n        // bottomPoint = topPoint + this.anchorHeight || this.points[1],\n        winHeight = window.innerHeight;\n\n        if (this.options.stickTo === 'top') {\n          topPoint -= mTop;\n          bottomPoint -= elemHeight + mTop;\n        } else if (this.options.stickTo === 'bottom') {\n          topPoint -= winHeight - (elemHeight + mBtm);\n          bottomPoint -= winHeight - mBtm;\n        } else {\n          //this would be the stickTo: both option... tricky\n        }\n\n        this.topPoint = topPoint;\n        this.bottomPoint = bottomPoint;\n\n        if (cb) {\n          cb();\n        }\n      }\n\n      /**\n       * Destroys the current sticky element.\n       * Resets the element to the top position first.\n       * Removes event listeners, JS-added css properties and classes, and unwraps the $element if the JS added the $container.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this._removeSticky(true);\n\n        this.$element.removeClass(this.options.stickyClass + ' is-anchored is-at-top').css({\n          height: '',\n          top: '',\n          bottom: '',\n          'max-width': ''\n        }).off('resizeme.zf.trigger');\n\n        this.$anchor.off('change.zf.sticky');\n        $(window).off(this.scrollListener);\n\n        if (this.wasWrapped) {\n          this.$element.unwrap();\n        } else {\n          this.$container.removeClass(this.options.containerClass).css({\n            height: ''\n          });\n        }\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Sticky;\n  }();\n\n  Sticky.defaults = {\n    /**\n     * Customizable container template. Add your own classes for styling and sizing.\n     * @option\n     * @example '&lt;div data-sticky-container class=\"small-6 columns\"&gt;&lt;/div&gt;'\n     */\n    container: '<div data-sticky-container></div>',\n    /**\n     * Location in the view the element sticks to.\n     * @option\n     * @example 'top'\n     */\n    stickTo: 'top',\n    /**\n     * If anchored to a single element, the id of that element.\n     * @option\n     * @example 'exampleId'\n     */\n    anchor: '',\n    /**\n     * If using more than one element as anchor points, the id of the top anchor.\n     * @option\n     * @example 'exampleId:top'\n     */\n    topAnchor: '',\n    /**\n     * If using more than one element as anchor points, the id of the bottom anchor.\n     * @option\n     * @example 'exampleId:bottom'\n     */\n    btmAnchor: '',\n    /**\n     * Margin, in `em`'s to apply to the top of the element when it becomes sticky.\n     * @option\n     * @example 1\n     */\n    marginTop: 1,\n    /**\n     * Margin, in `em`'s to apply to the bottom of the element when it becomes sticky.\n     * @option\n     * @example 1\n     */\n    marginBottom: 1,\n    /**\n     * Breakpoint string that is the minimum screen size an element should become sticky.\n     * @option\n     * @example 'medium'\n     */\n    stickyOn: 'medium',\n    /**\n     * Class applied to sticky element, and removed on destruction. Foundation defaults to `sticky`.\n     * @option\n     * @example 'sticky'\n     */\n    stickyClass: 'sticky',\n    /**\n     * Class applied to sticky container. Foundation defaults to `sticky-container`.\n     * @option\n     * @example 'sticky-container'\n     */\n    containerClass: 'sticky-container',\n    /**\n     * Number of scroll events between the plugin's recalculating sticky points. Setting it to `0` will cause it to recalc every scroll event, setting it to `-1` will prevent recalc on scroll.\n     * @option\n     * @example 50\n     */\n    checkEvery: -1\n  };\n\n  /**\n   * Helper function to calculate em values\n   * @param Number {em} - number of em's to calculate into pixels\n   */\n  function emCalc(em) {\n    return parseInt(window.getComputedStyle(document.body, null).fontSize, 10) * em;\n  }\n\n  // Window exports\n  Foundation.plugin(Sticky, 'Sticky');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Tabs module.\n   * @module foundation.tabs\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.timerAndImageLoader if tabs contain images\n   */\n\n  var Tabs = function () {\n    /**\n     * Creates a new instance of tabs.\n     * @class\n     * @fires Tabs#init\n     * @param {jQuery} element - jQuery object to make into tabs.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Tabs(element, options) {\n      _classCallCheck(this, Tabs);\n\n      this.$element = element;\n      this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\n\n      this._init();\n      Foundation.registerPlugin(this, 'Tabs');\n      Foundation.Keyboard.register('Tabs', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'previous',\n        'ARROW_DOWN': 'next',\n        'ARROW_LEFT': 'previous'\n        // 'TAB': 'next',\n        // 'SHIFT_TAB': 'previous'\n      });\n    }\n\n    /**\n     * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\n     * @private\n     */\n\n\n    _createClass(Tabs, [{\n      key: '_init',\n      value: function _init() {\n        var _this = this;\n\n        this.$tabTitles = this.$element.find('.' + this.options.linkClass);\n        this.$tabContent = $('[data-tabs-content=\"' + this.$element[0].id + '\"]');\n\n        this.$tabTitles.each(function () {\n          var $elem = $(this),\n              $link = $elem.find('a'),\n              isActive = $elem.hasClass('is-active'),\n              hash = $link[0].hash.slice(1),\n              linkId = $link[0].id ? $link[0].id : hash + '-label',\n              $tabContent = $('#' + hash);\n\n          $elem.attr({ 'role': 'presentation' });\n\n          $link.attr({\n            'role': 'tab',\n            'aria-controls': hash,\n            'aria-selected': isActive,\n            'id': linkId\n          });\n\n          $tabContent.attr({\n            'role': 'tabpanel',\n            'aria-hidden': !isActive,\n            'aria-labelledby': linkId\n          });\n\n          if (isActive && _this.options.autoFocus) {\n            $link.focus();\n          }\n        });\n\n        if (this.options.matchHeight) {\n          var $images = this.$tabContent.find('img');\n\n          if ($images.length) {\n            Foundation.onImagesLoaded($images, this._setHeight.bind(this));\n          } else {\n            this._setHeight();\n          }\n        }\n\n        this._events();\n      }\n\n      /**\n       * Adds event handlers for items within the tabs.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this._addKeyHandler();\n        this._addClickHandler();\n\n        if (this.options.matchHeight) {\n          $(window).on('changed.zf.mediaquery', this._setHeight.bind(this));\n        }\n      }\n\n      /**\n       * Adds click handlers for items within the tabs.\n       * @private\n       */\n\n    }, {\n      key: '_addClickHandler',\n      value: function _addClickHandler() {\n        var _this = this;\n\n        this.$element.off('click.zf.tabs').on('click.zf.tabs', '.' + this.options.linkClass, function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n          if ($(this).hasClass('is-active')) {\n            return;\n          }\n          _this._handleTabChange($(this));\n        });\n      }\n\n      /**\n       * Adds keyboard event handlers for items within the tabs.\n       * @private\n       */\n\n    }, {\n      key: '_addKeyHandler',\n      value: function _addKeyHandler() {\n        var _this = this;\n        var $firstTab = _this.$element.find('li:first-of-type');\n        var $lastTab = _this.$element.find('li:last-of-type');\n\n        this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function (e) {\n          if (e.which === 9) return;\n          e.stopPropagation();\n          e.preventDefault();\n\n          var $element = $(this),\n              $elements = $element.parent('ul').children('li'),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              if (_this.options.wrapOnKeys) {\n                $prevElement = i === 0 ? $elements.last() : $elements.eq(i - 1);\n                $nextElement = i === $elements.length - 1 ? $elements.first() : $elements.eq(i + 1);\n              } else {\n                $prevElement = $elements.eq(Math.max(0, i - 1));\n                $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\n              }\n              return;\n            }\n          });\n\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Tabs', {\n            open: function () {\n              $element.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($element);\n            },\n            previous: function () {\n              $prevElement.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($prevElement);\n            },\n            next: function () {\n              $nextElement.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($nextElement);\n            }\n          });\n        });\n      }\n\n      /**\n       * Opens the tab `$targetContent` defined by `$target`.\n       * @param {jQuery} $target - Tab to open.\n       * @fires Tabs#change\n       * @function\n       */\n\n    }, {\n      key: '_handleTabChange',\n      value: function _handleTabChange($target) {\n        var $tabLink = $target.find('[role=\"tab\"]'),\n            hash = $tabLink[0].hash,\n            $targetContent = this.$tabContent.find(hash),\n            $oldTab = this.$element.find('.' + this.options.linkClass + '.is-active').removeClass('is-active').find('[role=\"tab\"]').attr({ 'aria-selected': 'false' });\n\n        $('#' + $oldTab.attr('aria-controls')).removeClass('is-active').attr({ 'aria-hidden': 'true' });\n\n        $target.addClass('is-active');\n\n        $tabLink.attr({ 'aria-selected': 'true' });\n\n        $targetContent.addClass('is-active').attr({ 'aria-hidden': 'false' });\n\n        /**\n         * Fires when the plugin has successfully changed tabs.\n         * @event Tabs#change\n         */\n        this.$element.trigger('change.zf.tabs', [$target]);\n      }\n\n      /**\n       * Public method for selecting a content pane to display.\n       * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\n       * @function\n       */\n\n    }, {\n      key: 'selectTab',\n      value: function selectTab(elem) {\n        var idStr;\n\n        if (typeof elem === 'object') {\n          idStr = elem[0].id;\n        } else {\n          idStr = elem;\n        }\n\n        if (idStr.indexOf('#') < 0) {\n          idStr = '#' + idStr;\n        }\n\n        var $target = this.$tabTitles.find('[href=\"' + idStr + '\"]').parent('.' + this.options.linkClass);\n\n        this._handleTabChange($target);\n      }\n    }, {\n      key: '_setHeight',\n\n      /**\n       * Sets the height of each panel to the height of the tallest panel.\n       * If enabled in options, gets called on media query change.\n       * If loading content via external source, can be called directly or with _reflow.\n       * @function\n       * @private\n       */\n      value: function _setHeight() {\n        var max = 0;\n        this.$tabContent.find('.' + this.options.panelClass).css('height', '').each(function () {\n          var panel = $(this),\n              isActive = panel.hasClass('is-active');\n\n          if (!isActive) {\n            panel.css({ 'visibility': 'hidden', 'display': 'block' });\n          }\n\n          var temp = this.getBoundingClientRect().height;\n\n          if (!isActive) {\n            panel.css({\n              'visibility': '',\n              'display': ''\n            });\n          }\n\n          max = temp > max ? temp : max;\n        }).css('height', max + 'px');\n      }\n\n      /**\n       * Destroys an instance of an tabs.\n       * @fires Tabs#destroyed\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('.' + this.options.linkClass).off('.zf.tabs').hide().end().find('.' + this.options.panelClass).hide();\n\n        if (this.options.matchHeight) {\n          $(window).off('changed.zf.mediaquery');\n        }\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Tabs;\n  }();\n\n  Tabs.defaults = {\n    /**\n     * Allows the window to scroll to content of active pane on load if set to true.\n     * @option\n     * @example false\n     */\n    autoFocus: false,\n\n    /**\n     * Allows keyboard input to 'wrap' around the tab links.\n     * @option\n     * @example true\n     */\n    wrapOnKeys: true,\n\n    /**\n     * Allows the tab content panes to match heights if set to true.\n     * @option\n     * @example false\n     */\n    matchHeight: false,\n\n    /**\n     * Class applied to `li`'s in tab link list.\n     * @option\n     * @example 'tabs-title'\n     */\n    linkClass: 'tabs-title',\n\n    /**\n     * Class applied to the content containers.\n     * @option\n     * @example 'tabs-panel'\n     */\n    panelClass: 'tabs-panel'\n  };\n\n  function checkClass($elem) {\n    return $elem.hasClass('is-active');\n  }\n\n  // Window exports\n  Foundation.plugin(Tabs, 'Tabs');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Toggler module.\n   * @module foundation.toggler\n   * @requires foundation.util.motion\n   * @requires foundation.util.triggers\n   */\n\n  var Toggler = function () {\n    /**\n     * Creates a new instance of Toggler.\n     * @class\n     * @fires Toggler#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Toggler(element, options) {\n      _classCallCheck(this, Toggler);\n\n      this.$element = element;\n      this.options = $.extend({}, Toggler.defaults, element.data(), options);\n      this.className = '';\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'Toggler');\n    }\n\n    /**\n     * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\n     * @function\n     * @private\n     */\n\n\n    _createClass(Toggler, [{\n      key: '_init',\n      value: function _init() {\n        var input;\n        // Parse animation classes if they were set\n        if (this.options.animate) {\n          input = this.options.animate.split(' ');\n\n          this.animationIn = input[0];\n          this.animationOut = input[1] || null;\n        }\n        // Otherwise, parse toggle class\n        else {\n            input = this.$element.data('toggler');\n            // Allow for a . at the beginning of the string\n            this.className = input[0] === '.' ? input.slice(1) : input;\n          }\n\n        // Add ARIA attributes to triggers\n        var id = this.$element[0].id;\n        $('[data-open=\"' + id + '\"], [data-close=\"' + id + '\"], [data-toggle=\"' + id + '\"]').attr('aria-controls', id);\n        // If the target is hidden, add aria-hidden\n        this.$element.attr('aria-expanded', this.$element.is(':hidden') ? false : true);\n      }\n\n      /**\n       * Initializes events for the toggle trigger.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this.$element.off('toggle.zf.trigger').on('toggle.zf.trigger', this.toggle.bind(this));\n      }\n\n      /**\n       * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\n       * @function\n       * @fires Toggler#on\n       * @fires Toggler#off\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        this[this.options.animate ? '_toggleAnimate' : '_toggleClass']();\n      }\n    }, {\n      key: '_toggleClass',\n      value: function _toggleClass() {\n        this.$element.toggleClass(this.className);\n\n        var isOn = this.$element.hasClass(this.className);\n        if (isOn) {\n          /**\n           * Fires if the target element has the class after a toggle.\n           * @event Toggler#on\n           */\n          this.$element.trigger('on.zf.toggler');\n        } else {\n          /**\n           * Fires if the target element does not have the class after a toggle.\n           * @event Toggler#off\n           */\n          this.$element.trigger('off.zf.toggler');\n        }\n\n        this._updateARIA(isOn);\n      }\n    }, {\n      key: '_toggleAnimate',\n      value: function _toggleAnimate() {\n        var _this = this;\n\n        if (this.$element.is(':hidden')) {\n          Foundation.Motion.animateIn(this.$element, this.animationIn, function () {\n            this.trigger('on.zf.toggler');\n            _this._updateARIA(true);\n          });\n        } else {\n          Foundation.Motion.animateOut(this.$element, this.animationOut, function () {\n            this.trigger('off.zf.toggler');\n            _this._updateARIA(false);\n          });\n        }\n      }\n    }, {\n      key: '_updateARIA',\n      value: function _updateARIA(isOn) {\n        this.$element.attr('aria-expanded', isOn ? true : false);\n      }\n\n      /**\n       * Destroys the instance of Toggler on the element.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.toggler');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Toggler;\n  }();\n\n  Toggler.defaults = {\n    /**\n     * Tells the plugin if the element should animated when toggled.\n     * @option\n     * @example false\n     */\n    animate: false\n  };\n\n  // Window exports\n  Foundation.plugin(Toggler, 'Toggler');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Tooltip module.\n   * @module foundation.tooltip\n   * @requires foundation.util.box\n   * @requires foundation.util.triggers\n   */\n\n  var Tooltip = function () {\n    /**\n     * Creates a new instance of a Tooltip.\n     * @class\n     * @fires Tooltip#init\n     * @param {jQuery} element - jQuery object to attach a tooltip to.\n     * @param {Object} options - object to extend the default configuration.\n     */\n\n    function Tooltip(element, options) {\n      _classCallCheck(this, Tooltip);\n\n      this.$element = element;\n      this.options = $.extend({}, Tooltip.defaults, this.$element.data(), options);\n\n      this.isActive = false;\n      this.isClick = false;\n      this._init();\n\n      Foundation.registerPlugin(this, 'Tooltip');\n    }\n\n    /**\n     * Initializes the tooltip by setting the creating the tip element, adding it's text, setting private variables and setting attributes on the anchor.\n     * @private\n     */\n\n\n    _createClass(Tooltip, [{\n      key: '_init',\n      value: function _init() {\n        var elemId = this.$element.attr('aria-describedby') || Foundation.GetYoDigits(6, 'tooltip');\n\n        this.options.positionClass = this._getPositionClass(this.$element);\n        this.options.tipText = this.options.tipText || this.$element.attr('title');\n        this.template = this.options.template ? $(this.options.template) : this._buildTemplate(elemId);\n\n        this.template.appendTo(document.body).text(this.options.tipText).hide();\n\n        this.$element.attr({\n          'title': '',\n          'aria-describedby': elemId,\n          'data-yeti-box': elemId,\n          'data-toggle': elemId,\n          'data-resize': elemId\n        }).addClass(this.triggerClass);\n\n        //helper variables to track movement on collisions\n        this.usedPositions = [];\n        this.counter = 4;\n        this.classChanged = false;\n\n        this._events();\n      }\n\n      /**\n       * Grabs the current positioning class, if present, and returns the value or an empty string.\n       * @private\n       */\n\n    }, {\n      key: '_getPositionClass',\n      value: function _getPositionClass(element) {\n        if (!element) {\n          return '';\n        }\n        // var position = element.attr('class').match(/top|left|right/g);\n        var position = element[0].className.match(/\\b(top|left|right)\\b/g);\n        position = position ? position[0] : '';\n        return position;\n      }\n    }, {\n      key: '_buildTemplate',\n\n      /**\n       * builds the tooltip element, adds attributes, and returns the template.\n       * @private\n       */\n      value: function _buildTemplate(id) {\n        var templateClasses = (this.options.tooltipClass + ' ' + this.options.positionClass + ' ' + this.options.templateClasses).trim();\n        var $template = $('<div></div>').addClass(templateClasses).attr({\n          'role': 'tooltip',\n          'aria-hidden': true,\n          'data-is-active': false,\n          'data-is-focus': false,\n          'id': id\n        });\n        return $template;\n      }\n\n      /**\n       * Function that gets called if a collision event is detected.\n       * @param {String} position - positioning class to try\n       * @private\n       */\n\n    }, {\n      key: '_reposition',\n      value: function _reposition(position) {\n        this.usedPositions.push(position ? position : 'bottom');\n\n        //default, try switching to opposite side\n        if (!position && this.usedPositions.indexOf('top') < 0) {\n          this.template.addClass('top');\n        } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\n          this.template.removeClass(position);\n        } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\n          this.template.removeClass(position).addClass('right');\n        } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\n          this.template.removeClass(position).addClass('left');\n        }\n\n        //if default change didn't work, try bottom or left first\n        else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.template.addClass('left');\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.template.removeClass(position).addClass('left');\n          } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.template.removeClass(position);\n          } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.template.removeClass(position);\n          }\n          //if nothing cleared, set to bottom\n          else {\n              this.template.removeClass(position);\n            }\n        this.classChanged = true;\n        this.counter--;\n      }\n\n      /**\n       * sets the position class of an element and recursively calls itself until there are no more possible positions to attempt, or the tooltip element is no longer colliding.\n       * if the tooltip is larger than the screen width, default to full width - any user selected margin\n       * @private\n       */\n\n    }, {\n      key: '_setPosition',\n      value: function _setPosition() {\n        var position = this._getPositionClass(this.template),\n            $tipDims = Foundation.Box.GetDimensions(this.template),\n            $anchorDims = Foundation.Box.GetDimensions(this.$element),\n            direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\n            param = direction === 'top' ? 'height' : 'width',\n            offset = param === 'height' ? this.options.vOffset : this.options.hOffset,\n            _this = this;\n\n        if ($tipDims.width >= $tipDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.template)) {\n          this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            // this.$element.offset(Foundation.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            'width': $anchorDims.windowDims.width - this.options.hOffset * 2,\n            'height': 'auto'\n          });\n          return false;\n        }\n\n        this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center ' + (position || 'bottom'), this.options.vOffset, this.options.hOffset));\n\n        while (!Foundation.Box.ImNotTouchingYou(this.template) && this.counter) {\n          this._reposition(position);\n          this._setPosition();\n        }\n      }\n\n      /**\n       * reveals the tooltip, and fires an event to close any other open tooltips on the page\n       * @fires Tooltip#closeme\n       * @fires Tooltip#show\n       * @function\n       */\n\n    }, {\n      key: 'show',\n      value: function show() {\n        if (this.options.showOn !== 'all' && !Foundation.MediaQuery.atLeast(this.options.showOn)) {\n          // console.error('The screen is too small to display this tooltip');\n          return false;\n        }\n\n        var _this = this;\n        this.template.css('visibility', 'hidden').show();\n        this._setPosition();\n\n        /**\n         * Fires to close all other open tooltips on the page\n         * @event Closeme#tooltip\n         */\n        this.$element.trigger('closeme.zf.tooltip', this.template.attr('id'));\n\n        this.template.attr({\n          'data-is-active': true,\n          'aria-hidden': false\n        });\n        _this.isActive = true;\n        // console.log(this.template);\n        this.template.stop().hide().css('visibility', '').fadeIn(this.options.fadeInDuration, function () {\n          //maybe do stuff?\n        });\n        /**\n         * Fires when the tooltip is shown\n         * @event Tooltip#show\n         */\n        this.$element.trigger('show.zf.tooltip');\n      }\n\n      /**\n       * Hides the current tooltip, and resets the positioning class if it was changed due to collision\n       * @fires Tooltip#hide\n       * @function\n       */\n\n    }, {\n      key: 'hide',\n      value: function hide() {\n        // console.log('hiding', this.$element.data('yeti-box'));\n        var _this = this;\n        this.template.stop().attr({\n          'aria-hidden': true,\n          'data-is-active': false\n        }).fadeOut(this.options.fadeOutDuration, function () {\n          _this.isActive = false;\n          _this.isClick = false;\n          if (_this.classChanged) {\n            _this.template.removeClass(_this._getPositionClass(_this.template)).addClass(_this.options.positionClass);\n\n            _this.usedPositions = [];\n            _this.counter = 4;\n            _this.classChanged = false;\n          }\n        });\n        /**\n         * fires when the tooltip is hidden\n         * @event Tooltip#hide\n         */\n        this.$element.trigger('hide.zf.tooltip');\n      }\n\n      /**\n       * adds event listeners for the tooltip and its anchor\n       * TODO combine some of the listeners like focus and mouseenter, etc.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        var $template = this.template;\n        var isFocus = false;\n\n        if (!this.options.disableHover) {\n\n          this.$element.on('mouseenter.zf.tooltip', function (e) {\n            if (!_this.isActive) {\n              _this.timeout = setTimeout(function () {\n                _this.show();\n              }, _this.options.hoverDelay);\n            }\n          }).on('mouseleave.zf.tooltip', function (e) {\n            clearTimeout(_this.timeout);\n            if (!isFocus || !_this.isClick && _this.options.clickOpen) {\n              _this.hide();\n            }\n          });\n        }\n\n        if (this.options.clickOpen) {\n          this.$element.on('mousedown.zf.tooltip', function (e) {\n            e.stopImmediatePropagation();\n            if (_this.isClick) {\n              _this.hide();\n              // _this.isClick = false;\n            } else {\n                _this.isClick = true;\n                if ((_this.options.disableHover || !_this.$element.attr('tabindex')) && !_this.isActive) {\n                  _this.show();\n                }\n              }\n          });\n        }\n\n        if (!this.options.disableForTouch) {\n          this.$element.on('tap.zf.tooltip touchend.zf.tooltip', function (e) {\n            _this.isActive ? _this.hide() : _this.show();\n          });\n        }\n\n        this.$element.on({\n          // 'toggle.zf.trigger': this.toggle.bind(this),\n          // 'close.zf.trigger': this.hide.bind(this)\n          'close.zf.trigger': this.hide.bind(this)\n        });\n\n        this.$element.on('focus.zf.tooltip', function (e) {\n          isFocus = true;\n          // console.log(_this.isClick);\n          if (_this.isClick) {\n            return false;\n          } else {\n            // $(window)\n            _this.show();\n          }\n        }).on('focusout.zf.tooltip', function (e) {\n          isFocus = false;\n          _this.isClick = false;\n          _this.hide();\n        }).on('resizeme.zf.trigger', function () {\n          if (_this.isActive) {\n            _this._setPosition();\n          }\n        });\n      }\n\n      /**\n       * adds a toggle method, in addition to the static show() & hide() functions\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.isActive) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      }\n\n      /**\n       * Destroys an instance of tooltip, removes template element from the view.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.attr('title', this.template.text()).off('.zf.trigger .zf.tootip')\n        //  .removeClass('has-tip')\n        .removeAttr('aria-describedby').removeAttr('data-yeti-box').removeAttr('data-toggle').removeAttr('data-resize');\n\n        this.template.remove();\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Tooltip;\n  }();\n\n  Tooltip.defaults = {\n    disableForTouch: false,\n    /**\n     * Time, in ms, before a tooltip should open on hover.\n     * @option\n     * @example 200\n     */\n    hoverDelay: 200,\n    /**\n     * Time, in ms, a tooltip should take to fade into view.\n     * @option\n     * @example 150\n     */\n    fadeInDuration: 150,\n    /**\n     * Time, in ms, a tooltip should take to fade out of view.\n     * @option\n     * @example 150\n     */\n    fadeOutDuration: 150,\n    /**\n     * Disables hover events from opening the tooltip if set to true\n     * @option\n     * @example false\n     */\n    disableHover: false,\n    /**\n     * Optional addtional classes to apply to the tooltip template on init.\n     * @option\n     * @example 'my-cool-tip-class'\n     */\n    templateClasses: '',\n    /**\n     * Non-optional class added to tooltip templates. Foundation default is 'tooltip'.\n     * @option\n     * @example 'tooltip'\n     */\n    tooltipClass: 'tooltip',\n    /**\n     * Class applied to the tooltip anchor element.\n     * @option\n     * @example 'has-tip'\n     */\n    triggerClass: 'has-tip',\n    /**\n     * Minimum breakpoint size at which to open the tooltip.\n     * @option\n     * @example 'small'\n     */\n    showOn: 'small',\n    /**\n     * Custom template to be used to generate markup for tooltip.\n     * @option\n     * @example '&lt;div class=\"tooltip\"&gt;&lt;/div&gt;'\n     */\n    template: '',\n    /**\n     * Text displayed in the tooltip template on open.\n     * @option\n     * @example 'Some cool space fact here.'\n     */\n    tipText: '',\n    touchCloseText: 'Tap to close.',\n    /**\n     * Allows the tooltip to remain open if triggered with a click or touch event.\n     * @option\n     * @example true\n     */\n    clickOpen: true,\n    /**\n     * Additional positioning classes, set by the JS\n     * @option\n     * @example 'top'\n     */\n    positionClass: '',\n    /**\n     * Distance, in pixels, the template should push away from the anchor on the Y axis.\n     * @option\n     * @example 10\n     */\n    vOffset: 10,\n    /**\n     * Distance, in pixels, the template should push away from the anchor on the X axis, if aligned to a side.\n     * @option\n     * @example 12\n     */\n    hOffset: 12\n  };\n\n  /**\n   * TODO utilize resize event trigger\n   */\n\n  // Window exports\n  Foundation.plugin(Tooltip, 'Tooltip');\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  Foundation.Box = {\n    ImNotTouchingYou: ImNotTouchingYou,\n    GetDimensions: GetDimensions,\n    GetOffsets: GetOffsets\n  };\n\n  /**\n   * Compares the dimensions of an element to a container and determines collision events with container.\n   * @function\n   * @param {jQuery} element - jQuery object to test for collisions.\n   * @param {jQuery} parent - jQuery object to use as bounding container.\n   * @param {Boolean} lrOnly - set to true to check left and right values only.\n   * @param {Boolean} tbOnly - set to true to check top and bottom values only.\n   * @default if no parent object passed, detects collisions with `window`.\n   * @returns {Boolean} - true if collision free, false if a collision in any direction.\n   */\n  function ImNotTouchingYou(element, parent, lrOnly, tbOnly) {\n    var eleDims = GetDimensions(element),\n        top,\n        bottom,\n        left,\n        right;\n\n    if (parent) {\n      var parDims = GetDimensions(parent);\n\n      bottom = eleDims.offset.top + eleDims.height <= parDims.height + parDims.offset.top;\n      top = eleDims.offset.top >= parDims.offset.top;\n      left = eleDims.offset.left >= parDims.offset.left;\n      right = eleDims.offset.left + eleDims.width <= parDims.width;\n    } else {\n      bottom = eleDims.offset.top + eleDims.height <= eleDims.windowDims.height + eleDims.windowDims.offset.top;\n      top = eleDims.offset.top >= eleDims.windowDims.offset.top;\n      left = eleDims.offset.left >= eleDims.windowDims.offset.left;\n      right = eleDims.offset.left + eleDims.width <= eleDims.windowDims.width;\n    }\n\n    var allDirs = [bottom, top, left, right];\n\n    if (lrOnly) {\n      return left === right === true;\n    }\n\n    if (tbOnly) {\n      return top === bottom === true;\n    }\n\n    return allDirs.indexOf(false) === -1;\n  };\n\n  /**\n   * Uses native methods to return an object of dimension values.\n   * @function\n   * @param {jQuery || HTML} element - jQuery object or DOM element for which to get the dimensions. Can be any element other that document or window.\n   * @returns {Object} - nested object of integer pixel values\n   * TODO - if element is window, return only those values.\n   */\n  function GetDimensions(elem, test) {\n    elem = elem.length ? elem[0] : elem;\n\n    if (elem === window || elem === document) {\n      throw new Error(\"I'm sorry, Dave. I'm afraid I can't do that.\");\n    }\n\n    var rect = elem.getBoundingClientRect(),\n        parRect = elem.parentNode.getBoundingClientRect(),\n        winRect = document.body.getBoundingClientRect(),\n        winY = window.pageYOffset,\n        winX = window.pageXOffset;\n\n    return {\n      width: rect.width,\n      height: rect.height,\n      offset: {\n        top: rect.top + winY,\n        left: rect.left + winX\n      },\n      parentDims: {\n        width: parRect.width,\n        height: parRect.height,\n        offset: {\n          top: parRect.top + winY,\n          left: parRect.left + winX\n        }\n      },\n      windowDims: {\n        width: winRect.width,\n        height: winRect.height,\n        offset: {\n          top: winY,\n          left: winX\n        }\n      }\n    };\n  }\n\n  /**\n   * Returns an object of top and left integer pixel values for dynamically rendered elements,\n   * such as: Tooltip, Reveal, and Dropdown\n   * @function\n   * @param {jQuery} element - jQuery object for the element being positioned.\n   * @param {jQuery} anchor - jQuery object for the element's anchor point.\n   * @param {String} position - a string relating to the desired position of the element, relative to it's anchor\n   * @param {Number} vOffset - integer pixel value of desired vertical separation between anchor and element.\n   * @param {Number} hOffset - integer pixel value of desired horizontal separation between anchor and element.\n   * @param {Boolean} isOverflow - if a collision event is detected, sets to true to default the element to full width - any desired offset.\n   * TODO alter/rewrite to work with `em` values as well/instead of pixels\n   */\n  function GetOffsets(element, anchor, position, vOffset, hOffset, isOverflow) {\n    var $eleDims = GetDimensions(element),\n        $anchorDims = anchor ? GetDimensions(anchor) : null;\n\n    switch (position) {\n      case 'top':\n        return {\n          left: Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left,\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n        };\n        break;\n      case 'left':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: $anchorDims.offset.top\n        };\n        break;\n      case 'right':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset,\n          top: $anchorDims.offset.top\n        };\n        break;\n      case 'center top':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width / 2 - $eleDims.width / 2,\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n        };\n        break;\n      case 'center bottom':\n        return {\n          left: isOverflow ? hOffset : $anchorDims.offset.left + $anchorDims.width / 2 - $eleDims.width / 2,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n        break;\n      case 'center left':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: $anchorDims.offset.top + $anchorDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'center right':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset + 1,\n          top: $anchorDims.offset.top + $anchorDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'center':\n        return {\n          left: $eleDims.windowDims.offset.left + $eleDims.windowDims.width / 2 - $eleDims.width / 2,\n          top: $eleDims.windowDims.offset.top + $eleDims.windowDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'reveal':\n        return {\n          left: ($eleDims.windowDims.width - $eleDims.width) / 2,\n          top: $eleDims.windowDims.offset.top + vOffset\n        };\n      case 'reveal full':\n        return {\n          left: $eleDims.windowDims.offset.left,\n          top: $eleDims.windowDims.offset.top\n        };\n        break;\n      default:\n        return {\n          left: Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n    }\n  }\n}(jQuery);\n/*******************************************\n *                                         *\n * This util was created by Marius Olbertz *\n * Please thank Marius on GitHub /owlbertz *\n * or the web http://www.mariusolbertz.de/ *\n *                                         *\n ******************************************/\n\n'use strict';\n\n!function ($) {\n\n  var keyCodes = {\n    9: 'TAB',\n    13: 'ENTER',\n    27: 'ESCAPE',\n    32: 'SPACE',\n    37: 'ARROW_LEFT',\n    38: 'ARROW_UP',\n    39: 'ARROW_RIGHT',\n    40: 'ARROW_DOWN'\n  };\n\n  var commands = {};\n\n  var Keyboard = {\n    keys: getKeyCodes(keyCodes),\n\n    /**\n     * Parses the (keyboard) event and returns a String that represents its key\n     * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n     * @param {Event} event - the event generated by the event handler\n     * @return String key - String that represents the key pressed\n     */\n    parseKey: function (event) {\n      var key = keyCodes[event.which || event.keyCode] || String.fromCharCode(event.which).toUpperCase();\n      if (event.shiftKey) key = 'SHIFT_' + key;\n      if (event.ctrlKey) key = 'CTRL_' + key;\n      if (event.altKey) key = 'ALT_' + key;\n      return key;\n    },\n\n\n    /**\n     * Handles the given (keyboard) event\n     * @param {Event} event - the event generated by the event handler\n     * @param {String} component - Foundation component's name, e.g. Slider or Reveal\n     * @param {Objects} functions - collection of functions that are to be executed\n     */\n    handleKey: function (event, component, functions) {\n      var commandList = commands[component],\n          keyCode = this.parseKey(event),\n          cmds,\n          command,\n          fn;\n\n      if (!commandList) return console.warn('Component not defined!');\n\n      if (typeof commandList.ltr === 'undefined') {\n        // this component does not differentiate between ltr and rtl\n        cmds = commandList; // use plain list\n      } else {\n          // merge ltr and rtl: if document is rtl, rtl overwrites ltr and vice versa\n          if (Foundation.rtl()) cmds = $.extend({}, commandList.ltr, commandList.rtl);else cmds = $.extend({}, commandList.rtl, commandList.ltr);\n        }\n      command = cmds[keyCode];\n\n      fn = functions[command];\n      if (fn && typeof fn === 'function') {\n        // execute function  if exists\n        fn.apply();\n        if (functions.handled || typeof functions.handled === 'function') {\n          // execute function when event was handled\n          functions.handled.apply();\n        }\n      } else {\n        if (functions.unhandled || typeof functions.unhandled === 'function') {\n          // execute function when event was not handled\n          functions.unhandled.apply();\n        }\n      }\n    },\n\n\n    /**\n     * Finds all focusable elements within the given `$element`\n     * @param {jQuery} $element - jQuery object to search within\n     * @return {jQuery} $focusable - all focusable elements within `$element`\n     */\n    findFocusable: function ($element) {\n      return $element.find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').filter(function () {\n        if (!$(this).is(':visible') || $(this).attr('tabindex') < 0) {\n          return false;\n        } //only have visible elements and those that have a tabindex greater or equal 0\n        return true;\n      });\n    },\n\n\n    /**\n     * Returns the component name name\n     * @param {Object} component - Foundation component, e.g. Slider or Reveal\n     * @return String componentName\n     */\n\n    register: function (componentName, cmds) {\n      commands[componentName] = cmds;\n    }\n  };\n\n  /*\n   * Constants for easier comparing.\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n   */\n  function getKeyCodes(kcs) {\n    var k = {};\n    for (var kc in kcs) {\n      k[kcs[kc]] = kcs[kc];\n    }return k;\n  }\n\n  Foundation.Keyboard = Keyboard;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  // Default set of media queries\n  var defaultQueries = {\n    'default': 'only screen',\n    landscape: 'only screen and (orientation: landscape)',\n    portrait: 'only screen and (orientation: portrait)',\n    retina: 'only screen and (-webkit-min-device-pixel-ratio: 2),' + 'only screen and (min--moz-device-pixel-ratio: 2),' + 'only screen and (-o-min-device-pixel-ratio: 2/1),' + 'only screen and (min-device-pixel-ratio: 2),' + 'only screen and (min-resolution: 192dpi),' + 'only screen and (min-resolution: 2dppx)'\n  };\n\n  var MediaQuery = {\n    queries: [],\n\n    current: '',\n\n    /**\n     * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\n     * @function\n     * @private\n     */\n    _init: function () {\n      var self = this;\n      var extractedStyles = $('.foundation-mq').css('font-family');\n      var namedQueries;\n\n      namedQueries = parseStyleToObject(extractedStyles);\n\n      for (var key in namedQueries) {\n        self.queries.push({\n          name: key,\n          value: 'only screen and (min-width: ' + namedQueries[key] + ')'\n        });\n      }\n\n      this.current = this._getCurrentSize();\n\n      this._watcher();\n    },\n\n\n    /**\n     * Checks if the screen is at least as wide as a breakpoint.\n     * @function\n     * @param {String} size - Name of the breakpoint to check.\n     * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\n     */\n    atLeast: function (size) {\n      var query = this.get(size);\n\n      if (query) {\n        return window.matchMedia(query).matches;\n      }\n\n      return false;\n    },\n\n\n    /**\n     * Gets the media query of a breakpoint.\n     * @function\n     * @param {String} size - Name of the breakpoint to get.\n     * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\n     */\n    get: function (size) {\n      for (var i in this.queries) {\n        var query = this.queries[i];\n        if (size === query.name) return query.value;\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\n     * @function\n     * @private\n     * @returns {String} Name of the current breakpoint.\n     */\n    _getCurrentSize: function () {\n      var matched;\n\n      for (var i in this.queries) {\n        var query = this.queries[i];\n\n        if (window.matchMedia(query.value).matches) {\n          matched = query;\n        }\n      }\n\n      if (typeof matched === 'object') {\n        return matched.name;\n      } else {\n        return matched;\n      }\n    },\n\n\n    /**\n     * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\n     * @function\n     * @private\n     */\n    _watcher: function () {\n      var _this = this;\n\n      $(window).on('resize.zf.mediaquery', function () {\n        var newSize = _this._getCurrentSize();\n\n        if (newSize !== _this.current) {\n          // Broadcast the media query change on the window\n          $(window).trigger('changed.zf.mediaquery', [newSize, _this.current]);\n\n          // Change the current media query\n          _this.current = newSize;\n        }\n      });\n    }\n  };\n\n  Foundation.MediaQuery = MediaQuery;\n\n  // matchMedia() polyfill - Test a CSS media type/query in JS.\n  // Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\n  window.matchMedia || (window.matchMedia = function () {\n    'use strict';\n\n    // For browsers that support matchMedium api such as IE 9 and webkit\n\n    var styleMedia = window.styleMedia || window.media;\n\n    // For those that don't support matchMedium\n    if (!styleMedia) {\n      var style = document.createElement('style'),\n          script = document.getElementsByTagName('script')[0],\n          info = null;\n\n      style.type = 'text/css';\n      style.id = 'matchmediajs-test';\n\n      script.parentNode.insertBefore(style, script);\n\n      // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n      info = 'getComputedStyle' in window && window.getComputedStyle(style, null) || style.currentStyle;\n\n      styleMedia = {\n        matchMedium: function (media) {\n          var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n          // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n          if (style.styleSheet) {\n            style.styleSheet.cssText = text;\n          } else {\n            style.textContent = text;\n          }\n\n          // Test if media query is true or false\n          return info.width === '1px';\n        }\n      };\n    }\n\n    return function (media) {\n      return {\n        matches: styleMedia.matchMedium(media || 'all'),\n        media: media || 'all'\n      };\n    };\n  }());\n\n  // Thank you: https://github.com/sindresorhus/query-string\n  function parseStyleToObject(str) {\n    var styleObject = {};\n\n    if (typeof str !== 'string') {\n      return styleObject;\n    }\n\n    str = str.trim().slice(1, -1); // browsers re-quote string style values\n\n    if (!str) {\n      return styleObject;\n    }\n\n    styleObject = str.split('&').reduce(function (ret, param) {\n      var parts = param.replace(/\\+/g, ' ').split('=');\n      var key = parts[0];\n      var val = parts[1];\n      key = decodeURIComponent(key);\n\n      // missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n      val = val === undefined ? null : decodeURIComponent(val);\n\n      if (!ret.hasOwnProperty(key)) {\n        ret[key] = val;\n      } else if (Array.isArray(ret[key])) {\n        ret[key].push(val);\n      } else {\n        ret[key] = [ret[key], val];\n      }\n      return ret;\n    }, {});\n\n    return styleObject;\n  }\n\n  Foundation.MediaQuery = MediaQuery;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  /**\n   * Motion module.\n   * @module foundation.motion\n   */\n\n  var initClasses = ['mui-enter', 'mui-leave'];\n  var activeClasses = ['mui-enter-active', 'mui-leave-active'];\n\n  var Motion = {\n    animateIn: function (element, animation, cb) {\n      animate(true, element, animation, cb);\n    },\n\n    animateOut: function (element, animation, cb) {\n      animate(false, element, animation, cb);\n    }\n  };\n\n  function Move(duration, elem, fn) {\n    var anim,\n        prog,\n        start = null;\n    // console.log('called');\n\n    function move(ts) {\n      if (!start) start = window.performance.now();\n      // console.log(start, ts);\n      prog = ts - start;\n      fn.apply(elem);\n\n      if (prog < duration) {\n        anim = window.requestAnimationFrame(move, elem);\n      } else {\n        window.cancelAnimationFrame(anim);\n        elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\n      }\n    }\n    anim = window.requestAnimationFrame(move);\n  }\n\n  /**\n   * Animates an element in or out using a CSS transition class.\n   * @function\n   * @private\n   * @param {Boolean} isIn - Defines if the animation is in or out.\n   * @param {Object} element - jQuery or HTML object to animate.\n   * @param {String} animation - CSS class to use.\n   * @param {Function} cb - Callback to run when animation is finished.\n   */\n  function animate(isIn, element, animation, cb) {\n    element = $(element).eq(0);\n\n    if (!element.length) return;\n\n    var initClass = isIn ? initClasses[0] : initClasses[1];\n    var activeClass = isIn ? activeClasses[0] : activeClasses[1];\n\n    // Set up the animation\n    reset();\n\n    element.addClass(animation).css('transition', 'none');\n\n    requestAnimationFrame(function () {\n      element.addClass(initClass);\n      if (isIn) element.show();\n    });\n\n    // Start the animation\n    requestAnimationFrame(function () {\n      element[0].offsetWidth;\n      element.css('transition', '').addClass(activeClass);\n    });\n\n    // Clean up the animation when it finishes\n    element.one(Foundation.transitionend(element), finish);\n\n    // Hides the element (for out animations), resets the element, and runs a callback\n    function finish() {\n      if (!isIn) element.hide();\n      reset();\n      if (cb) cb.apply(element);\n    }\n\n    // Resets transitions and removes motion-specific classes\n    function reset() {\n      element[0].style.transitionDuration = 0;\n      element.removeClass(initClass + ' ' + activeClass + ' ' + animation);\n    }\n  }\n\n  Foundation.Move = Move;\n  Foundation.Motion = Motion;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  var Nest = {\n    Feather: function (menu) {\n      var type = arguments.length <= 1 || arguments[1] === undefined ? 'zf' : arguments[1];\n\n      menu.attr('role', 'menubar');\n\n      var items = menu.find('li').attr({ 'role': 'menuitem' }),\n          subMenuClass = 'is-' + type + '-submenu',\n          subItemClass = subMenuClass + '-item',\n          hasSubClass = 'is-' + type + '-submenu-parent';\n\n      menu.find('a:first').attr('tabindex', 0);\n\n      items.each(function () {\n        var $item = $(this),\n            $sub = $item.children('ul');\n\n        if ($sub.length) {\n          $item.addClass(hasSubClass).attr({\n            'aria-haspopup': true,\n            'aria-expanded': false,\n            'aria-label': $item.children('a:first').text()\n          });\n\n          $sub.addClass('submenu ' + subMenuClass).attr({\n            'data-submenu': '',\n            'aria-hidden': true,\n            'role': 'menu'\n          });\n        }\n\n        if ($item.parent('[data-submenu]').length) {\n          $item.addClass('is-submenu-item ' + subItemClass);\n        }\n      });\n\n      return;\n    },\n    Burn: function (menu, type) {\n      var items = menu.find('li').removeAttr('tabindex'),\n          subMenuClass = 'is-' + type + '-submenu',\n          subItemClass = subMenuClass + '-item',\n          hasSubClass = 'is-' + type + '-submenu-parent';\n\n      menu.find('*').removeClass(subMenuClass + ' ' + subItemClass + ' ' + hasSubClass + ' is-submenu-item submenu is-active').removeAttr('data-submenu').css('display', '');\n\n      // console.log(      menu.find('.' + subMenuClass + ', .' + subItemClass + ', .has-submenu, .is-submenu-item, .submenu, [data-submenu]')\n      //           .removeClass(subMenuClass + ' ' + subItemClass + ' has-submenu is-submenu-item submenu')\n      //           .removeAttr('data-submenu'));\n      // items.each(function(){\n      //   var $item = $(this),\n      //       $sub = $item.children('ul');\n      //   if($item.parent('[data-submenu]').length){\n      //     $item.removeClass('is-submenu-item ' + subItemClass);\n      //   }\n      //   if($sub.length){\n      //     $item.removeClass('has-submenu');\n      //     $sub.removeClass('submenu ' + subMenuClass).removeAttr('data-submenu');\n      //   }\n      // });\n    }\n  };\n\n  Foundation.Nest = Nest;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  function Timer(elem, options, cb) {\n    var _this = this,\n        duration = options.duration,\n        //options is an object for easily adding features later.\n    nameSpace = Object.keys(elem.data())[0] || 'timer',\n        remain = -1,\n        start,\n        timer;\n\n    this.isPaused = false;\n\n    this.restart = function () {\n      remain = -1;\n      clearTimeout(timer);\n      this.start();\n    };\n\n    this.start = function () {\n      this.isPaused = false;\n      // if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      remain = remain <= 0 ? duration : remain;\n      elem.data('paused', false);\n      start = Date.now();\n      timer = setTimeout(function () {\n        if (options.infinite) {\n          _this.restart(); //rerun the timer.\n        }\n        cb();\n      }, remain);\n      elem.trigger('timerstart.zf.' + nameSpace);\n    };\n\n    this.pause = function () {\n      this.isPaused = true;\n      //if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      elem.data('paused', true);\n      var end = Date.now();\n      remain = remain - (end - start);\n      elem.trigger('timerpaused.zf.' + nameSpace);\n    };\n  }\n\n  /**\n   * Runs a callback function when images are fully loaded.\n   * @param {Object} images - Image(s) to check if loaded.\n   * @param {Func} callback - Function to execute when image is fully loaded.\n   */\n  function onImagesLoaded(images, callback) {\n    var self = this,\n        unloaded = images.length;\n\n    if (unloaded === 0) {\n      callback();\n    }\n\n    images.each(function () {\n      if (this.complete) {\n        singleImageLoaded();\n      } else if (typeof this.naturalWidth !== 'undefined' && this.naturalWidth > 0) {\n        singleImageLoaded();\n      } else {\n        $(this).one('load', function () {\n          singleImageLoaded();\n        });\n      }\n    });\n\n    function singleImageLoaded() {\n      unloaded--;\n      if (unloaded === 0) {\n        callback();\n      }\n    }\n  }\n\n  Foundation.Timer = Timer;\n  Foundation.onImagesLoaded = onImagesLoaded;\n}(jQuery);\n//**************************************************\n//**Work inspired by multiple jquery swipe plugins**\n//**Done by Yohai Ararat ***************************\n//**************************************************\n(function ($) {\n\n\t$.spotSwipe = {\n\t\tversion: '1.0.0',\n\t\tenabled: 'ontouchstart' in document.documentElement,\n\t\tpreventDefault: false,\n\t\tmoveThreshold: 75,\n\t\ttimeThreshold: 200\n\t};\n\n\tvar startPosX,\n\t    startPosY,\n\t    startTime,\n\t    elapsedTime,\n\t    isMoving = false;\n\n\tfunction onTouchEnd() {\n\t\t//  alert(this);\n\t\tthis.removeEventListener('touchmove', onTouchMove);\n\t\tthis.removeEventListener('touchend', onTouchEnd);\n\t\tisMoving = false;\n\t}\n\n\tfunction onTouchMove(e) {\n\t\tif ($.spotSwipe.preventDefault) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tif (isMoving) {\n\t\t\tvar x = e.touches[0].pageX;\n\t\t\tvar y = e.touches[0].pageY;\n\t\t\tvar dx = startPosX - x;\n\t\t\tvar dy = startPosY - y;\n\t\t\tvar dir;\n\t\t\telapsedTime = new Date().getTime() - startTime;\n\t\t\tif (Math.abs(dx) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n\t\t\t\tdir = dx > 0 ? 'left' : 'right';\n\t\t\t}\n\t\t\t// else if(Math.abs(dy) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n\t\t\t//   dir = dy > 0 ? 'down' : 'up';\n\t\t\t// }\n\t\t\tif (dir) {\n\t\t\t\te.preventDefault();\n\t\t\t\tonTouchEnd.call(this);\n\t\t\t\t$(this).trigger('swipe', dir).trigger('swipe' + dir);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction onTouchStart(e) {\n\t\tif (e.touches.length == 1) {\n\t\t\tstartPosX = e.touches[0].pageX;\n\t\t\tstartPosY = e.touches[0].pageY;\n\t\t\tisMoving = true;\n\t\t\tstartTime = new Date().getTime();\n\t\t\tthis.addEventListener('touchmove', onTouchMove, false);\n\t\t\tthis.addEventListener('touchend', onTouchEnd, false);\n\t\t}\n\t}\n\n\tfunction init() {\n\t\tthis.addEventListener && this.addEventListener('touchstart', onTouchStart, false);\n\t}\n\n\tfunction teardown() {\n\t\tthis.removeEventListener('touchstart', onTouchStart);\n\t}\n\n\t$.event.special.swipe = { setup: init };\n\n\t$.each(['left', 'up', 'down', 'right'], function () {\n\t\t$.event.special['swipe' + this] = { setup: function () {\n\t\t\t\t$(this).on('swipe', $.noop);\n\t\t\t} };\n\t});\n})(jQuery);\n/****************************************************\n * Method for adding psuedo drag events to elements *\n ***************************************************/\n!function ($) {\n\t$.fn.addTouch = function () {\n\t\tthis.each(function (i, el) {\n\t\t\t$(el).bind('touchstart touchmove touchend touchcancel', function () {\n\t\t\t\t//we pass the original event object because the jQuery event\n\t\t\t\t//object is normalized to w3c specs and does not provide the TouchList\n\t\t\t\thandleTouch(event);\n\t\t\t});\n\t\t});\n\n\t\tvar handleTouch = function (event) {\n\t\t\tvar touches = event.changedTouches,\n\t\t\t    first = touches[0],\n\t\t\t    eventTypes = {\n\t\t\t\ttouchstart: 'mousedown',\n\t\t\t\ttouchmove: 'mousemove',\n\t\t\t\ttouchend: 'mouseup'\n\t\t\t},\n\t\t\t    type = eventTypes[event.type],\n\t\t\t    simulatedEvent;\n\n\t\t\tif ('MouseEvent' in window && typeof window.MouseEvent === 'function') {\n\t\t\t\tsimulatedEvent = window.MouseEvent(type, {\n\t\t\t\t\t'bubbles': true,\n\t\t\t\t\t'cancelable': true,\n\t\t\t\t\t'screenX': first.screenX,\n\t\t\t\t\t'screenY': first.screenY,\n\t\t\t\t\t'clientX': first.clientX,\n\t\t\t\t\t'clientY': first.clientY\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsimulatedEvent = document.createEvent('MouseEvent');\n\t\t\t\tsimulatedEvent.initMouseEvent(type, true, true, window, 1, first.screenX, first.screenY, first.clientX, first.clientY, false, false, false, false, 0 /*left*/, null);\n\t\t\t}\n\t\t\tfirst.target.dispatchEvent(simulatedEvent);\n\t\t};\n\t};\n}(jQuery);\n\n//**********************************\n//**From the jQuery Mobile Library**\n//**need to recreate functionality**\n//**and try to improve if possible**\n//**********************************\n\n/* Removing the jQuery function ****\n************************************\n\n(function( $, window, undefined ) {\n\n\tvar $document = $( document ),\n\t\t// supportTouch = $.mobile.support.touch,\n\t\ttouchStartEvent = 'touchstart'//supportTouch ? \"touchstart\" : \"mousedown\",\n\t\ttouchStopEvent = 'touchend'//supportTouch ? \"touchend\" : \"mouseup\",\n\t\ttouchMoveEvent = 'touchmove'//supportTouch ? \"touchmove\" : \"mousemove\";\n\n\t// setup new event shortcuts\n\t$.each( ( \"touchstart touchmove touchend \" +\n\t\t\"swipe swipeleft swiperight\" ).split( \" \" ), function( i, name ) {\n\n\t\t$.fn[ name ] = function( fn ) {\n\t\t\treturn fn ? this.bind( name, fn ) : this.trigger( name );\n\t\t};\n\n\t\t// jQuery < 1.8\n\t\tif ( $.attrFn ) {\n\t\t\t$.attrFn[ name ] = true;\n\t\t}\n\t});\n\n\tfunction triggerCustomEvent( obj, eventType, event, bubble ) {\n\t\tvar originalType = event.type;\n\t\tevent.type = eventType;\n\t\tif ( bubble ) {\n\t\t\t$.event.trigger( event, undefined, obj );\n\t\t} else {\n\t\t\t$.event.dispatch.call( obj, event );\n\t\t}\n\t\tevent.type = originalType;\n\t}\n\n\t// also handles taphold\n\n\t// Also handles swipeleft, swiperight\n\t$.event.special.swipe = {\n\n\t\t// More than this horizontal displacement, and we will suppress scrolling.\n\t\tscrollSupressionThreshold: 30,\n\n\t\t// More time than this, and it isn't a swipe.\n\t\tdurationThreshold: 1000,\n\n\t\t// Swipe horizontal displacement must be more than this.\n\t\thorizontalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\n\n\t\t// Swipe vertical displacement must be less than this.\n\t\tverticalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\n\n\t\tgetLocation: function ( event ) {\n\t\t\tvar winPageX = window.pageXOffset,\n\t\t\t\twinPageY = window.pageYOffset,\n\t\t\t\tx = event.clientX,\n\t\t\t\ty = event.clientY;\n\n\t\t\tif ( event.pageY === 0 && Math.floor( y ) > Math.floor( event.pageY ) ||\n\t\t\t\tevent.pageX === 0 && Math.floor( x ) > Math.floor( event.pageX ) ) {\n\n\t\t\t\t// iOS4 clientX/clientY have the value that should have been\n\t\t\t\t// in pageX/pageY. While pageX/page/ have the value 0\n\t\t\t\tx = x - winPageX;\n\t\t\t\ty = y - winPageY;\n\t\t\t} else if ( y < ( event.pageY - winPageY) || x < ( event.pageX - winPageX ) ) {\n\n\t\t\t\t// Some Android browsers have totally bogus values for clientX/Y\n\t\t\t\t// when scrolling/zooming a page. Detectable since clientX/clientY\n\t\t\t\t// should never be smaller than pageX/pageY minus page scroll\n\t\t\t\tx = event.pageX - winPageX;\n\t\t\t\ty = event.pageY - winPageY;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t},\n\n\t\tstart: function( event ) {\n\t\t\tvar data = event.originalEvent.touches ?\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\n\t\t\treturn {\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\n\t\t\t\t\t\tcoords: [ location.x, location.y ],\n\t\t\t\t\t\torigin: $( event.target )\n\t\t\t\t\t};\n\t\t},\n\n\t\tstop: function( event ) {\n\t\t\tvar data = event.originalEvent.touches ?\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\n\t\t\treturn {\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\n\t\t\t\t\t\tcoords: [ location.x, location.y ]\n\t\t\t\t\t};\n\t\t},\n\n\t\thandleSwipe: function( start, stop, thisObject, origTarget ) {\n\t\t\tif ( stop.time - start.time < $.event.special.swipe.durationThreshold &&\n\t\t\t\tMath.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.horizontalDistanceThreshold &&\n\t\t\t\tMath.abs( start.coords[ 1 ] - stop.coords[ 1 ] ) < $.event.special.swipe.verticalDistanceThreshold ) {\n\t\t\t\tvar direction = start.coords[0] > stop.coords[ 0 ] ? \"swipeleft\" : \"swiperight\";\n\n\t\t\t\ttriggerCustomEvent( thisObject, \"swipe\", $.Event( \"swipe\", { target: origTarget, swipestart: start, swipestop: stop }), true );\n\t\t\t\ttriggerCustomEvent( thisObject, direction,$.Event( direction, { target: origTarget, swipestart: start, swipestop: stop } ), true );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\n\t\t},\n\n\t\t// This serves as a flag to ensure that at most one swipe event event is\n\t\t// in work at any given time\n\t\teventInProgress: false,\n\n\t\tsetup: function() {\n\t\t\tvar events,\n\t\t\t\tthisObject = this,\n\t\t\t\t$this = $( thisObject ),\n\t\t\t\tcontext = {};\n\n\t\t\t// Retrieve the events data for this element and add the swipe context\n\t\t\tevents = $.data( this, \"mobile-events\" );\n\t\t\tif ( !events ) {\n\t\t\t\tevents = { length: 0 };\n\t\t\t\t$.data( this, \"mobile-events\", events );\n\t\t\t}\n\t\t\tevents.length++;\n\t\t\tevents.swipe = context;\n\n\t\t\tcontext.start = function( event ) {\n\n\t\t\t\t// Bail if we're already working on a swipe event\n\t\t\t\tif ( $.event.special.swipe.eventInProgress ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t$.event.special.swipe.eventInProgress = true;\n\n\t\t\t\tvar stop,\n\t\t\t\t\tstart = $.event.special.swipe.start( event ),\n\t\t\t\t\torigTarget = event.target,\n\t\t\t\t\temitted = false;\n\n\t\t\t\tcontext.move = function( event ) {\n\t\t\t\t\tif ( !start || event.isDefaultPrevented() ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstop = $.event.special.swipe.stop( event );\n\t\t\t\t\tif ( !emitted ) {\n\t\t\t\t\t\temitted = $.event.special.swipe.handleSwipe( start, stop, thisObject, origTarget );\n\t\t\t\t\t\tif ( emitted ) {\n\n\t\t\t\t\t\t\t// Reset the context to make way for the next swipe event\n\t\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// prevent scrolling\n\t\t\t\t\tif ( Math.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.scrollSupressionThreshold ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tcontext.stop = function() {\n\t\t\t\t\t\temitted = true;\n\n\t\t\t\t\t\t// Reset the context to make way for the next swipe event\n\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\n\t\t\t\t\t\t$document.off( touchMoveEvent, context.move );\n\t\t\t\t\t\tcontext.move = null;\n\t\t\t\t};\n\n\t\t\t\t$document.on( touchMoveEvent, context.move )\n\t\t\t\t\t.one( touchStopEvent, context.stop );\n\t\t\t};\n\t\t\t$this.on( touchStartEvent, context.start );\n\t\t},\n\n\t\tteardown: function() {\n\t\t\tvar events, context;\n\n\t\t\tevents = $.data( this, \"mobile-events\" );\n\t\t\tif ( events ) {\n\t\t\t\tcontext = events.swipe;\n\t\t\t\tdelete events.swipe;\n\t\t\t\tevents.length--;\n\t\t\t\tif ( events.length === 0 ) {\n\t\t\t\t\t$.removeData( this, \"mobile-events\" );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( context ) {\n\t\t\t\tif ( context.start ) {\n\t\t\t\t\t$( this ).off( touchStartEvent, context.start );\n\t\t\t\t}\n\t\t\t\tif ( context.move ) {\n\t\t\t\t\t$document.off( touchMoveEvent, context.move );\n\t\t\t\t}\n\t\t\t\tif ( context.stop ) {\n\t\t\t\t\t$document.off( touchStopEvent, context.stop );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t$.each({\n\t\tswipeleft: \"swipe.left\",\n\t\tswiperight: \"swipe.right\"\n\t}, function( event, sourceEvent ) {\n\n\t\t$.event.special[ event ] = {\n\t\t\tsetup: function() {\n\t\t\t\t$( this ).bind( sourceEvent, $.noop );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\t$( this ).unbind( sourceEvent );\n\t\t\t}\n\t\t};\n\t});\n})( jQuery, this );\n*/\n'use strict';\n\n!function ($) {\n\n  var MutationObserver = function () {\n    var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n    for (var i = 0; i < prefixes.length; i++) {\n      if (prefixes[i] + 'MutationObserver' in window) {\n        return window[prefixes[i] + 'MutationObserver'];\n      }\n    }\n    return false;\n  }();\n\n  var triggers = function (el, type) {\n    el.data(type).split(' ').forEach(function (id) {\n      $('#' + id)[type === 'close' ? 'trigger' : 'triggerHandler'](type + '.zf.trigger', [el]);\n    });\n  };\n  // Elements with [data-open] will reveal a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-open]', function () {\n    triggers($(this), 'open');\n  });\n\n  // Elements with [data-close] will close a plugin that supports it when clicked.\n  // If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\n  $(document).on('click.zf.trigger', '[data-close]', function () {\n    var id = $(this).data('close');\n    if (id) {\n      triggers($(this), 'close');\n    } else {\n      $(this).trigger('close.zf.trigger');\n    }\n  });\n\n  // Elements with [data-toggle] will toggle a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-toggle]', function () {\n    triggers($(this), 'toggle');\n  });\n\n  // Elements with [data-closable] will respond to close.zf.trigger events.\n  $(document).on('close.zf.trigger', '[data-closable]', function (e) {\n    e.stopPropagation();\n    var animation = $(this).data('closable');\n\n    if (animation !== '') {\n      Foundation.Motion.animateOut($(this), animation, function () {\n        $(this).trigger('closed.zf');\n      });\n    } else {\n      $(this).fadeOut().trigger('closed.zf');\n    }\n  });\n\n  $(document).on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', function () {\n    var id = $(this).data('toggle-focus');\n    $('#' + id).triggerHandler('toggle.zf.trigger', [$(this)]);\n  });\n\n  /**\n  * Fires once after all other scripts have loaded\n  * @function\n  * @private\n  */\n  $(window).load(function () {\n    checkListeners();\n  });\n\n  function checkListeners() {\n    eventsListener();\n    resizeListener();\n    scrollListener();\n    closemeListener();\n  }\n\n  //******** only fires this function once on load, if there's something to watch ********\n  function closemeListener(pluginName) {\n    var yetiBoxes = $('[data-yeti-box]'),\n        plugNames = ['dropdown', 'tooltip', 'reveal'];\n\n    if (pluginName) {\n      if (typeof pluginName === 'string') {\n        plugNames.push(pluginName);\n      } else if (typeof pluginName === 'object' && typeof pluginName[0] === 'string') {\n        plugNames.concat(pluginName);\n      } else {\n        console.error('Plugin names must be strings');\n      }\n    }\n    if (yetiBoxes.length) {\n      var listeners = plugNames.map(function (name) {\n        return 'closeme.zf.' + name;\n      }).join(' ');\n\n      $(window).off(listeners).on(listeners, function (e, pluginId) {\n        var plugin = e.namespace.split('.')[0];\n        var plugins = $('[data-' + plugin + ']').not('[data-yeti-box=\"' + pluginId + '\"]');\n\n        plugins.each(function () {\n          var _this = $(this);\n\n          _this.triggerHandler('close.zf.trigger', [_this]);\n        });\n      });\n    }\n  }\n\n  function resizeListener(debounce) {\n    var timer = void 0,\n        $nodes = $('[data-resize]');\n    if ($nodes.length) {\n      $(window).off('resize.zf.trigger').on('resize.zf.trigger', function (e) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(function () {\n\n          if (!MutationObserver) {\n            //fallback for IE 9\n            $nodes.each(function () {\n              $(this).triggerHandler('resizeme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a resize event\n          $nodes.attr('data-events', \"resize\");\n        }, debounce || 10); //default time to emit resize event\n      });\n    }\n  }\n\n  function scrollListener(debounce) {\n    var timer = void 0,\n        $nodes = $('[data-scroll]');\n    if ($nodes.length) {\n      $(window).off('scroll.zf.trigger').on('scroll.zf.trigger', function (e) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(function () {\n\n          if (!MutationObserver) {\n            //fallback for IE 9\n            $nodes.each(function () {\n              $(this).triggerHandler('scrollme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a scroll event\n          $nodes.attr('data-events', \"scroll\");\n        }, debounce || 10); //default time to emit scroll event\n      });\n    }\n  }\n\n  function eventsListener() {\n    if (!MutationObserver) {\n      return false;\n    }\n    var nodes = document.querySelectorAll('[data-resize], [data-scroll], [data-mutate]');\n\n    //element callback\n    var listeningElementsMutation = function (mutationRecordsList) {\n      var $target = $(mutationRecordsList[0].target);\n      //trigger the event handler for the element depending on type\n      switch ($target.attr(\"data-events\")) {\n\n        case \"resize\":\n          $target.triggerHandler('resizeme.zf.trigger', [$target]);\n          break;\n\n        case \"scroll\":\n          $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\n          break;\n\n        // case \"mutate\" :\n        // console.log('mutate', $target);\n        // $target.triggerHandler('mutate.zf.trigger');\n        //\n        // //make sure we don't get stuck in an infinite loop from sloppy codeing\n        // if ($target.index('[data-mutate]') == $(\"[data-mutate]\").length-1) {\n        //   domMutationObserver();\n        // }\n        // break;\n\n        default:\n          return false;\n        //nothing\n      }\n    };\n\n    if (nodes.length) {\n      //for each element that needs to listen for resizing, scrolling, (or coming soon mutation) add a single observer\n      for (var i = 0; i <= nodes.length - 1; i++) {\n        var elementObserver = new MutationObserver(listeningElementsMutation);\n        elementObserver.observe(nodes[i], { attributes: true, childList: false, characterData: false, subtree: false, attributeFilter: [\"data-events\"] });\n      }\n    }\n  }\n\n  // ------------------------------------\n\n  // [PH]\n  // Foundation.CheckWatchers = checkWatchers;\n  Foundation.IHearYou = checkListeners;\n  // Foundation.ISeeYou = scrollListener;\n  // Foundation.IFeelYou = closemeListener;\n}(jQuery);\n\n// function domMutationObserver(debounce) {\n//   // !!! This is coming soon and needs more work; not active  !!! //\n//   var timer,\n//   nodes = document.querySelectorAll('[data-mutate]');\n//   //\n//   if (nodes.length) {\n//     // var MutationObserver = (function () {\n//     //   var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n//     //   for (var i=0; i < prefixes.length; i++) {\n//     //     if (prefixes[i] + 'MutationObserver' in window) {\n//     //       return window[prefixes[i] + 'MutationObserver'];\n//     //     }\n//     //   }\n//     //   return false;\n//     // }());\n//\n//\n//     //for the body, we need to listen for all changes effecting the style and class attributes\n//     var bodyObserver = new MutationObserver(bodyMutation);\n//     bodyObserver.observe(document.body, { attributes: true, childList: true, characterData: false, subtree:true, attributeFilter:[\"style\", \"class\"]});\n//\n//\n//     //body callback\n//     function bodyMutation(mutate) {\n//       //trigger all listening elements and signal a mutation event\n//       if (timer) { clearTimeout(timer); }\n//\n//       timer = setTimeout(function() {\n//         bodyObserver.disconnect();\n//         $('[data-mutate]').attr('data-events',\"mutate\");\n//       }, debounce || 150);\n//     }\n//   }\n// }","'use strict';\n\n!function($) {\n\n/**\n * Accordion module.\n * @module foundation.accordion\n * @requires foundation.util.keyboard\n * @requires foundation.util.motion\n */\n\nclass Accordion {\n  /**\n   * Creates a new instance of an accordion.\n   * @class\n   * @fires Accordion#init\n   * @param {jQuery} element - jQuery object to make into an accordion.\n   * @param {Object} options - a plain object with settings to override the default options.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Accordion.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Accordion');\n    Foundation.Keyboard.register('Accordion', {\n      'ENTER': 'toggle',\n      'SPACE': 'toggle',\n      'ARROW_DOWN': 'next',\n      'ARROW_UP': 'previous'\n    });\n  }\n\n  /**\n   * Initializes the accordion by animating the preset active pane(s).\n   * @private\n   */\n  _init() {\n    this.$element.attr('role', 'tablist');\n    this.$tabs = this.$element.children('li');\n    if (this.$tabs.length === 0) {\n      this.$tabs = this.$element.children('[data-accordion-item]');\n    }\n    this.$tabs.each(function(idx, el){\n\n      var $el = $(el),\n          $content = $el.find('[data-tab-content]'),\n          id = $content[0].id || Foundation.GetYoDigits(6, 'accordion'),\n          linkId = el.id || `${id}-label`;\n\n      $el.find('a:first').attr({\n        'aria-controls': id,\n        'role': 'tab',\n        'id': linkId,\n        'aria-expanded': false,\n        'aria-selected': false\n      });\n      $content.attr({'role': 'tabpanel', 'aria-labelledby': linkId, 'aria-hidden': true, 'id': id});\n    });\n    var $initActive = this.$element.find('.is-active').children('[data-tab-content]');\n    if($initActive.length){\n      this.down($initActive, true);\n    }\n    this._events();\n  }\n\n  /**\n   * Adds event handlers for items within the accordion.\n   * @private\n   */\n  _events() {\n    var _this = this;\n\n    this.$tabs.each(function() {\n      var $elem = $(this);\n      var $tabContent = $elem.children('[data-tab-content]');\n      if ($tabContent.length) {\n        $elem.children('a').off('click.zf.accordion keydown.zf.accordion')\n               .on('click.zf.accordion', function(e) {\n        // $(this).children('a').on('click.zf.accordion', function(e) {\n          e.preventDefault();\n          if ($elem.hasClass('is-active')) {\n            if(_this.options.allowAllClosed || $elem.siblings().hasClass('is-active')){\n              _this.up($tabContent);\n            }\n          }\n          else {\n            _this.down($tabContent);\n          }\n        }).on('keydown.zf.accordion', function(e){\n          Foundation.Keyboard.handleKey(e, 'Accordion', {\n            toggle: function() {\n              _this.toggle($tabContent);\n            },\n            next: function() {\n              $elem.next().find('a').focus().trigger('click.zf.accordion');\n            },\n            previous: function() {\n              $elem.prev().find('a').focus().trigger('click.zf.accordion');\n            },\n            handled: function() {\n              e.preventDefault();\n              e.stopPropagation();\n            }\n          });\n        });\n      }\n    });\n  }\n\n  /**\n   * Toggles the selected content pane's open/close state.\n   * @param {jQuery} $target - jQuery object of the pane to toggle.\n   * @function\n   */\n  toggle($target) {\n    if($target.parent().hasClass('is-active')) {\n      if(this.options.allowAllClosed || $target.parent().siblings().hasClass('is-active')){\n        this.up($target);\n      } else { return; }\n    } else {\n      this.down($target);\n    }\n  }\n\n  /**\n   * Opens the accordion tab defined by `$target`.\n   * @param {jQuery} $target - Accordion pane to open.\n   * @param {Boolean} firstTime - flag to determine if reflow should happen.\n   * @fires Accordion#down\n   * @function\n   */\n  down($target, firstTime) {\n    var _this = this;\n    if(!this.options.multiExpand && !firstTime){\n      var $currentActive = this.$element.find('.is-active').children('[data-tab-content]');\n      if($currentActive.length){\n        this.up($currentActive);\n      }\n    }\n\n    $target\n      .attr('aria-hidden', false)\n      .parent('[data-tab-content]')\n      .addBack()\n      .parent().addClass('is-active');\n\n    // Foundation.Move(_this.options.slideSpeed, $target, function(){\n      $target.slideDown(_this.options.slideSpeed, function () {\n        /**\n         * Fires when the tab is done opening.\n         * @event Accordion#down\n         */\n        _this.$element.trigger('down.zf.accordion', [$target]);\n      });\n    // });\n\n    // if(!firstTime){\n    //   Foundation._reflow(this.$element.attr('data-accordion'));\n    // }\n    $(`#${$target.attr('aria-labelledby')}`).attr({\n      'aria-expanded': true,\n      'aria-selected': true\n    });\n  }\n\n  /**\n   * Closes the tab defined by `$target`.\n   * @param {jQuery} $target - Accordion tab to close.\n   * @fires Accordion#up\n   * @function\n   */\n  up($target) {\n    var $aunts = $target.parent().siblings(),\n        _this = this;\n    var canClose = this.options.multiExpand ? $aunts.hasClass('is-active') : $target.parent().hasClass('is-active');\n\n    if(!this.options.allowAllClosed && !canClose) {\n      return;\n    }\n\n    // Foundation.Move(this.options.slideSpeed, $target, function(){\n      $target.slideUp(_this.options.slideSpeed, function () {\n        /**\n         * Fires when the tab is done collapsing up.\n         * @event Accordion#up\n         */\n        _this.$element.trigger('up.zf.accordion', [$target]);\n      });\n    // });\n\n    $target.attr('aria-hidden', true)\n           .parent().removeClass('is-active');\n\n    $(`#${$target.attr('aria-labelledby')}`).attr({\n     'aria-expanded': false,\n     'aria-selected': false\n   });\n  }\n\n  /**\n   * Destroys an instance of an accordion.\n   * @fires Accordion#destroyed\n   * @function\n   */\n  destroy() {\n    this.$element.find('[data-tab-content]').slideUp(0).css('display', '');\n    this.$element.find('a').off('.zf.accordion');\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nAccordion.defaults = {\n  /**\n   * Amount of time to animate the opening of an accordion pane.\n   * @option\n   * @example 250\n   */\n  slideSpeed: 250,\n  /**\n   * Allow the accordion to have multiple open panes.\n   * @option\n   * @example false\n   */\n  multiExpand: false,\n  /**\n   * Allow the accordion to close all panes.\n   * @option\n   * @example false\n   */\n  allowAllClosed: false\n};\n\n// Window exports\nFoundation.plugin(Accordion, 'Accordion');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * AccordionMenu module.\n * @module foundation.accordionMenu\n * @requires foundation.util.keyboard\n * @requires foundation.util.motion\n * @requires foundation.util.nest\n */\n\nclass AccordionMenu {\n  /**\n   * Creates a new instance of an accordion menu.\n   * @class\n   * @fires AccordionMenu#init\n   * @param {jQuery} element - jQuery object to make into an accordion menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, AccordionMenu.defaults, this.$element.data(), options);\n\n    Foundation.Nest.Feather(this.$element, 'accordion');\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'AccordionMenu');\n    Foundation.Keyboard.register('AccordionMenu', {\n      'ENTER': 'toggle',\n      'SPACE': 'toggle',\n      'ARROW_RIGHT': 'open',\n      'ARROW_UP': 'up',\n      'ARROW_DOWN': 'down',\n      'ARROW_LEFT': 'close',\n      'ESCAPE': 'closeAll',\n      'TAB': 'down',\n      'SHIFT_TAB': 'up'\n    });\n  }\n\n\n\n  /**\n   * Initializes the accordion menu by hiding all nested menus.\n   * @private\n   */\n  _init() {\n    this.$element.find('[data-submenu]').not('.is-active').slideUp(0);//.find('a').css('padding-left', '1rem');\n    this.$element.attr({\n      'role': 'tablist',\n      'aria-multiselectable': this.options.multiOpen\n    });\n\n    this.$menuLinks = this.$element.find('.is-accordion-submenu-parent');\n    this.$menuLinks.each(function(){\n      var linkId = this.id || Foundation.GetYoDigits(6, 'acc-menu-link'),\n          $elem = $(this),\n          $sub = $elem.children('[data-submenu]'),\n          subId = $sub[0].id || Foundation.GetYoDigits(6, 'acc-menu'),\n          isActive = $sub.hasClass('is-active');\n      $elem.attr({\n        'aria-controls': subId,\n        'aria-expanded': isActive,\n        'role': 'tab',\n        'id': linkId\n      });\n      $sub.attr({\n        'aria-labelledby': linkId,\n        'aria-hidden': !isActive,\n        'role': 'tabpanel',\n        'id': subId\n      });\n    });\n    var initPanes = this.$element.find('.is-active');\n    if(initPanes.length){\n      var _this = this;\n      initPanes.each(function(){\n        _this.down($(this));\n      });\n    }\n    this._events();\n  }\n\n  /**\n   * Adds event handlers for items within the menu.\n   * @private\n   */\n  _events() {\n    var _this = this;\n\n    this.$element.find('li').each(function() {\n      var $submenu = $(this).children('[data-submenu]');\n\n      if ($submenu.length) {\n        $(this).children('a').off('click.zf.accordionMenu').on('click.zf.accordionMenu', function(e) {\n          e.preventDefault();\n\n          _this.toggle($submenu);\n        });\n      }\n    }).on('keydown.zf.accordionmenu', function(e){\n      var $element = $(this),\n          $elements = $element.parent('ul').children('li'),\n          $prevElement,\n          $nextElement,\n          $target = $element.children('[data-submenu]');\n\n      $elements.each(function(i) {\n        if ($(this).is($element)) {\n          $prevElement = $elements.eq(Math.max(0, i-1));\n          $nextElement = $elements.eq(Math.min(i+1, $elements.length-1));\n\n          if ($(this).children('[data-submenu]:visible').length) { // has open sub menu\n            $nextElement = $element.find('li:first-child');\n          }\n          if ($(this).is(':first-child')) { // is first element of sub menu\n            $prevElement = $element.parents('li').first();\n          } else if ($prevElement.children('[data-submenu]:visible').length) { // if previous element has open sub menu\n            $prevElement = $prevElement.find('li:last-child');\n          }\n          if ($(this).is(':last-child')) { // is last element of sub menu\n            $nextElement = $element.parents('li').first().next('li');\n          }\n\n          return;\n        }\n      });\n      Foundation.Keyboard.handleKey(e, 'AccordionMenu', {\n        open: function() {\n          if ($target.is(':hidden')) {\n            _this.down($target);\n            $target.find('li').first().focus();\n          }\n        },\n        close: function() {\n          if ($target.length && !$target.is(':hidden')) { // close active sub of this item\n            _this.up($target);\n          } else if ($element.parent('[data-submenu]').length) { // close currently open sub\n            _this.up($element.parent('[data-submenu]'));\n            $element.parents('li').first().focus();\n          }\n        },\n        up: function() {\n          $prevElement.focus();\n        },\n        down: function() {\n          $nextElement.focus();\n        },\n        toggle: function() {\n          if ($element.children('[data-submenu]').length) {\n            _this.toggle($element.children('[data-submenu]'));\n          }\n        },\n        closeAll: function() {\n          _this.hideAll();\n        },\n        handled: function() {\n          e.preventDefault();\n          e.stopImmediatePropagation();\n        }\n      });\n    });//.attr('tabindex', 0);\n  }\n\n  /**\n   * Closes all panes of the menu.\n   * @function\n   */\n  hideAll() {\n    this.$element.find('[data-submenu]').slideUp(this.options.slideSpeed);\n  }\n\n  /**\n   * Toggles the open/close state of a submenu.\n   * @function\n   * @param {jQuery} $target - the submenu to toggle\n   */\n  toggle($target){\n    if(!$target.is(':animated')) {\n      if (!$target.is(':hidden')) {\n        this.up($target);\n      }\n      else {\n        this.down($target);\n      }\n    }\n  }\n\n  /**\n   * Opens the sub-menu defined by `$target`.\n   * @param {jQuery} $target - Sub-menu to open.\n   * @fires AccordionMenu#down\n   */\n  down($target) {\n    var _this = this;\n\n    if(!this.options.multiOpen) {\n      this.up(this.$element.find('.is-active').not($target.parentsUntil(this.$element).add($target)));\n    }\n\n    $target.addClass('is-active').attr({'aria-hidden': false})\n      .parent('.is-accordion-submenu-parent').attr({'aria-expanded': true});\n\n      Foundation.Move(this.options.slideSpeed, $target, function() {\n        $target.slideDown(_this.options.slideSpeed, function () {\n          /**\n           * Fires when the menu is done opening.\n           * @event AccordionMenu#down\n           */\n          _this.$element.trigger('down.zf.accordionMenu', [$target]);\n        });\n      });\n  }\n\n  /**\n   * Closes the sub-menu defined by `$target`. All sub-menus inside the target will be closed as well.\n   * @param {jQuery} $target - Sub-menu to close.\n   * @fires AccordionMenu#up\n   */\n  up($target) {\n    var _this = this;\n    Foundation.Move(this.options.slideSpeed, $target, function(){\n      $target.slideUp(_this.options.slideSpeed, function () {\n        /**\n         * Fires when the menu is done collapsing up.\n         * @event AccordionMenu#up\n         */\n        _this.$element.trigger('up.zf.accordionMenu', [$target]);\n      });\n    });\n\n    var $menus = $target.find('[data-submenu]').slideUp(0).addBack().attr('aria-hidden', true);\n\n    $menus.parent('.is-accordion-submenu-parent').attr('aria-expanded', false);\n  }\n\n  /**\n   * Destroys an instance of accordion menu.\n   * @fires AccordionMenu#destroyed\n   */\n  destroy() {\n    this.$element.find('[data-submenu]').slideDown(0).css('display', '');\n    this.$element.find('a').off('click.zf.accordionMenu');\n\n    Foundation.Nest.Burn(this.$element, 'accordion');\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nAccordionMenu.defaults = {\n  /**\n   * Amount of time to animate the opening of a submenu in ms.\n   * @option\n   * @example 250\n   */\n  slideSpeed: 250,\n  /**\n   * Allow the menu to have multiple open panes.\n   * @option\n   * @example true\n   */\n  multiOpen: true\n};\n\n// Window exports\nFoundation.plugin(AccordionMenu, 'AccordionMenu');\n\n}(jQuery);\n","!function($) {\n\n\"use strict\";\n\nvar FOUNDATION_VERSION = '6.2.0';\n\n// Global Foundation object\n// This is attached to the window, or used as a module for AMD/Browserify\nvar Foundation = {\n  version: FOUNDATION_VERSION,\n\n  /**\n   * Stores initialized plugins.\n   */\n  _plugins: {},\n\n  /**\n   * Stores generated unique ids for plugin instances\n   */\n  _uuids: [],\n\n  /**\n   * Returns a boolean for RTL support\n   */\n  rtl: function(){\n    return $('html').attr('dir') === 'rtl';\n  },\n  /**\n   * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\n   * @param {Object} plugin - The constructor of the plugin.\n   */\n  plugin: function(plugin, name) {\n    // Object key to use when adding to global Foundation object\n    // Examples: Foundation.Reveal, Foundation.OffCanvas\n    var className = (name || functionName(plugin));\n    // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n    // Examples: data-reveal, data-off-canvas\n    var attrName  = hyphenate(className);\n\n    // Add to the Foundation object and the plugins list (for reflowing)\n    this._plugins[attrName] = this[className] = plugin;\n  },\n  /**\n   * @function\n   * Populates the _uuids array with pointers to each individual plugin instance.\n   * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\n   * Also fires the initialization event for each plugin, consolidating repeditive code.\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n   * @param {String} name - the name of the plugin, passed as a camelCased string.\n   * @fires Plugin#init\n   */\n  registerPlugin: function(plugin, name){\n    var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n    plugin.uuid = this.GetYoDigits(6, pluginName);\n\n    if(!plugin.$element.attr(`data-${pluginName}`)){ plugin.$element.attr(`data-${pluginName}`, plugin.uuid); }\n    if(!plugin.$element.data('zfPlugin')){ plugin.$element.data('zfPlugin', plugin); }\n          /**\n           * Fires when the plugin has initialized.\n           * @event Plugin#init\n           */\n    plugin.$element.trigger(`init.zf.${pluginName}`);\n\n    this._uuids.push(plugin.uuid);\n\n    return;\n  },\n  /**\n   * @function\n   * Removes the plugins uuid from the _uuids array.\n   * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\n   * Also fires the destroyed event for the plugin, consolidating repeditive code.\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n   * @fires Plugin#destroyed\n   */\n  unregisterPlugin: function(plugin){\n    var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n    this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n    plugin.$element.removeAttr(`data-${pluginName}`).removeData('zfPlugin')\n          /**\n           * Fires when the plugin has been destroyed.\n           * @event Plugin#destroyed\n           */\n          .trigger(`destroyed.zf.${pluginName}`);\n    for(var prop in plugin){\n      plugin[prop] = null;//clean up script to prep for garbage collection.\n    }\n    return;\n  },\n\n  /**\n   * @function\n   * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\n   * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\n   * @default If no argument is passed, reflow all currently active plugins.\n   */\n   reInit: function(plugins){\n     var isJQ = plugins instanceof $;\n     try{\n       if(isJQ){\n         plugins.each(function(){\n           $(this).data('zfPlugin')._init();\n         });\n       }else{\n         var type = typeof plugins,\n         _this = this,\n         fns = {\n           'object': function(plgs){\n             plgs.forEach(function(p){\n               p = hyphenate(p);\n               $('[data-'+ p +']').foundation('_init');\n             });\n           },\n           'string': function(){\n             plugins = hyphenate(plugins);\n             $('[data-'+ plugins +']').foundation('_init');\n           },\n           'undefined': function(){\n             this['object'](Object.keys(_this._plugins));\n           }\n         };\n         fns[type](plugins);\n       }\n     }catch(err){\n       console.error(err);\n     }finally{\n       return plugins;\n     }\n   },\n\n  /**\n   * returns a random base-36 uid with namespacing\n   * @function\n   * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\n   * @param {String} namespace - name of plugin to be incorporated in uid, optional.\n   * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\n   * @returns {String} - unique id\n   */\n  GetYoDigits: function(length, namespace){\n    length = length || 6;\n    return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1) + (namespace ? `-${namespace}` : '');\n  },\n  /**\n   * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\n   * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\n   * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\n   */\n  reflow: function(elem, plugins) {\n\n    // If plugins is undefined, just grab everything\n    if (typeof plugins === 'undefined') {\n      plugins = Object.keys(this._plugins);\n    }\n    // If plugins is a string, convert it to an array with one item\n    else if (typeof plugins === 'string') {\n      plugins = [plugins];\n    }\n\n    var _this = this;\n\n    // Iterate through each plugin\n    $.each(plugins, function(i, name) {\n      // Get the current plugin\n      var plugin = _this._plugins[name];\n\n      // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n      var $elem = $(elem).find('[data-'+name+']').addBack('[data-'+name+']');\n\n      // For each plugin found, initialize it\n      $elem.each(function() {\n        var $el = $(this),\n            opts = {};\n        // Don't double-dip on plugins\n        if ($el.data('zfPlugin')) {\n          console.warn(\"Tried to initialize \"+name+\" on an element that already has a Foundation plugin.\");\n          return;\n        }\n\n        if($el.attr('data-options')){\n          var thing = $el.attr('data-options').split(';').forEach(function(e, i){\n            var opt = e.split(':').map(function(el){ return el.trim(); });\n            if(opt[0]) opts[opt[0]] = parseValue(opt[1]);\n          });\n        }\n        try{\n          $el.data('zfPlugin', new plugin($(this), opts));\n        }catch(er){\n          console.error(er);\n        }finally{\n          return;\n        }\n      });\n    });\n  },\n  getFnName: functionName,\n  transitionend: function($elem){\n    var transitions = {\n      'transition': 'transitionend',\n      'WebkitTransition': 'webkitTransitionEnd',\n      'MozTransition': 'transitionend',\n      'OTransition': 'otransitionend'\n    };\n    var elem = document.createElement('div'),\n        end;\n\n    for (var t in transitions){\n      if (typeof elem.style[t] !== 'undefined'){\n        end = transitions[t];\n      }\n    }\n    if(end){\n      return end;\n    }else{\n      end = setTimeout(function(){\n        $elem.triggerHandler('transitionend', [$elem]);\n      }, 1);\n      return 'transitionend';\n    }\n  }\n};\n\nFoundation.util = {\n  /**\n   * Function for applying a debounce effect to a function call.\n   * @function\n   * @param {Function} func - Function to be called at end of timeout.\n   * @param {Number} delay - Time in ms to delay the call of `func`.\n   * @returns function\n   */\n  throttle: function (func, delay) {\n    var timer = null;\n\n    return function () {\n      var context = this, args = arguments;\n\n      if (timer === null) {\n        timer = setTimeout(function () {\n          func.apply(context, args);\n          timer = null;\n        }, delay);\n      }\n    };\n  }\n};\n\n// TODO: consider not making this a jQuery function\n// TODO: need way to reflow vs. re-initialize\n/**\n * The Foundation jQuery method.\n * @param {String|Array} method - An action to perform on the current jQuery object.\n */\nvar foundation = function(method) {\n  var type = typeof method,\n      $meta = $('meta.foundation-mq'),\n      $noJS = $('.no-js');\n\n  if(!$meta.length){\n    $('<meta class=\"foundation-mq\">').appendTo(document.head);\n  }\n  if($noJS.length){\n    $noJS.removeClass('no-js');\n  }\n\n  if(type === 'undefined'){//needs to initialize the Foundation object, or an individual plugin.\n    Foundation.MediaQuery._init();\n    Foundation.reflow(this);\n  }else if(type === 'string'){//an individual method to invoke on a plugin or group of plugins\n    var args = Array.prototype.slice.call(arguments, 1);//collect all the arguments, if necessary\n    var plugClass = this.data('zfPlugin');//determine the class of plugin\n\n    if(plugClass !== undefined && plugClass[method] !== undefined){//make sure both the class and method exist\n      if(this.length === 1){//if there's only one, call it directly.\n          plugClass[method].apply(plugClass, args);\n      }else{\n        this.each(function(i, el){//otherwise loop through the jQuery collection and invoke the method on each\n          plugClass[method].apply($(el).data('zfPlugin'), args);\n        });\n      }\n    }else{//error for no class or no method\n      throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n    }\n  }else{//error for invalid argument type\n    throw new TypeError(`We're sorry, ${type} is not a valid parameter. You must use a string representing the method you wish to invoke.`);\n  }\n  return this;\n};\n\nwindow.Foundation = Foundation;\n$.fn.foundation = foundation;\n\n// Polyfill for requestAnimationFrame\n(function() {\n  if (!Date.now || !window.Date.now)\n    window.Date.now = Date.now = function() { return new Date().getTime(); };\n\n  var vendors = ['webkit', 'moz'];\n  for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp+'RequestAnimationFrame'];\n      window.cancelAnimationFrame = (window[vp+'CancelAnimationFrame']\n                                 || window[vp+'CancelRequestAnimationFrame']);\n  }\n  if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent)\n    || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n    var lastTime = 0;\n    window.requestAnimationFrame = function(callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function() { callback(lastTime = nextTime); },\n                          nextTime - now);\n    };\n    window.cancelAnimationFrame = clearTimeout;\n  }\n  /**\n   * Polyfill for performance.now, required by rAF\n   */\n  if(!window.performance || !window.performance.now){\n    window.performance = {\n      start: Date.now(),\n      now: function(){ return Date.now() - this.start; }\n    };\n  }\n})();\nif (!Function.prototype.bind) {\n  Function.prototype.bind = function(oThis) {\n    if (typeof this !== 'function') {\n      // closest thing possible to the ECMAScript 5\n      // internal IsCallable function\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n    }\n\n    var aArgs   = Array.prototype.slice.call(arguments, 1),\n        fToBind = this,\n        fNOP    = function() {},\n        fBound  = function() {\n          return fToBind.apply(this instanceof fNOP\n                 ? this\n                 : oThis,\n                 aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n\n    if (this.prototype) {\n      // native functions don't have a prototype\n      fNOP.prototype = this.prototype;\n    }\n    fBound.prototype = new fNOP();\n\n    return fBound;\n  };\n}\n// Polyfill to get the name of a function in IE9\nfunction functionName(fn) {\n  if (Function.prototype.name === undefined) {\n    var funcNameRegex = /function\\s([^(]{1,})\\(/;\n    var results = (funcNameRegex).exec((fn).toString());\n    return (results && results.length > 1) ? results[1].trim() : \"\";\n  }\n  else if (fn.prototype === undefined) {\n    return fn.constructor.name;\n  }\n  else {\n    return fn.prototype.constructor.name;\n  }\n}\nfunction parseValue(str){\n  if(/true/.test(str)) return true;\n  else if(/false/.test(str)) return false;\n  else if(!isNaN(str * 1)) return parseFloat(str);\n  return str;\n}\n// Convert PascalCase to kebab-case\n// Thank you: http://stackoverflow.com/a/8955580\nfunction hyphenate(str) {\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Drilldown module.\n * @module foundation.drilldown\n * @requires foundation.util.keyboard\n * @requires foundation.util.motion\n * @requires foundation.util.nest\n */\n\nclass Drilldown {\n  /**\n   * Creates a new instance of a drilldown menu.\n   * @class\n   * @param {jQuery} element - jQuery object to make into an accordion menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Drilldown.defaults, this.$element.data(), options);\n\n    Foundation.Nest.Feather(this.$element, 'drilldown');\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Drilldown');\n    Foundation.Keyboard.register('Drilldown', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ARROW_RIGHT': 'next',\n      'ARROW_UP': 'up',\n      'ARROW_DOWN': 'down',\n      'ARROW_LEFT': 'previous',\n      'ESCAPE': 'close',\n      'TAB': 'down',\n      'SHIFT_TAB': 'up'\n    });\n  }\n\n  /**\n   * Initializes the drilldown by creating jQuery collections of elements\n   * @private\n   */\n  _init() {\n    this.$submenuAnchors = this.$element.find('li.is-drilldown-submenu-parent');\n    this.$submenus = this.$submenuAnchors.children('[data-submenu]');\n    this.$menuItems = this.$element.find('li').not('.js-drilldown-back').attr('role', 'menuitem');\n\n    this._prepareMenu();\n\n    this._keyboardEvents();\n  }\n\n  /**\n   * prepares drilldown menu by setting attributes to links and elements\n   * sets a min height to prevent content jumping\n   * wraps the element if not already wrapped\n   * @private\n   * @function\n   */\n  _prepareMenu() {\n    var _this = this;\n    // if(!this.options.holdOpen){\n    //   this._menuLinkEvents();\n    // }\n    this.$submenuAnchors.each(function(){\n      var $sub = $(this);\n      var $link = $sub.find('a:first');\n      if(_this.options.parentLink){\n        $link.clone().prependTo($sub.children('[data-submenu]')).wrap('<li class=\"is-submenu-parent-item is-submenu-item is-drilldown-submenu-item\" role=\"menu-item\"></li>');\n      }\n      $link.data('savedHref', $link.attr('href')).removeAttr('href');\n      $sub.children('[data-submenu]')\n          .attr({\n            'aria-hidden': true,\n            'tabindex': 0,\n            'role': 'menu'\n          });\n      _this._events($sub);\n    });\n    this.$submenus.each(function(){\n      var $menu = $(this),\n          $back = $menu.find('.js-drilldown-back');\n      if(!$back.length){\n        $menu.prepend(_this.options.backButton);\n      }\n      _this._back($menu);\n    });\n    if(!this.$element.parent().hasClass('is-drilldown')){\n      this.$wrapper = $(this.options.wrapper).addClass('is-drilldown').css(this._getMaxDims());\n      this.$element.wrap(this.$wrapper);\n    }\n  }\n\n  /**\n   * Adds event handlers to elements in the menu.\n   * @function\n   * @private\n   * @param {jQuery} $elem - the current menu item to add handlers to.\n   */\n  _events($elem) {\n    var _this = this;\n\n    $elem.off('click.zf.drilldown')\n    .on('click.zf.drilldown', function(e){\n      if($(e.target).parentsUntil('ul', 'li').hasClass('is-drilldown-submenu-parent')){\n        e.stopImmediatePropagation();\n        e.preventDefault();\n      }\n\n      // if(e.target !== e.currentTarget.firstElementChild){\n      //   return false;\n      // }\n      _this._show($elem);\n\n      if(_this.options.closeOnClick){\n        var $body = $('body').not(_this.$wrapper);\n        $body.off('.zf.drilldown').on('click.zf.drilldown', function(e){\n          e.preventDefault();\n          _this._hideAll();\n          $body.off('.zf.drilldown');\n        });\n      }\n    });\n  }\n\n  /**\n   * Adds keydown event listener to `li`'s in the menu.\n   * @private\n   */\n  _keyboardEvents() {\n    var _this = this;\n    this.$menuItems.add(this.$element.find('.js-drilldown-back')).on('keydown.zf.drilldown', function(e){\n      var $element = $(this),\n          $elements = $element.parent('ul').children('li'),\n          $prevElement,\n          $nextElement;\n\n      $elements.each(function(i) {\n        if ($(this).is($element)) {\n          $prevElement = $elements.eq(Math.max(0, i-1));\n          $nextElement = $elements.eq(Math.min(i+1, $elements.length-1));\n          return;\n        }\n      });\n      Foundation.Keyboard.handleKey(e, 'Drilldown', {\n        next: function() {\n          if ($element.is(_this.$submenuAnchors)) {\n            _this._show($element);\n            $element.on(Foundation.transitionend($element), function(){\n              $element.find('ul li').filter(_this.$menuItems).first().focus();\n            });\n          }\n        },\n        previous: function() {\n          _this._hide($element.parent('ul'));\n          $element.parent('ul').on(Foundation.transitionend($element), function(){\n            setTimeout(function() {\n              $element.parent('ul').parent('li').focus();\n            }, 1);\n          });\n        },\n        up: function() {\n          $prevElement.focus();\n        },\n        down: function() {\n          $nextElement.focus();\n        },\n        close: function() {\n          _this._back();\n          //_this.$menuItems.first().focus(); // focus to first element\n        },\n        open: function() {\n          if (!$element.is(_this.$menuItems)) { // not menu item means back button\n            _this._hide($element.parent('ul'));\n            setTimeout(function(){$element.parent('ul').parent('li').focus();}, 1);\n          } else if ($element.is(_this.$submenuAnchors)) {\n            _this._show($element);\n            setTimeout(function(){$element.find('ul li').filter(_this.$menuItems).first().focus();}, 1);\n          }\n        },\n        handled: function() {\n          e.preventDefault();\n          e.stopImmediatePropagation();\n        }\n      });\n    }); // end keyboardAccess\n  }\n\n  /**\n   * Closes all open elements, and returns to root menu.\n   * @function\n   * @fires Drilldown#closed\n   */\n  _hideAll() {\n    var $elem = this.$element.find('.is-drilldown-submenu.is-active').addClass('is-closing');\n    $elem.one(Foundation.transitionend($elem), function(e){\n      $elem.removeClass('is-active is-closing');\n    });\n        /**\n         * Fires when the menu is fully closed.\n         * @event Drilldown#closed\n         */\n    this.$element.trigger('closed.zf.drilldown');\n  }\n\n  /**\n   * Adds event listener for each `back` button, and closes open menus.\n   * @function\n   * @fires Drilldown#back\n   * @param {jQuery} $elem - the current sub-menu to add `back` event.\n   */\n  _back($elem) {\n    var _this = this;\n    $elem.off('click.zf.drilldown');\n    $elem.children('.js-drilldown-back')\n      .on('click.zf.drilldown', function(e){\n        e.stopImmediatePropagation();\n        // console.log('mouseup on back');\n        _this._hide($elem);\n      });\n  }\n\n  /**\n   * Adds event listener to menu items w/o submenus to close open menus on click.\n   * @function\n   * @private\n   */\n  _menuLinkEvents() {\n    var _this = this;\n    this.$menuItems.not('.is-drilldown-submenu-parent')\n        .off('click.zf.drilldown')\n        .on('click.zf.drilldown', function(e){\n          // e.stopImmediatePropagation();\n          setTimeout(function(){\n            _this._hideAll();\n          }, 0);\n      });\n  }\n\n  /**\n   * Opens a submenu.\n   * @function\n   * @fires Drilldown#open\n   * @param {jQuery} $elem - the current element with a submenu to open.\n   */\n  _show($elem) {\n    $elem.children('[data-submenu]').addClass('is-active');\n\n    this.$element.trigger('open.zf.drilldown', [$elem]);\n  };\n\n  /**\n   * Hides a submenu\n   * @function\n   * @fires Drilldown#hide\n   * @param {jQuery} $elem - the current sub-menu to hide.\n   */\n  _hide($elem) {\n    var _this = this;\n    $elem.addClass('is-closing')\n         .one(Foundation.transitionend($elem), function(){\n           $elem.removeClass('is-active is-closing');\n           $elem.blur();\n         });\n    /**\n     * Fires when the submenu is has closed.\n     * @event Drilldown#hide\n     */\n    $elem.trigger('hide.zf.drilldown', [$elem]);\n  }\n\n  /**\n   * Iterates through the nested menus to calculate the min-height, and max-width for the menu.\n   * Prevents content jumping.\n   * @function\n   * @private\n   */\n  _getMaxDims() {\n    var max = 0, result = {};\n    this.$submenus.add(this.$element).each(function(){\n      var numOfElems = $(this).children('li').length;\n      max = numOfElems > max ? numOfElems : max;\n    });\n\n    result['min-height'] = `${max * this.$menuItems[0].getBoundingClientRect().height}px`;\n    result['max-width'] = `${this.$element[0].getBoundingClientRect().width}px`;\n\n    return result;\n  }\n\n  /**\n   * Destroys the Drilldown Menu\n   * @function\n   */\n  destroy() {\n    this._hideAll();\n    Foundation.Nest.Burn(this.$element, 'drilldown');\n    this.$element.unwrap()\n                 .find('.js-drilldown-back, .is-submenu-parent-item').remove()\n                 .end().find('.is-active, .is-closing, .is-drilldown-submenu').removeClass('is-active is-closing is-drilldown-submenu')\n                 .end().find('[data-submenu]').removeAttr('aria-hidden tabindex role')\n                 .off('.zf.drilldown').end().off('zf.drilldown');\n    this.$element.find('a').each(function(){\n      var $link = $(this);\n      if($link.data('savedHref')){\n        $link.attr('href', $link.data('savedHref')).removeData('savedHref');\n      }else{ return; }\n    });\n    Foundation.unregisterPlugin(this);\n  };\n}\n\nDrilldown.defaults = {\n  /**\n   * Markup used for JS generated back button. Prepended to submenu lists and deleted on `destroy` method, 'js-drilldown-back' class required. Remove the backslash (`\\`) if copy and pasting.\n   * @option\n   * @example '<\\li><\\a>Back<\\/a><\\/li>'\n   */\n  backButton: '<li class=\"js-drilldown-back\"><a>Back</a></li>',\n  /**\n   * Markup used to wrap drilldown menu. Use a class name for independent styling; the JS applied class: `is-drilldown` is required. Remove the backslash (`\\`) if copy and pasting.\n   * @option\n   * @example '<\\div class=\"is-drilldown\"><\\/div>'\n   */\n  wrapper: '<div></div>',\n  /**\n   * Adds the parent link to the submenu.\n   * @option\n   * @example false\n   */\n  parentLink: false,\n  /**\n   * Allow the menu to return to root list on body click.\n   * @option\n   * @example false\n   */\n  closeOnClick: false\n  // holdOpen: false\n};\n\n// Window exports\nFoundation.plugin(Drilldown, 'Drilldown');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Dropdown module.\n * @module foundation.dropdown\n * @requires foundation.util.keyboard\n * @requires foundation.util.box\n * @requires foundation.util.triggers\n */\n\nclass Dropdown {\n  /**\n   * Creates a new instance of a dropdown.\n   * @class\n   * @param {jQuery} element - jQuery object to make into a dropdown.\n   *        Object should be of the dropdown panel, rather than its anchor.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Dropdown.defaults, this.$element.data(), options);\n    this._init();\n\n    Foundation.registerPlugin(this, 'Dropdown');\n    Foundation.Keyboard.register('Dropdown', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ESCAPE': 'close',\n      'TAB': 'tab_forward',\n      'SHIFT_TAB': 'tab_backward'\n    });\n  }\n\n  /**\n   * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\n   * @function\n   * @private\n   */\n  _init() {\n    var $id = this.$element.attr('id');\n\n    this.$anchor = $(`[data-toggle=\"${$id}\"]`) || $(`[data-open=\"${$id}\"]`);\n    this.$anchor.attr({\n      'aria-controls': $id,\n      'data-is-focus': false,\n      'data-yeti-box': $id,\n      'aria-haspopup': true,\n      'aria-expanded': false\n\n    });\n\n    this.options.positionClass = this.getPositionClass();\n    this.counter = 4;\n    this.usedPositions = [];\n    this.$element.attr({\n      'aria-hidden': 'true',\n      'data-yeti-box': $id,\n      'data-resize': $id,\n      'aria-labelledby': this.$anchor[0].id || Foundation.GetYoDigits(6, 'dd-anchor')\n    });\n    this._events();\n  }\n\n  /**\n   * Helper function to determine current orientation of dropdown pane.\n   * @function\n   * @returns {String} position - string value of a position class.\n   */\n  getPositionClass() {\n    var position = this.$element[0].className.match(/\\b(top|left|right)\\b/g);\n        position = position ? position[0] : '';\n    return position;\n  }\n\n  /**\n   * Adjusts the dropdown panes orientation by adding/removing positioning classes.\n   * @function\n   * @private\n   * @param {String} position - position class to remove.\n   */\n  _reposition(position) {\n    this.usedPositions.push(position ? position : 'bottom');\n    //default, try switching to opposite side\n    if(!position && (this.usedPositions.indexOf('top') < 0)){\n      this.$element.addClass('top');\n    }else if(position === 'top' && (this.usedPositions.indexOf('bottom') < 0)){\n      this.$element.removeClass(position);\n    }else if(position === 'left' && (this.usedPositions.indexOf('right') < 0)){\n      this.$element.removeClass(position)\n          .addClass('right');\n    }else if(position === 'right' && (this.usedPositions.indexOf('left') < 0)){\n      this.$element.removeClass(position)\n          .addClass('left');\n    }\n\n    //if default change didn't work, try bottom or left first\n    else if(!position && (this.usedPositions.indexOf('top') > -1) && (this.usedPositions.indexOf('left') < 0)){\n      this.$element.addClass('left');\n    }else if(position === 'top' && (this.usedPositions.indexOf('bottom') > -1) && (this.usedPositions.indexOf('left') < 0)){\n      this.$element.removeClass(position)\n          .addClass('left');\n    }else if(position === 'left' && (this.usedPositions.indexOf('right') > -1) && (this.usedPositions.indexOf('bottom') < 0)){\n      this.$element.removeClass(position);\n    }else if(position === 'right' && (this.usedPositions.indexOf('left') > -1) && (this.usedPositions.indexOf('bottom') < 0)){\n      this.$element.removeClass(position);\n    }\n    //if nothing cleared, set to bottom\n    else{\n      this.$element.removeClass(position);\n    }\n    this.classChanged = true;\n    this.counter--;\n  }\n\n  /**\n   * Sets the position and orientation of the dropdown pane, checks for collisions.\n   * Recursively calls itself if a collision is detected, with a new position class.\n   * @function\n   * @private\n   */\n  _setPosition() {\n    if(this.$anchor.attr('aria-expanded') === 'false'){ return false; }\n    var position = this.getPositionClass(),\n        $eleDims = Foundation.Box.GetDimensions(this.$element),\n        $anchorDims = Foundation.Box.GetDimensions(this.$anchor),\n        _this = this,\n        direction = (position === 'left' ? 'left' : ((position === 'right') ? 'left' : 'top')),\n        param = (direction === 'top') ? 'height' : 'width',\n        offset = (param === 'height') ? this.options.vOffset : this.options.hOffset;\n\n    if(($eleDims.width >= $eleDims.windowDims.width) || (!this.counter && !Foundation.Box.ImNotTouchingYou(this.$element))){\n      this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n        'width': $eleDims.windowDims.width - (this.options.hOffset * 2),\n        'height': 'auto'\n      });\n      this.classChanged = true;\n      return false;\n    }\n\n    this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, position, this.options.vOffset, this.options.hOffset));\n\n    while(!Foundation.Box.ImNotTouchingYou(this.$element) && this.counter){\n      this._reposition(position);\n      this._setPosition();\n    }\n  }\n\n  /**\n   * Adds event listeners to the element utilizing the triggers utility library.\n   * @function\n   * @private\n   */\n  _events() {\n    var _this = this;\n    this.$element.on({\n      'open.zf.trigger': this.open.bind(this),\n      'close.zf.trigger': this.close.bind(this),\n      'toggle.zf.trigger': this.toggle.bind(this),\n      'resizeme.zf.trigger': this._setPosition.bind(this)\n    });\n\n    if(this.options.hover){\n      this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown')\n          .on('mouseenter.zf.dropdown', function(){\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function(){\n              _this.open();\n              _this.$anchor.data('hover', true);\n            }, _this.options.hoverDelay);\n          }).on('mouseleave.zf.dropdown', function(){\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function(){\n              _this.close();\n              _this.$anchor.data('hover', false);\n            }, _this.options.hoverDelay);\n          });\n      if(this.options.hoverPane){\n        this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown')\n            .on('mouseenter.zf.dropdown', function(){\n              clearTimeout(_this.timeout);\n            }).on('mouseleave.zf.dropdown', function(){\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function(){\n                _this.close();\n                _this.$anchor.data('hover', false);\n              }, _this.options.hoverDelay);\n            });\n      }\n    }\n    this.$anchor.add(this.$element).on('keydown.zf.dropdown', function(e) {\n\n      var $target = $(this),\n        visibleFocusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n\n      Foundation.Keyboard.handleKey(e, 'Dropdown', {\n        tab_forward: function() {\n          if (_this.$element.find(':focus').is(visibleFocusableElements.eq(-1))) { // left modal downwards, setting focus to first element\n            if (_this.options.trapFocus) { // if focus shall be trapped\n              visibleFocusableElements.eq(0).focus();\n              e.preventDefault();\n            } else { // if focus is not trapped, close dropdown on focus out\n              _this.close();\n            }\n          }\n        },\n        tab_backward: function() {\n          if (_this.$element.find(':focus').is(visibleFocusableElements.eq(0)) || _this.$element.is(':focus')) { // left modal upwards, setting focus to last element\n            if (_this.options.trapFocus) { // if focus shall be trapped\n              visibleFocusableElements.eq(-1).focus();\n              e.preventDefault();\n            } else { // if focus is not trapped, close dropdown on focus out\n              _this.close();\n            }\n          }\n        },\n        open: function() {\n          if ($target.is(_this.$anchor)) {\n            _this.open();\n            _this.$element.attr('tabindex', -1).focus();\n            e.preventDefault();\n          }\n        },\n        close: function() {\n          _this.close();\n          _this.$anchor.focus();\n        }\n      });\n    });\n  }\n\n  /**\n   * Adds an event handler to the body to close any dropdowns on a click.\n   * @function\n   * @private\n   */\n  _addBodyHandler() {\n     var $body = $(document.body).not(this.$element),\n         _this = this;\n     $body.off('click.zf.dropdown')\n          .on('click.zf.dropdown', function(e){\n            if(_this.$anchor.is(e.target) || _this.$anchor.find(e.target).length) {\n              return;\n            }\n            if(_this.$element.find(e.target).length) {\n              return;\n            }\n            _this.close();\n            $body.off('click.zf.dropdown');\n          });\n  }\n\n  /**\n   * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\n   * @function\n   * @fires Dropdown#closeme\n   * @fires Dropdown#show\n   */\n  open() {\n    // var _this = this;\n    /**\n     * Fires to close other open dropdowns\n     * @event Dropdown#closeme\n     */\n    this.$element.trigger('closeme.zf.dropdown', this.$element.attr('id'));\n    this.$anchor.addClass('hover')\n        .attr({'aria-expanded': true});\n    // this.$element/*.show()*/;\n    this._setPosition();\n    this.$element.addClass('is-open')\n        .attr({'aria-hidden': false});\n\n    if(this.options.autoFocus){\n      var $focusable = Foundation.Keyboard.findFocusable(this.$element);\n      if($focusable.length){\n        $focusable.eq(0).focus();\n      }\n    }\n\n    if(this.options.closeOnClick){ this._addBodyHandler(); }\n\n    /**\n     * Fires once the dropdown is visible.\n     * @event Dropdown#show\n     */\n    this.$element.trigger('show.zf.dropdown', [this.$element]);\n  }\n\n  /**\n   * Closes the open dropdown pane.\n   * @function\n   * @fires Dropdown#hide\n   */\n  close() {\n    if(!this.$element.hasClass('is-open')){\n      return false;\n    }\n    this.$element.removeClass('is-open')\n        .attr({'aria-hidden': true});\n\n    this.$anchor.removeClass('hover')\n        .attr('aria-expanded', false);\n\n    if(this.classChanged){\n      var curPositionClass = this.getPositionClass();\n      if(curPositionClass){\n        this.$element.removeClass(curPositionClass);\n      }\n      this.$element.addClass(this.options.positionClass)\n          /*.hide()*/.css({height: '', width: ''});\n      this.classChanged = false;\n      this.counter = 4;\n      this.usedPositions.length = 0;\n    }\n    this.$element.trigger('hide.zf.dropdown', [this.$element]);\n  }\n\n  /**\n   * Toggles the dropdown pane's visibility.\n   * @function\n   */\n  toggle() {\n    if(this.$element.hasClass('is-open')){\n      if(this.$anchor.data('hover')) return;\n      this.close();\n    }else{\n      this.open();\n    }\n  }\n\n  /**\n   * Destroys the dropdown.\n   * @function\n   */\n  destroy() {\n    this.$element.off('.zf.trigger').hide();\n    this.$anchor.off('.zf.dropdown');\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nDropdown.defaults = {\n  /**\n   * Amount of time to delay opening a submenu on hover event.\n   * @option\n   * @example 250\n   */\n  hoverDelay: 250,\n  /**\n   * Allow submenus to open on hover events\n   * @option\n   * @example false\n   */\n  hover: false,\n  /**\n   * Don't close dropdown when hovering over dropdown pane\n   * @option\n   * @example true\n   */\n  hoverPane: false,\n  /**\n   * Number of pixels between the dropdown pane and the triggering element on open.\n   * @option\n   * @example 1\n   */\n  vOffset: 1,\n  /**\n   * Number of pixels between the dropdown pane and the triggering element on open.\n   * @option\n   * @example 1\n   */\n  hOffset: 1,\n  /**\n   * Class applied to adjust open position. JS will test and fill this in.\n   * @option\n   * @example 'top'\n   */\n  positionClass: '',\n  /**\n   * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\n   * @option\n   * @example false\n   */\n  trapFocus: false,\n  /**\n   * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\n   * @option\n   * @example true\n   */\n  autoFocus: false,\n  /**\n   * Allows a click on the body to close the dropdown.\n   * @option\n   * @example false\n   */\n  closeOnClick: false\n}\n\n// Window exports\nFoundation.plugin(Dropdown, 'Dropdown');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * DropdownMenu module.\n * @module foundation.dropdown-menu\n * @requires foundation.util.keyboard\n * @requires foundation.util.box\n * @requires foundation.util.nest\n */\n\nclass DropdownMenu {\n  /**\n   * Creates a new instance of DropdownMenu.\n   * @class\n   * @fires DropdownMenu#init\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, DropdownMenu.defaults, this.$element.data(), options);\n\n    Foundation.Nest.Feather(this.$element, 'dropdown');\n    this._init();\n\n    Foundation.registerPlugin(this, 'DropdownMenu');\n    Foundation.Keyboard.register('DropdownMenu', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ARROW_RIGHT': 'next',\n      'ARROW_UP': 'up',\n      'ARROW_DOWN': 'down',\n      'ARROW_LEFT': 'previous',\n      'ESCAPE': 'close'\n    });\n  }\n\n  /**\n   * Initializes the plugin, and calls _prepareMenu\n   * @private\n   * @function\n   */\n  _init() {\n    var subs = this.$element.find('li.is-dropdown-submenu-parent');\n    this.$element.children('.is-dropdown-submenu-parent').children('.is-dropdown-submenu').addClass('first-sub');\n\n    this.$menuItems = this.$element.find('[role=\"menuitem\"]');\n    this.$tabs = this.$element.children('[role=\"menuitem\"]');\n    this.$tabs.find('ul.is-dropdown-submenu').addClass(this.options.verticalClass);\n\n    if (this.$element.hasClass(this.options.rightClass) || this.options.alignment === 'right' || Foundation.rtl()) {\n      this.options.alignment = 'right';\n      subs.addClass('opens-left');\n    } else {\n      subs.addClass('opens-right');\n    }\n    this.changed = false;\n    this._events();\n  };\n  /**\n   * Adds event listeners to elements within the menu\n   * @private\n   * @function\n   */\n  _events() {\n    var _this = this,\n        hasTouch = 'ontouchstart' in window || (typeof window.ontouchstart !== 'undefined'),\n        parClass = 'is-dropdown-submenu-parent';\n\n    if (this.options.clickOpen || hasTouch) {\n      this.$menuItems.on('click.zf.dropdownmenu touchstart.zf.dropdownmenu', function(e) {\n        var $elem = $(e.target).parentsUntil('ul', `.${parClass}`),\n            hasSub = $elem.hasClass(parClass),\n            hasClicked = $elem.attr('data-is-click') === 'true',\n            $sub = $elem.children('.is-dropdown-submenu');\n\n        if (hasSub) {\n          if (hasClicked) {\n            if (!_this.options.closeOnClick || (!_this.options.clickOpen && !hasTouch) || (_this.options.forceFollow && hasTouch)) { return; }\n            else {\n              e.stopImmediatePropagation();\n              e.preventDefault();\n              _this._hide($elem);\n            }\n          } else {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            _this._show($elem.children('.is-dropdown-submenu'));\n            $elem.add($elem.parentsUntil(_this.$element, `.${parClass}`)).attr('data-is-click', true);\n          }\n        } else { return; }\n      });\n    }\n\n    if (!this.options.disableHover) {\n      this.$menuItems.on('mouseenter.zf.dropdownmenu', function(e) {\n        e.stopImmediatePropagation();\n        var $elem = $(this),\n            hasSub = $elem.hasClass(parClass);\n\n        if (hasSub) {\n          clearTimeout(_this.delay);\n          _this.delay = setTimeout(function() {\n            _this._show($elem.children('.is-dropdown-submenu'));\n          }, _this.options.hoverDelay);\n        }\n      }).on('mouseleave.zf.dropdownmenu', function(e) {\n        var $elem = $(this),\n            hasSub = $elem.hasClass(parClass);\n        if (hasSub && _this.options.autoclose) {\n          if ($elem.attr('data-is-click') === 'true' && _this.options.clickOpen) { return false; }\n\n          clearTimeout(_this.delay);\n          _this.delay = setTimeout(function() {\n            _this._hide($elem);\n          }, _this.options.closingTime);\n        }\n      });\n    }\n    this.$menuItems.on('keydown.zf.dropdownmenu', function(e) {\n      var $element = $(e.target).parentsUntil('ul', '[role=\"menuitem\"]'),\n          isTab = _this.$tabs.index($element) > -1,\n          $elements = isTab ? _this.$tabs : $element.siblings('li').add($element),\n          $prevElement,\n          $nextElement;\n\n      $elements.each(function(i) {\n        if ($(this).is($element)) {\n          $prevElement = $elements.eq(i-1);\n          $nextElement = $elements.eq(i+1);\n          return;\n        }\n      });\n\n      var nextSibling = function() {\n        if (!$element.is(':last-child')) $nextElement.children('a:first').focus();\n      }, prevSibling = function() {\n        $prevElement.children('a:first').focus();\n      }, openSub = function() {\n        var $sub = $element.children('ul.is-dropdown-submenu');\n        if ($sub.length) {\n          _this._show($sub);\n          $element.find('li > a:first').focus();\n        } else { return; }\n      }, closeSub = function() {\n        //if ($element.is(':first-child')) {\n        var close = $element.parent('ul').parent('li');\n          close.children('a:first').focus();\n          _this._hide(close);\n        //}\n      };\n      var functions = {\n        open: openSub,\n        close: function() {\n          _this._hide(_this.$element);\n          _this.$menuItems.find('a:first').focus(); // focus to first element\n        },\n        handled: function() {\n          e.preventDefault();\n          e.stopImmediatePropagation();\n        }\n      };\n\n      if (isTab) {\n        if (_this.vertical) { // vertical menu\n          if (_this.options.alignment === 'left') { // left aligned\n            $.extend(functions, {\n              down: nextSibling,\n              up: prevSibling,\n              next: openSub,\n              previous: closeSub\n            });\n          } else { // right aligned\n            $.extend(functions, {\n              down: nextSibling,\n              up: prevSibling,\n              next: closeSub,\n              previous: openSub\n            });\n          }\n        } else { // horizontal menu\n          $.extend(functions, {\n            next: nextSibling,\n            previous: prevSibling,\n            down: openSub,\n            up: closeSub\n          });\n        }\n      } else { // not tabs -> one sub\n        if (_this.options.alignment === 'left') { // left aligned\n          $.extend(functions, {\n            next: openSub,\n            previous: closeSub,\n            down: nextSibling,\n            up: prevSibling\n          });\n        } else { // right aligned\n          $.extend(functions, {\n            next: closeSub,\n            previous: openSub,\n            down: nextSibling,\n            up: prevSibling\n          });\n        }\n      }\n      Foundation.Keyboard.handleKey(e, 'DropdownMenu', functions);\n\n    });\n  }\n\n  /**\n   * Adds an event handler to the body to close any dropdowns on a click.\n   * @function\n   * @private\n   */\n  _addBodyHandler() {\n    var $body = $(document.body),\n        _this = this;\n    $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu')\n         .on('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu', function(e) {\n           var $link = _this.$element.find(e.target);\n           if ($link.length) { return; }\n\n           _this._hide();\n           $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu');\n         });\n  }\n\n  /**\n   * Opens a dropdown pane, and checks for collisions first.\n   * @param {jQuery} $sub - ul element that is a submenu to show\n   * @function\n   * @private\n   * @fires DropdownMenu#show\n   */\n  _show($sub) {\n    var idx = this.$tabs.index(this.$tabs.filter(function(i, el) {\n      return $(el).find($sub).length > 0;\n    }));\n    var $sibs = $sub.parent('li.is-dropdown-submenu-parent').siblings('li.is-dropdown-submenu-parent');\n    this._hide($sibs, idx);\n    $sub.css('visibility', 'hidden').addClass('js-dropdown-active').attr({'aria-hidden': false})\n        .parent('li.is-dropdown-submenu-parent').addClass('is-active')\n        .attr({'aria-expanded': true});\n    var clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n    if (!clear) {\n      var oldClass = this.options.alignment === 'left' ? '-right' : '-left',\n          $parentLi = $sub.parent('.is-dropdown-submenu-parent');\n      $parentLi.removeClass(`opens${oldClass}`).addClass(`opens-${this.options.alignment}`);\n      clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n      if (!clear) {\n        $parentLi.removeClass(`opens-${this.options.alignment}`).addClass('opens-inner');\n      }\n      this.changed = true;\n    }\n    $sub.css('visibility', '');\n    if (this.options.closeOnClick) { this._addBodyHandler(); }\n    /**\n     * Fires when the new dropdown pane is visible.\n     * @event DropdownMenu#show\n     */\n    this.$element.trigger('show.zf.dropdownmenu', [$sub]);\n  }\n\n  /**\n   * Hides a single, currently open dropdown pane, if passed a parameter, otherwise, hides everything.\n   * @function\n   * @param {jQuery} $elem - element with a submenu to hide\n   * @param {Number} idx - index of the $tabs collection to hide\n   * @private\n   */\n  _hide($elem, idx) {\n    var $toClose;\n    if ($elem && $elem.length) {\n      $toClose = $elem;\n    } else if (idx !== undefined) {\n      $toClose = this.$tabs.not(function(i, el) {\n        return i === idx;\n      });\n    }\n    else {\n      $toClose = this.$element;\n    }\n    var somethingToClose = $toClose.hasClass('is-active') || $toClose.find('.is-active').length > 0;\n\n    if (somethingToClose) {\n      $toClose.find('li.is-active').add($toClose).attr({\n        'aria-expanded': false,\n        'data-is-click': false\n      }).removeClass('is-active');\n\n      $toClose.find('ul.js-dropdown-active').attr({\n        'aria-hidden': true\n      }).removeClass('js-dropdown-active');\n\n      if (this.changed || $toClose.find('opens-inner').length) {\n        var oldClass = this.options.alignment === 'left' ? 'right' : 'left';\n        $toClose.find('li.is-dropdown-submenu-parent').add($toClose)\n                .removeClass(`opens-inner opens-${this.options.alignment}`)\n                .addClass(`opens-${oldClass}`);\n        this.changed = false;\n      }\n      /**\n       * Fires when the open menus are closed.\n       * @event DropdownMenu#hide\n       */\n      this.$element.trigger('hide.zf.dropdownmenu', [$toClose]);\n    }\n  }\n\n  /**\n   * Destroys the plugin.\n   * @function\n   */\n  destroy() {\n    this.$menuItems.off('.zf.dropdownmenu').removeAttr('data-is-click')\n        .removeClass('is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner');\n    $(document.body).off('.zf.dropdownmenu');\n    Foundation.Nest.Burn(this.$element, 'dropdown');\n    Foundation.unregisterPlugin(this);\n  }\n}\n\n/**\n * Default settings for plugin\n */\nDropdownMenu.defaults = {\n  /**\n   * Disallows hover events from opening submenus\n   * @option\n   * @example false\n   */\n  disableHover: false,\n  /**\n   * Allow a submenu to automatically close on a mouseleave event, if not clicked open.\n   * @option\n   * @example true\n   */\n  autoclose: true,\n  /**\n   * Amount of time to delay opening a submenu on hover event.\n   * @option\n   * @example 50\n   */\n  hoverDelay: 50,\n  /**\n   * Allow a submenu to open/remain open on parent click event. Allows cursor to move away from menu.\n   * @option\n   * @example true\n   */\n  clickOpen: false,\n  /**\n   * Amount of time to delay closing a submenu on a mouseleave event.\n   * @option\n   * @example 500\n   */\n\n  closingTime: 500,\n  /**\n   * Position of the menu relative to what direction the submenus should open. Handled by JS.\n   * @option\n   * @example 'left'\n   */\n  alignment: 'left',\n  /**\n   * Allow clicks on the body to close any open submenus.\n   * @option\n   * @example true\n   */\n  closeOnClick: true,\n  /**\n   * Class applied to vertical oriented menus, Foundation default is `vertical`. Update this if using your own class.\n   * @option\n   * @example 'vertical'\n   */\n  verticalClass: 'vertical',\n  /**\n   * Class applied to right-side oriented menus, Foundation default is `align-right`. Update this if using your own class.\n   * @option\n   * @example 'align-right'\n   */\n  rightClass: 'align-right',\n  /**\n   * Boolean to force overide the clicking of links to perform default action, on second touch event for mobile.\n   * @option\n   * @example false\n   */\n  forceFollow: true\n};\n\n// Window exports\nFoundation.plugin(DropdownMenu, 'DropdownMenu');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Equalizer module.\n * @module foundation.equalizer\n */\n\nclass Equalizer {\n  /**\n   * Creates a new instance of Equalizer.\n   * @class\n   * @fires Equalizer#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options){\n    this.$element = element;\n    this.options  = $.extend({}, Equalizer.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Equalizer');\n  }\n\n  /**\n   * Initializes the Equalizer plugin and calls functions to get equalizer functioning on load.\n   * @private\n   */\n  _init() {\n    var eqId = this.$element.attr('data-equalizer') || '';\n    var $watched = this.$element.find(`[data-equalizer-watch=\"${eqId}\"]`);\n\n    this.$watched = $watched.length ? $watched : this.$element.find('[data-equalizer-watch]');\n    this.$element.attr('data-resize', (eqId || Foundation.GetYoDigits(6, 'eq')));\n\n    this.hasNested = this.$element.find('[data-equalizer]').length > 0;\n    this.isNested = this.$element.parentsUntil(document.body, '[data-equalizer]').length > 0;\n    this.isOn = false;\n\n    var imgs = this.$element.find('img');\n    var tooSmall;\n    if(this.options.equalizeOn){\n      tooSmall = this._checkMQ();\n      $(window).on('changed.zf.mediaquery', this._checkMQ.bind(this));\n    }else{\n      this._events();\n    }\n    if((tooSmall !== undefined && tooSmall === false) || tooSmall === undefined){\n      if(imgs.length){\n        Foundation.onImagesLoaded(imgs, this._reflow.bind(this));\n      }else{\n        this._reflow();\n      }\n    }\n  }\n\n  /**\n   * Removes event listeners if the breakpoint is too small.\n   * @private\n   */\n  _pauseEvents() {\n    this.isOn = false;\n    this.$element.off('.zf.equalizer resizeme.zf.trigger');\n  }\n\n  /**\n   * Initializes events for Equalizer.\n   * @private\n   */\n  _events() {\n    var _this = this;\n    this._pauseEvents();\n    if(this.hasNested){\n      this.$element.on('postequalized.zf.equalizer', function(e){\n        if(e.target !== _this.$element[0]){ _this._reflow(); }\n      });\n    }else{\n      this.$element.on('resizeme.zf.trigger', this._reflow.bind(this));\n    }\n    this.isOn = true;\n  }\n\n  /**\n   * Checks the current breakpoint to the minimum required size.\n   * @private\n   */\n  _checkMQ() {\n    var tooSmall = !Foundation.MediaQuery.atLeast(this.options.equalizeOn);\n    if(tooSmall){\n      if(this.isOn){\n        this._pauseEvents();\n        this.$watched.css('height', 'auto');\n      }\n    }else{\n      if(!this.isOn){\n        this._events();\n      }\n    }\n    return tooSmall;\n  }\n\n  /**\n   * A noop version for the plugin\n   * @private\n   */\n  _killswitch() {\n    return;\n  }\n\n  /**\n   * Calls necessary functions to update Equalizer upon DOM change\n   * @private\n   */\n  _reflow() {\n    if(!this.options.equalizeOnStack){\n      if(this._isStacked()){\n        this.$watched.css('height', 'auto');\n        return false;\n      }\n    }\n    if (this.options.equalizeByRow) {\n      this.getHeightsByRow(this.applyHeightByRow.bind(this));\n    }else{\n      this.getHeights(this.applyHeight.bind(this));\n    }\n  }\n\n  /**\n   * Manually determines if the first 2 elements are *NOT* stacked.\n   * @private\n   */\n  _isStacked() {\n    return this.$watched[0].offsetTop !== this.$watched[1].offsetTop;\n  }\n\n  /**\n   * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\n   * @param {Function} cb - A non-optional callback to return the heights array to.\n   * @returns {Array} heights - An array of heights of children within Equalizer container\n   */\n  getHeights(cb) {\n    var heights = [];\n    for(var i = 0, len = this.$watched.length; i < len; i++){\n      this.$watched[i].style.height = 'auto';\n      heights.push(this.$watched[i].offsetHeight);\n    }\n    cb(heights);\n  }\n\n  /**\n   * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\n   * @param {Function} cb - A non-optional callback to return the heights array to.\n   * @returns {Array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\n   */\n  getHeightsByRow(cb) {\n    var lastElTopOffset = this.$watched.first().offset().top,\n        groups = [],\n        group = 0;\n    //group by Row\n    groups[group] = [];\n    for(var i = 0, len = this.$watched.length; i < len; i++){\n      this.$watched[i].style.height = 'auto';\n      //maybe could use this.$watched[i].offsetTop\n      var elOffsetTop = $(this.$watched[i]).offset().top;\n      if (elOffsetTop!=lastElTopOffset) {\n        group++;\n        groups[group] = [];\n        lastElTopOffset=elOffsetTop;\n      }\n      groups[group].push([this.$watched[i],this.$watched[i].offsetHeight]);\n    }\n\n    for (var j = 0, ln = groups.length; j < ln; j++) {\n      var heights = $(groups[j]).map(function(){ return this[1]; }).get();\n      var max         = Math.max.apply(null, heights);\n      groups[j].push(max);\n    }\n    cb(groups);\n  }\n\n  /**\n   * Changes the CSS height property of each child in an Equalizer parent to match the tallest\n   * @param {array} heights - An array of heights of children within Equalizer container\n   * @fires Equalizer#preequalized\n   * @fires Equalizer#postequalized\n   */\n  applyHeight(heights) {\n    var max = Math.max.apply(null, heights);\n    /**\n     * Fires before the heights are applied\n     * @event Equalizer#preequalized\n     */\n    this.$element.trigger('preequalized.zf.equalizer');\n\n    this.$watched.css('height', max);\n\n    /**\n     * Fires when the heights have been applied\n     * @event Equalizer#postequalized\n     */\n     this.$element.trigger('postequalized.zf.equalizer');\n  }\n\n  /**\n   * Changes the CSS height property of each child in an Equalizer parent to match the tallest by row\n   * @param {array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\n   * @fires Equalizer#preequalized\n   * @fires Equalizer#preequalizedRow\n   * @fires Equalizer#postequalizedRow\n   * @fires Equalizer#postequalized\n   */\n  applyHeightByRow(groups) {\n    /**\n     * Fires before the heights are applied\n     */\n    this.$element.trigger('preequalized.zf.equalizer');\n    for (var i = 0, len = groups.length; i < len ; i++) {\n      var groupsILength = groups[i].length,\n          max = groups[i][groupsILength - 1];\n      if (groupsILength<=2) {\n        $(groups[i][0][0]).css({'height':'auto'});\n        continue;\n      }\n      /**\n        * Fires before the heights per row are applied\n        * @event Equalizer#preequalizedRow\n        */\n      this.$element.trigger('preequalizedrow.zf.equalizer');\n      for (var j = 0, lenJ = (groupsILength-1); j < lenJ ; j++) {\n        $(groups[i][j][0]).css({'height':max});\n      }\n      /**\n        * Fires when the heights per row have been applied\n        * @event Equalizer#postequalizedRow\n        */\n      this.$element.trigger('postequalizedrow.zf.equalizer');\n    }\n    /**\n     * Fires when the heights have been applied\n     */\n     this.$element.trigger('postequalized.zf.equalizer');\n  }\n\n  /**\n   * Destroys an instance of Equalizer.\n   * @function\n   */\n  destroy() {\n    this._pauseEvents();\n    this.$watched.css('height', 'auto');\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\n/**\n * Default settings for plugin\n */\nEqualizer.defaults = {\n  /**\n   * Enable height equalization when stacked on smaller screens.\n   * @option\n   * @example true\n   */\n  equalizeOnStack: true,\n  /**\n   * Enable height equalization row by row.\n   * @option\n   * @example false\n   */\n  equalizeByRow: false,\n  /**\n   * String representing the minimum breakpoint size the plugin should equalize heights on.\n   * @option\n   * @example 'medium'\n   */\n  equalizeOn: ''\n};\n\n// Window exports\nFoundation.plugin(Equalizer, 'Equalizer');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Interchange module.\n * @module foundation.interchange\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.timerAndImageLoader\n */\n\nclass Interchange {\n  /**\n   * Creates a new instance of Interchange.\n   * @class\n   * @fires Interchange#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Interchange.defaults, options);\n    this.rules = [];\n    this.currentPath = '';\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this, 'Interchange');\n  }\n\n  /**\n   * Initializes the Interchange plugin and calls functions to get interchange functioning on load.\n   * @function\n   * @private\n   */\n  _init() {\n    this._addBreakpoints();\n    this._generateRules();\n    this._reflow();\n  }\n\n  /**\n   * Initializes events for Interchange.\n   * @function\n   * @private\n   */\n  _events() {\n    $(window).on('resize.zf.interchange', Foundation.util.throttle(this._reflow.bind(this), 50));\n  }\n\n  /**\n   * Calls necessary functions to update Interchange upon DOM change\n   * @function\n   * @private\n   */\n  _reflow() {\n    var match;\n\n    // Iterate through each rule, but only save the last match\n    for (var i in this.rules) {\n      var rule = this.rules[i];\n\n      if (window.matchMedia(rule.query).matches) {\n        match = rule;\n      }\n    }\n\n    if (match) {\n      this.replace(match.path);\n    }\n  }\n\n  /**\n   * Gets the Foundation breakpoints and adds them to the Interchange.SPECIAL_QUERIES object.\n   * @function\n   * @private\n   */\n  _addBreakpoints() {\n    for (var i in Foundation.MediaQuery.queries) {\n      var query = Foundation.MediaQuery.queries[i];\n      Interchange.SPECIAL_QUERIES[query.name] = query.value;\n    }\n  }\n\n  /**\n   * Checks the Interchange element for the provided media query + content pairings\n   * @function\n   * @private\n   * @param {Object} element - jQuery object that is an Interchange instance\n   * @returns {Array} scenarios - Array of objects that have 'mq' and 'path' keys with corresponding keys\n   */\n  _generateRules(element) {\n    var rulesList = [];\n    var rules;\n\n    if (this.options.rules) {\n      rules = this.options.rules;\n    }\n    else {\n      rules = this.$element.data('interchange').match(/\\[.*?\\]/g);\n    }\n\n    for (var i in rules) {\n      var rule = rules[i].slice(1, -1).split(', ');\n      var path = rule.slice(0, -1).join('');\n      var query = rule[rule.length - 1];\n\n      if (Interchange.SPECIAL_QUERIES[query]) {\n        query = Interchange.SPECIAL_QUERIES[query];\n      }\n\n      rulesList.push({\n        path: path,\n        query: query\n      });\n    }\n\n    this.rules = rulesList;\n  }\n\n  /**\n   * Update the `src` property of an image, or change the HTML of a container, to the specified path.\n   * @function\n   * @param {String} path - Path to the image or HTML partial.\n   * @fires Interchange#replaced\n   */\n  replace(path) {\n    if (this.currentPath === path) return;\n\n    var _this = this,\n        trigger = 'replaced.zf.interchange';\n\n    // Replacing images\n    if (this.$element[0].nodeName === 'IMG') {\n      this.$element.attr('src', path).load(function() {\n        _this.currentPath = path;\n      })\n      .trigger(trigger);\n    }\n    // Replacing background images\n    else if (path.match(/\\.(gif|jpg|jpeg|tiff|png)([?#].*)?/i)) {\n      this.$element.css({ 'background-image': 'url('+path+')' })\n          .trigger(trigger);\n    }\n    // Replacing HTML\n    else {\n      $.get(path, function(response) {\n        _this.$element.html(response)\n             .trigger(trigger);\n        $(response).foundation();\n        _this.currentPath = path;\n      });\n    }\n\n    /**\n     * Fires when content in an Interchange element is done being loaded.\n     * @event Interchange#replaced\n     */\n    // this.$element.trigger('replaced.zf.interchange');\n  }\n\n  /**\n   * Destroys an instance of interchange.\n   * @function\n   */\n  destroy() {\n    //TODO this.\n  }\n}\n\n/**\n * Default settings for plugin\n */\nInterchange.defaults = {\n  /**\n   * Rules to be applied to Interchange elements. Set with the `data-interchange` array notation.\n   * @option\n   */\n  rules: null\n};\n\nInterchange.SPECIAL_QUERIES = {\n  'landscape': 'screen and (orientation: landscape)',\n  'portrait': 'screen and (orientation: portrait)',\n  'retina': 'only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)'\n};\n\n// Window exports\nFoundation.plugin(Interchange, 'Interchange');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Magellan module.\n * @module foundation.magellan\n */\n\nclass Magellan {\n  /**\n   * Creates a new instance of Magellan.\n   * @class\n   * @fires Magellan#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options  = $.extend({}, Magellan.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Magellan');\n  }\n\n  /**\n   * Initializes the Magellan plugin and calls functions to get equalizer functioning on load.\n   * @private\n   */\n  _init() {\n    var id = this.$element[0].id || Foundation.GetYoDigits(6, 'magellan');\n    var _this = this;\n    this.$targets = $('[data-magellan-target]');\n    this.$links = this.$element.find('a');\n    this.$element.attr({\n      'data-resize': id,\n      'data-scroll': id,\n      'id': id\n    });\n    this.$active = $();\n    this.scrollPos = parseInt(window.pageYOffset, 10);\n\n    this._events();\n  }\n\n  /**\n   * Calculates an array of pixel values that are the demarcation lines between locations on the page.\n   * Can be invoked if new elements are added or the size of a location changes.\n   * @function\n   */\n  calcPoints() {\n    var _this = this,\n        body = document.body,\n        html = document.documentElement;\n\n    this.points = [];\n    this.winHeight = Math.round(Math.max(window.innerHeight, html.clientHeight));\n    this.docHeight = Math.round(Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight));\n\n    this.$targets.each(function(){\n      var $tar = $(this),\n          pt = Math.round($tar.offset().top - _this.options.threshold);\n      $tar.targetPoint = pt;\n      _this.points.push(pt);\n    });\n  }\n\n  /**\n   * Initializes events for Magellan.\n   * @private\n   */\n  _events() {\n    var _this = this,\n        $body = $('html, body'),\n        opts = {\n          duration: _this.options.animationDuration,\n          easing:   _this.options.animationEasing\n        };\n    $(window).one('load', function(){\n      if(_this.options.deepLinking){\n        if(location.hash){\n          _this.scrollToLoc(location.hash);\n        }\n      }\n      _this.calcPoints();\n      _this._updateActive();\n    });\n\n    this.$element.on({\n      'resizeme.zf.trigger': this.reflow.bind(this),\n      'scrollme.zf.trigger': this._updateActive.bind(this)\n    }).on('click.zf.magellan', 'a[href^=\"#\"]', function(e) {\n        e.preventDefault();\n        var arrival   = this.getAttribute('href');\n        _this.scrollToLoc(arrival);\n    });\n  }\n\n  /**\n   * Function to scroll to a given location on the page.\n   * @param {String} loc - a properly formatted jQuery id selector. Example: '#foo'\n   * @function\n   */\n  scrollToLoc(loc) {\n    var scrollPos = Math.round($(loc).offset().top - this.options.threshold / 2 - this.options.barOffset);\n\n    $('html, body').stop(true).animate({ scrollTop: scrollPos }, this.options.animationDuration, this.options.animationEasing);\n  }\n\n  /**\n   * Calls necessary functions to update Magellan upon DOM change\n   * @function\n   */\n  reflow() {\n    this.calcPoints();\n    this._updateActive();\n  }\n\n  /**\n   * Updates the visibility of an active location link, and updates the url hash for the page, if deepLinking enabled.\n   * @private\n   * @function\n   * @fires Magellan#update\n   */\n  _updateActive(/*evt, elem, scrollPos*/) {\n    var winPos = /*scrollPos ||*/ parseInt(window.pageYOffset, 10),\n        curIdx;\n\n    if(winPos + this.winHeight === this.docHeight){ curIdx = this.points.length - 1; }\n    else if(winPos < this.points[0]){ curIdx = 0; }\n    else{\n      var isDown = this.scrollPos < winPos,\n          _this = this,\n          curVisible = this.points.filter(function(p, i){\n            return isDown ? p <= winPos : p - _this.options.threshold <= winPos;//&& winPos >= _this.points[i -1] - _this.options.threshold;\n          });\n      curIdx = curVisible.length ? curVisible.length - 1 : 0;\n    }\n\n    this.$active.removeClass(this.options.activeClass);\n    this.$active = this.$links.eq(curIdx).addClass(this.options.activeClass);\n\n    if(this.options.deepLinking){\n      var hash = this.$active[0].getAttribute('href');\n      if(window.history.pushState){\n        window.history.pushState(null, null, hash);\n      }else{\n        window.location.hash = hash;\n      }\n    }\n\n    this.scrollPos = winPos;\n    /**\n     * Fires when magellan is finished updating to the new active element.\n     * @event Magellan#update\n     */\n    this.$element.trigger('update.zf.magellan', [this.$active]);\n  }\n\n  /**\n   * Destroys an instance of Magellan and resets the url of the window.\n   * @function\n   */\n  destroy() {\n    this.$element.off('.zf.trigger .zf.magellan')\n        .find(`.${this.options.activeClass}`).removeClass(this.options.activeClass);\n\n    if(this.options.deepLinking){\n      var hash = this.$active[0].getAttribute('href');\n      window.location.hash.replace(hash, '');\n    }\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\n/**\n * Default settings for plugin\n */\nMagellan.defaults = {\n  /**\n   * Amount of time, in ms, the animated scrolling should take between locations.\n   * @option\n   * @example 500\n   */\n  animationDuration: 500,\n  /**\n   * Animation style to use when scrolling between locations.\n   * @option\n   * @example 'ease-in-out'\n   */\n  animationEasing: 'linear',\n  /**\n   * Number of pixels to use as a marker for location changes.\n   * @option\n   * @example 50\n   */\n  threshold: 50,\n  /**\n   * Class applied to the active locations link on the magellan container.\n   * @option\n   * @example 'active'\n   */\n  activeClass: 'active',\n  /**\n   * Allows the script to manipulate the url of the current page, and if supported, alter the history.\n   * @option\n   * @example true\n   */\n  deepLinking: false,\n  /**\n   * Number of pixels to offset the scroll of the page on item click if using a sticky nav bar.\n   * @option\n   * @example 25\n   */\n  barOffset: 0\n}\n\n// Window exports\nFoundation.plugin(Magellan, 'Magellan');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * OffCanvas module.\n * @module foundation.offcanvas\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.triggers\n * @requires foundation.util.motion\n */\n\nclass OffCanvas {\n  /**\n   * Creates a new instance of an off-canvas wrapper.\n   * @class\n   * @fires OffCanvas#init\n   * @param {Object} element - jQuery object to initialize.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, OffCanvas.defaults, this.$element.data(), options);\n    this.$lastTrigger = $();\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this, 'OffCanvas');\n  }\n\n  /**\n   * Initializes the off-canvas wrapper by adding the exit overlay (if needed).\n   * @function\n   * @private\n   */\n  _init() {\n    var id = this.$element.attr('id');\n\n    this.$element.attr('aria-hidden', 'true');\n\n    // Find triggers that affect this element and add aria-expanded to them\n    $(document)\n      .find('[data-open=\"'+id+'\"], [data-close=\"'+id+'\"], [data-toggle=\"'+id+'\"]')\n      .attr('aria-expanded', 'false')\n      .attr('aria-controls', id);\n\n    // Add a close trigger over the body if necessary\n    if (this.options.closeOnClick) {\n      if ($('.js-off-canvas-exit').length) {\n        this.$exiter = $('.js-off-canvas-exit');\n      } else {\n        var exiter = document.createElement('div');\n        exiter.setAttribute('class', 'js-off-canvas-exit');\n        $('[data-off-canvas-content]').append(exiter);\n\n        this.$exiter = $(exiter);\n      }\n    }\n\n    this.options.isRevealed = this.options.isRevealed || new RegExp(this.options.revealClass, 'g').test(this.$element[0].className);\n\n    if (this.options.isRevealed) {\n      this.options.revealOn = this.options.revealOn || this.$element[0].className.match(/(reveal-for-medium|reveal-for-large)/g)[0].split('-')[2];\n      this._setMQChecker();\n    }\n    if (!this.options.transitionTime) {\n      this.options.transitionTime = parseFloat(window.getComputedStyle($('[data-off-canvas-wrapper]')[0]).transitionDuration) * 1000;\n    }\n  }\n\n  /**\n   * Adds event handlers to the off-canvas wrapper and the exit overlay.\n   * @function\n   * @private\n   */\n  _events() {\n    this.$element.off('.zf.trigger .zf.offcanvas').on({\n      'open.zf.trigger': this.open.bind(this),\n      'close.zf.trigger': this.close.bind(this),\n      'toggle.zf.trigger': this.toggle.bind(this),\n      'keydown.zf.offcanvas': this._handleKeyboard.bind(this)\n    });\n\n    if (this.options.closeOnClick && this.$exiter.length) {\n      this.$exiter.on({'click.zf.offcanvas': this.close.bind(this)});\n    }\n  }\n\n  /**\n   * Applies event listener for elements that will reveal at certain breakpoints.\n   * @private\n   */\n  _setMQChecker() {\n    var _this = this;\n\n    $(window).on('changed.zf.mediaquery', function() {\n      if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n        _this.reveal(true);\n      } else {\n        _this.reveal(false);\n      }\n    }).one('load.zf.offcanvas', function() {\n      if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n        _this.reveal(true);\n      }\n    });\n  }\n\n  /**\n   * Handles the revealing/hiding the off-canvas at breakpoints, not the same as open.\n   * @param {Boolean} isRevealed - true if element should be revealed.\n   * @function\n   */\n  reveal(isRevealed) {\n    var $closer = this.$element.find('[data-close]');\n    if (isRevealed) {\n      this.close();\n      this.isRevealed = true;\n      // if (!this.options.forceTop) {\n      //   var scrollPos = parseInt(window.pageYOffset);\n      //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n      // }\n      // if (this.options.isSticky) { this._stick(); }\n      this.$element.off('open.zf.trigger toggle.zf.trigger');\n      if ($closer.length) { $closer.hide(); }\n    } else {\n      this.isRevealed = false;\n      // if (this.options.isSticky || !this.options.forceTop) {\n      //   this.$element[0].style.transform = '';\n      //   $(window).off('scroll.zf.offcanvas');\n      // }\n      this.$element.on({\n        'open.zf.trigger': this.open.bind(this),\n        'toggle.zf.trigger': this.toggle.bind(this)\n      });\n      if ($closer.length) {\n        $closer.show();\n      }\n    }\n  }\n\n  /**\n   * Opens the off-canvas menu.\n   * @function\n   * @param {Object} event - Event object passed from listener.\n   * @param {jQuery} trigger - element that triggered the off-canvas to open.\n   * @fires OffCanvas#opened\n   */\n  open(event, trigger) {\n    if (this.$element.hasClass('is-open') || this.isRevealed) { return; }\n    var _this = this,\n        $body = $(document.body);\n\n    if (this.options.forceTop) {\n      $('body').scrollTop(0);\n    }\n    // window.pageYOffset = 0;\n\n    // if (!this.options.forceTop) {\n    //   var scrollPos = parseInt(window.pageYOffset);\n    //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n    //   if (this.$exiter.length) {\n    //     this.$exiter[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n    //   }\n    // }\n    /**\n     * Fires when the off-canvas menu opens.\n     * @event OffCanvas#opened\n     */\n    Foundation.Move(this.options.transitionTime, this.$element, function() {\n      $('[data-off-canvas-wrapper]').addClass('is-off-canvas-open is-open-'+ _this.options.position);\n\n      _this.$element\n        .addClass('is-open')\n\n      // if (_this.options.isSticky) {\n      //   _this._stick();\n      // }\n    });\n    this.$element.attr('aria-hidden', 'false')\n        .trigger('opened.zf.offcanvas');\n\n    if (this.options.closeOnClick) {\n      this.$exiter.addClass('is-visible');\n    }\n\n    if (trigger) {\n      this.$lastTrigger = trigger.attr('aria-expanded', 'true');\n    }\n\n    if (this.options.autoFocus) {\n      this.$element.one(Foundation.transitionend(this.$element), function() {\n        _this.$element.find('a, button').eq(0).focus();\n      });\n    }\n\n    if (this.options.trapFocus) {\n      $('[data-off-canvas-content]').attr('tabindex', '-1');\n      this._trapFocus();\n    }\n  }\n\n  /**\n   * Traps focus within the offcanvas on open.\n   * @private\n   */\n  _trapFocus() {\n    var focusable = Foundation.Keyboard.findFocusable(this.$element),\n        first = focusable.eq(0),\n        last = focusable.eq(-1);\n\n    focusable.off('.zf.offcanvas').on('keydown.zf.offcanvas', function(e) {\n      if (e.which === 9 || e.keycode === 9) {\n        if (e.target === last[0] && !e.shiftKey) {\n          e.preventDefault();\n          first.focus();\n        }\n        if (e.target === first[0] && e.shiftKey) {\n          e.preventDefault();\n          last.focus();\n        }\n      }\n    });\n  }\n\n  /**\n   * Allows the offcanvas to appear sticky utilizing translate properties.\n   * @private\n   */\n  // OffCanvas.prototype._stick = function() {\n  //   var elStyle = this.$element[0].style;\n  //\n  //   if (this.options.closeOnClick) {\n  //     var exitStyle = this.$exiter[0].style;\n  //   }\n  //\n  //   $(window).on('scroll.zf.offcanvas', function(e) {\n  //     console.log(e);\n  //     var pageY = window.pageYOffset;\n  //     elStyle.transform = 'translate(0,' + pageY + 'px)';\n  //     if (exitStyle !== undefined) { exitStyle.transform = 'translate(0,' + pageY + 'px)'; }\n  //   });\n  //   // this.$element.trigger('stuck.zf.offcanvas');\n  // };\n  /**\n   * Closes the off-canvas menu.\n   * @function\n   * @param {Function} cb - optional cb to fire after closure.\n   * @fires OffCanvas#closed\n   */\n  close(cb) {\n    if (!this.$element.hasClass('is-open') || this.isRevealed) { return; }\n\n    var _this = this;\n\n    //  Foundation.Move(this.options.transitionTime, this.$element, function() {\n    $('[data-off-canvas-wrapper]').removeClass(`is-off-canvas-open is-open-${_this.options.position}`);\n    _this.$element.removeClass('is-open');\n      // Foundation._reflow();\n    // });\n    this.$element.attr('aria-hidden', 'true')\n      /**\n       * Fires when the off-canvas menu opens.\n       * @event OffCanvas#closed\n       */\n        .trigger('closed.zf.offcanvas');\n    // if (_this.options.isSticky || !_this.options.forceTop) {\n    //   setTimeout(function() {\n    //     _this.$element[0].style.transform = '';\n    //     $(window).off('scroll.zf.offcanvas');\n    //   }, this.options.transitionTime);\n    // }\n    if (this.options.closeOnClick) {\n      this.$exiter.removeClass('is-visible');\n    }\n\n    this.$lastTrigger.attr('aria-expanded', 'false');\n    if (this.options.trapFocus) {\n      $('[data-off-canvas-content]').removeAttr('tabindex');\n    }\n  }\n\n  /**\n   * Toggles the off-canvas menu open or closed.\n   * @function\n   * @param {Object} event - Event object passed from listener.\n   * @param {jQuery} trigger - element that triggered the off-canvas to open.\n   */\n  toggle(event, trigger) {\n    if (this.$element.hasClass('is-open')) {\n      this.close(event, trigger);\n    }\n    else {\n      this.open(event, trigger);\n    }\n  }\n\n  /**\n   * Handles keyboard input when detected. When the escape key is pressed, the off-canvas menu closes, and focus is restored to the element that opened the menu.\n   * @function\n   * @private\n   */\n  _handleKeyboard(event) {\n    if (event.which !== 27) return;\n\n    event.stopPropagation();\n    event.preventDefault();\n    this.close();\n    this.$lastTrigger.focus();\n  }\n\n  /**\n   * Destroys the offcanvas plugin.\n   * @function\n   */\n  destroy() {\n    this.close();\n    this.$element.off('.zf.trigger .zf.offcanvas');\n    this.$exiter.off('.zf.offcanvas');\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nOffCanvas.defaults = {\n  /**\n   * Allow the user to click outside of the menu to close it.\n   * @option\n   * @example true\n   */\n  closeOnClick: true,\n\n  /**\n   * Amount of time in ms the open and close transition requires. If none selected, pulls from body style.\n   * @option\n   * @example 500\n   */\n  transitionTime: 0,\n\n  /**\n   * Direction the offcanvas opens from. Determines class applied to body.\n   * @option\n   * @example left\n   */\n  position: 'left',\n\n  /**\n   * Force the page to scroll to top on open.\n   * @option\n   * @example true\n   */\n  forceTop: true,\n\n  /**\n   * Allow the offcanvas to remain open for certain breakpoints.\n   * @option\n   * @example false\n   */\n  isRevealed: false,\n\n  /**\n   * Breakpoint at which to reveal. JS will use a RegExp to target standard classes, if changing classnames, pass your class with the `revealClass` option.\n   * @option\n   * @example reveal-for-large\n   */\n  revealOn: null,\n\n  /**\n   * Force focus to the offcanvas on open. If true, will focus the opening trigger on close.\n   * @option\n   * @example true\n   */\n  autoFocus: true,\n\n  /**\n   * Class used to force an offcanvas to remain open. Foundation defaults for this are `reveal-for-large` & `reveal-for-medium`.\n   * @option\n   * TODO improve the regex testing for this.\n   * @example reveal-for-large\n   */\n  revealClass: 'reveal-for-',\n\n  /**\n   * Triggers optional focus trapping when opening an offcanvas. Sets tabindex of [data-off-canvas-content] to -1 for accessibility purposes.\n   * @option\n   * @example true\n   */\n  trapFocus: false\n}\n\n// Window exports\nFoundation.plugin(OffCanvas, 'OffCanvas');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Orbit module.\n * @module foundation.orbit\n * @requires foundation.util.keyboard\n * @requires foundation.util.motion\n * @requires foundation.util.timerAndImageLoader\n * @requires foundation.util.touch\n */\n\nclass Orbit {\n  /**\n  * Creates a new instance of an orbit carousel.\n  * @class\n  * @param {jQuery} element - jQuery object to make into an Orbit Carousel.\n  * @param {Object} options - Overrides to the default plugin settings.\n  */\n  constructor(element, options){\n    this.$element = element;\n    this.options = $.extend({}, Orbit.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Orbit');\n    Foundation.Keyboard.register('Orbit', {\n      'ltr': {\n        'ARROW_RIGHT': 'next',\n        'ARROW_LEFT': 'previous'\n      },\n      'rtl': {\n        'ARROW_LEFT': 'next',\n        'ARROW_RIGHT': 'previous'\n      }\n    });\n  }\n\n  /**\n  * Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\n  * @function\n  * @private\n  */\n  _init() {\n    this.$wrapper = this.$element.find(`.${this.options.containerClass}`);\n    this.$slides = this.$element.find(`.${this.options.slideClass}`);\n    var $images = this.$element.find('img'),\n    initActive = this.$slides.filter('.is-active');\n\n    if (!initActive.length) {\n      this.$slides.eq(0).addClass('is-active');\n    }\n\n    if (!this.options.useMUI) {\n      this.$slides.addClass('no-motionui');\n    }\n\n    if ($images.length) {\n      Foundation.onImagesLoaded($images, this._prepareForOrbit.bind(this));\n    } else {\n      this._prepareForOrbit();//hehe\n    }\n\n    if (this.options.bullets) {\n      this._loadBullets();\n    }\n\n    this._events();\n\n    if (this.options.autoPlay && this.$slides.length > 1) {\n      this.geoSync();\n    }\n\n    if (this.options.accessible) { // allow wrapper to be focusable to enable arrow navigation\n      this.$wrapper.attr('tabindex', 0);\n    }\n  }\n\n  /**\n  * Creates a jQuery collection of bullets, if they are being used.\n  * @function\n  * @private\n  */\n  _loadBullets() {\n    this.$bullets = this.$element.find(`.${this.options.boxOfBullets}`).find('button');\n  }\n\n  /**\n  * Sets a `timer` object on the orbit, and starts the counter for the next slide.\n  * @function\n  */\n  geoSync() {\n    var _this = this;\n    this.timer = new Foundation.Timer(\n      this.$element,\n      {\n        duration: this.options.timerDelay,\n        infinite: false\n      },\n      function() {\n        _this.changeSlide(true);\n      });\n    this.timer.start();\n  }\n\n  /**\n  * Sets wrapper and slide heights for the orbit.\n  * @function\n  * @private\n  */\n  _prepareForOrbit() {\n    var _this = this;\n    this._setWrapperHeight(function(max){\n      _this._setSlideHeight(max);\n    });\n  }\n\n  /**\n  * Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\n  * @function\n  * @private\n  * @param {Function} cb - a callback function to fire when complete.\n  */\n  _setWrapperHeight(cb) {//rewrite this to `for` loop\n    var max = 0, temp, counter = 0;\n\n    this.$slides.each(function() {\n      temp = this.getBoundingClientRect().height;\n      $(this).attr('data-slide', counter);\n\n      if (counter) {//if not the first slide, set css position and display property\n        $(this).css({'position': 'relative', 'display': 'none'});\n      }\n      max = temp > max ? temp : max;\n      counter++;\n    });\n\n    if (counter === this.$slides.length) {\n      this.$wrapper.css({'height': max}); //only change the wrapper height property once.\n      cb(max); //fire callback with max height dimension.\n    }\n  }\n\n  /**\n  * Sets the max-height of each slide.\n  * @function\n  * @private\n  */\n  _setSlideHeight(height) {\n    this.$slides.each(function() {\n      $(this).css('max-height', height);\n    });\n  }\n\n  /**\n  * Adds event listeners to basically everything within the element.\n  * @function\n  * @private\n  */\n  _events() {\n    var _this = this;\n\n    //***************************************\n    //**Now using custom event - thanks to:**\n    //**      Yohai Ararat of Toronto      **\n    //***************************************\n    if (this.$slides.length > 1) {\n\n      if (this.options.swipe) {\n        this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit')\n        .on('swipeleft.zf.orbit', function(e){\n          e.preventDefault();\n          _this.changeSlide(true);\n        }).on('swiperight.zf.orbit', function(e){\n          e.preventDefault();\n          _this.changeSlide(false);\n        });\n      }\n      //***************************************\n\n      if (this.options.autoPlay) {\n        this.$slides.on('click.zf.orbit', function() {\n          _this.$element.data('clickedOn', _this.$element.data('clickedOn') ? false : true);\n          _this.timer[_this.$element.data('clickedOn') ? 'pause' : 'start']();\n        });\n\n        if (this.options.pauseOnHover) {\n          this.$element.on('mouseenter.zf.orbit', function() {\n            _this.timer.pause();\n          }).on('mouseleave.zf.orbit', function() {\n            if (!_this.$element.data('clickedOn')) {\n              _this.timer.start();\n            }\n          });\n        }\n      }\n\n      if (this.options.navButtons) {\n        var $controls = this.$element.find(`.${this.options.nextClass}, .${this.options.prevClass}`);\n        $controls.attr('tabindex', 0)\n        //also need to handle enter/return and spacebar key presses\n        .on('click.zf.orbit touchend.zf.orbit', function(){\n          _this.changeSlide($(this).hasClass(_this.options.nextClass));\n        });\n      }\n\n      if (this.options.bullets) {\n        this.$bullets.on('click.zf.orbit touchend.zf.orbit', function() {\n          if (/is-active/g.test(this.className)) { return false; }//if this is active, kick out of function.\n          var idx = $(this).data('slide'),\n          ltr = idx > _this.$slides.filter('.is-active').data('slide'),\n          $slide = _this.$slides.eq(idx);\n\n          _this.changeSlide(ltr, $slide, idx);\n        });\n      }\n\n      this.$wrapper.add(this.$bullets).on('keydown.zf.orbit', function(e) {\n        // handle keyboard event with keyboard util\n        Foundation.Keyboard.handleKey(e, 'Orbit', {\n          next: function() {\n            _this.changeSlide(true);\n          },\n          previous: function() {\n            _this.changeSlide(false);\n          },\n          handled: function() { // if bullet is focused, make sure focus moves\n            if ($(e.target).is(_this.$bullets)) {\n              _this.$bullets.filter('.is-active').focus();\n            }\n          }\n        });\n      });\n    }\n  }\n\n  /**\n  * Changes the current slide to a new one.\n  * @function\n  * @param {Boolean} isLTR - flag if the slide should move left to right.\n  * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\n  * @param {Number} idx - the index of the new slide in its collection, if one chosen.\n  * @fires Orbit#slidechange\n  */\n  changeSlide(isLTR, chosenSlide, idx) {\n    var $curSlide = this.$slides.filter('.is-active').eq(0);\n\n    if (/mui/g.test($curSlide[0].className)) { return false; } //if the slide is currently animating, kick out of the function\n\n    var $firstSlide = this.$slides.first(),\n    $lastSlide = this.$slides.last(),\n    dirIn = isLTR ? 'Right' : 'Left',\n    dirOut = isLTR ? 'Left' : 'Right',\n    _this = this,\n    $newSlide;\n\n    if (!chosenSlide) { //most of the time, this will be auto played or clicked from the navButtons.\n      $newSlide = isLTR ? //if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!\n      (this.options.infiniteWrap ? $curSlide.next(`.${this.options.slideClass}`).length ? $curSlide.next(`.${this.options.slideClass}`) : $firstSlide : $curSlide.next(`.${this.options.slideClass}`))//pick next slide if moving left to right\n      :\n      (this.options.infiniteWrap ? $curSlide.prev(`.${this.options.slideClass}`).length ? $curSlide.prev(`.${this.options.slideClass}`) : $lastSlide : $curSlide.prev(`.${this.options.slideClass}`));//pick prev slide if moving right to left\n    } else {\n      $newSlide = chosenSlide;\n    }\n\n    if ($newSlide.length) {\n      if (this.options.bullets) {\n        idx = idx || this.$slides.index($newSlide); //grab index to update bullets\n        this._updateBullets(idx);\n      }\n\n      if (this.options.useMUI) {\n        Foundation.Motion.animateIn(\n          $newSlide.addClass('is-active').css({'position': 'absolute', 'top': 0}),\n          this.options[`animInFrom${dirIn}`],\n          function(){\n            $newSlide.css({'position': 'relative', 'display': 'block'})\n            .attr('aria-live', 'polite');\n        });\n\n        Foundation.Motion.animateOut(\n          $curSlide.removeClass('is-active'),\n          this.options[`animOutTo${dirOut}`],\n          function(){\n            $curSlide.removeAttr('aria-live');\n            if(_this.options.autoPlay && !_this.timer.isPaused){\n              _this.timer.restart();\n            }\n            //do stuff?\n          });\n      } else {\n        $curSlide.removeClass('is-active is-in').removeAttr('aria-live').hide();\n        $newSlide.addClass('is-active is-in').attr('aria-live', 'polite').show();\n        if (this.options.autoPlay && !this.timer.isPaused) {\n          this.timer.restart();\n        }\n      }\n    /**\n    * Triggers when the slide has finished animating in.\n    * @event Orbit#slidechange\n    */\n      this.$element.trigger('slidechange.zf.orbit', [$newSlide]);\n    }\n  }\n\n  /**\n  * Updates the active state of the bullets, if displayed.\n  * @function\n  * @private\n  * @param {Number} idx - the index of the current slide.\n  */\n  _updateBullets(idx) {\n    var $oldBullet = this.$element.find(`.${this.options.boxOfBullets}`)\n    .find('.is-active').removeClass('is-active').blur(),\n    span = $oldBullet.find('span:last').detach(),\n    $newBullet = this.$bullets.eq(idx).addClass('is-active').append(span);\n  }\n\n  /**\n  * Destroys the carousel and hides the element.\n  * @function\n  */\n  destroy() {\n    this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nOrbit.defaults = {\n  /**\n  * Tells the JS to look for and loadBullets.\n  * @option\n  * @example true\n  */\n  bullets: true,\n  /**\n  * Tells the JS to apply event listeners to nav buttons\n  * @option\n  * @example true\n  */\n  navButtons: true,\n  /**\n  * motion-ui animation class to apply\n  * @option\n  * @example 'slide-in-right'\n  */\n  animInFromRight: 'slide-in-right',\n  /**\n  * motion-ui animation class to apply\n  * @option\n  * @example 'slide-out-right'\n  */\n  animOutToRight: 'slide-out-right',\n  /**\n  * motion-ui animation class to apply\n  * @option\n  * @example 'slide-in-left'\n  *\n  */\n  animInFromLeft: 'slide-in-left',\n  /**\n  * motion-ui animation class to apply\n  * @option\n  * @example 'slide-out-left'\n  */\n  animOutToLeft: 'slide-out-left',\n  /**\n  * Allows Orbit to automatically animate on page load.\n  * @option\n  * @example true\n  */\n  autoPlay: true,\n  /**\n  * Amount of time, in ms, between slide transitions\n  * @option\n  * @example 5000\n  */\n  timerDelay: 5000,\n  /**\n  * Allows Orbit to infinitely loop through the slides\n  * @option\n  * @example true\n  */\n  infiniteWrap: true,\n  /**\n  * Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\n  * @option\n  * @example true\n  */\n  swipe: true,\n  /**\n  * Allows the timing function to pause animation on hover.\n  * @option\n  * @example true\n  */\n  pauseOnHover: true,\n  /**\n  * Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\n  * @option\n  * @example true\n  */\n  accessible: true,\n  /**\n  * Class applied to the container of Orbit\n  * @option\n  * @example 'orbit-container'\n  */\n  containerClass: 'orbit-container',\n  /**\n  * Class applied to individual slides.\n  * @option\n  * @example 'orbit-slide'\n  */\n  slideClass: 'orbit-slide',\n  /**\n  * Class applied to the bullet container. You're welcome.\n  * @option\n  * @example 'orbit-bullets'\n  */\n  boxOfBullets: 'orbit-bullets',\n  /**\n  * Class applied to the `next` navigation button.\n  * @option\n  * @example 'orbit-next'\n  */\n  nextClass: 'orbit-next',\n  /**\n  * Class applied to the `previous` navigation button.\n  * @option\n  * @example 'orbit-previous'\n  */\n  prevClass: 'orbit-previous',\n  /**\n  * Boolean to flag the js to use motion ui classes or not. Default to true for backwards compatability.\n  * @option\n  * @example true\n  */\n  useMUI: true\n};\n\n// Window exports\nFoundation.plugin(Orbit, 'Orbit');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * ResponsiveMenu module.\n * @module foundation.responsiveMenu\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.accordionMenu\n * @requires foundation.util.drilldown\n * @requires foundation.util.dropdown-menu\n */\n\nclass ResponsiveMenu {\n  /**\n   * Creates a new instance of a responsive menu.\n   * @class\n   * @fires ResponsiveMenu#init\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = $(element);\n    this.rules = this.$element.data('responsive-menu');\n    this.currentMq = null;\n    this.currentPlugin = null;\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this, 'ResponsiveMenu');\n  }\n\n  /**\n   * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\n   * @function\n   * @private\n   */\n  _init() {\n    var rulesTree = {};\n\n    // Parse rules from \"classes\" in data attribute\n    var rules = this.rules.split(' ');\n\n    // Iterate through every rule found\n    for (var i = 0; i < rules.length; i++) {\n      var rule = rules[i].split('-');\n      var ruleSize = rule.length > 1 ? rule[0] : 'small';\n      var rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n      if (MenuPlugins[rulePlugin] !== null) {\n        rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n      }\n    }\n\n    this.rules = rulesTree;\n\n    if (!$.isEmptyObject(rulesTree)) {\n      this._checkMediaQueries();\n    }\n  }\n\n  /**\n   * Initializes events for the Menu.\n   * @function\n   * @private\n   */\n  _events() {\n    var _this = this;\n\n    $(window).on('changed.zf.mediaquery', function() {\n      _this._checkMediaQueries();\n    });\n    // $(window).on('resize.zf.ResponsiveMenu', function() {\n    //   _this._checkMediaQueries();\n    // });\n  }\n\n  /**\n   * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\n   * @function\n   * @private\n   */\n  _checkMediaQueries() {\n    var matchedMq, _this = this;\n    // Iterate through each rule and find the last matching rule\n    $.each(this.rules, function(key) {\n      if (Foundation.MediaQuery.atLeast(key)) {\n        matchedMq = key;\n      }\n    });\n\n    // No match? No dice\n    if (!matchedMq) return;\n\n    // Plugin already initialized? We good\n    if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\n\n    // Remove existing plugin-specific CSS classes\n    $.each(MenuPlugins, function(key, value) {\n      _this.$element.removeClass(value.cssClass);\n    });\n\n    // Add the CSS class for the new plugin\n    this.$element.addClass(this.rules[matchedMq].cssClass);\n\n    // Create an instance of the new plugin\n    if (this.currentPlugin) this.currentPlugin.destroy();\n    this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n  }\n\n  /**\n   * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\n   * @function\n   */\n  destroy() {\n    this.currentPlugin.destroy();\n    $(window).off('.zf.ResponsiveMenu');\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nResponsiveMenu.defaults = {};\n\n// The plugin matches the plugin classes with these plugin instances.\nvar MenuPlugins = {\n  dropdown: {\n    cssClass: 'dropdown',\n    plugin: Foundation._plugins['dropdown-menu'] || null\n  },\n drilldown: {\n    cssClass: 'drilldown',\n    plugin: Foundation._plugins['drilldown'] || null\n  },\n  accordion: {\n    cssClass: 'accordion-menu',\n    plugin: Foundation._plugins['accordion-menu'] || null\n  }\n};\n\n// Window exports\nFoundation.plugin(ResponsiveMenu, 'ResponsiveMenu');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * ResponsiveToggle module.\n * @module foundation.responsiveToggle\n * @requires foundation.util.mediaQuery\n */\n\nclass ResponsiveToggle {\n  /**\n   * Creates a new instance of Tab Bar.\n   * @class\n   * @fires ResponsiveToggle#init\n   * @param {jQuery} element - jQuery object to attach tab bar functionality to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = $(element);\n    this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this, 'ResponsiveToggle');\n  }\n\n  /**\n   * Initializes the tab bar by finding the target element, toggling element, and running update().\n   * @function\n   * @private\n   */\n  _init() {\n    var targetID = this.$element.data('responsive-toggle');\n    if (!targetID) {\n      console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\n    }\n\n    this.$targetMenu = $(`#${targetID}`);\n    this.$toggler = this.$element.find('[data-toggle]');\n\n    this._update();\n  }\n\n  /**\n   * Adds necessary event handlers for the tab bar to work.\n   * @function\n   * @private\n   */\n  _events() {\n    var _this = this;\n\n    $(window).on('changed.zf.mediaquery', this._update.bind(this));\n\n    this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\n  }\n\n  /**\n   * Checks the current media query to determine if the tab bar should be visible or hidden.\n   * @function\n   * @private\n   */\n  _update() {\n    // Mobile\n    if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n      this.$element.show();\n      this.$targetMenu.hide();\n    }\n\n    // Desktop\n    else {\n      this.$element.hide();\n      this.$targetMenu.show();\n    }\n  }\n\n  /**\n   * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\n   * @function\n   * @fires ResponsiveToggle#toggled\n   */\n  toggleMenu() {\n    if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n      this.$targetMenu.toggle(0);\n\n      /**\n       * Fires when the element attached to the tab bar toggles.\n       * @event ResponsiveToggle#toggled\n       */\n      this.$element.trigger('toggled.zf.responsiveToggle');\n    }\n  };\n\n  destroy() {\n    //TODO this...\n  }\n}\n\nResponsiveToggle.defaults = {\n  /**\n   * The breakpoint after which the menu is always shown, and the tab bar is hidden.\n   * @option\n   * @example 'medium'\n   */\n  hideFor: 'medium'\n};\n\n// Window exports\nFoundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Reveal module.\n * @module foundation.reveal\n * @requires foundation.util.keyboard\n * @requires foundation.util.box\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.motion if using animations\n */\n\nclass Reveal {\n  /**\n   * Creates a new instance of Reveal.\n   * @class\n   * @param {jQuery} element - jQuery object to use for the modal.\n   * @param {Object} options - optional parameters.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\n    this._init();\n\n    Foundation.registerPlugin(this, 'Reveal');\n    Foundation.Keyboard.register('Reveal', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ESCAPE': 'close',\n      'TAB': 'tab_forward',\n      'SHIFT_TAB': 'tab_backward'\n    });\n  }\n\n  /**\n   * Initializes the modal by adding the overlay and close buttons, (if selected).\n   * @private\n   */\n  _init() {\n    this.id = this.$element.attr('id');\n    this.isActive = false;\n    this.cached = {mq: Foundation.MediaQuery.current};\n    this.isiOS = iPhoneSniff();\n\n    if(this.isiOS){ this.$element.addClass('is-ios'); }\n\n    this.$anchor = $(`[data-open=\"${this.id}\"]`).length ? $(`[data-open=\"${this.id}\"]`) : $(`[data-toggle=\"${this.id}\"]`);\n\n    if (this.$anchor.length) {\n      var anchorId = this.$anchor[0].id || Foundation.GetYoDigits(6, 'reveal');\n\n      this.$anchor.attr({\n        'aria-controls': this.id,\n        'id': anchorId,\n        'aria-haspopup': true,\n        'tabindex': 0\n      });\n      this.$element.attr({'aria-labelledby': anchorId});\n    }\n\n    if (this.options.fullScreen || this.$element.hasClass('full')) {\n      this.options.fullScreen = true;\n      this.options.overlay = false;\n    }\n    if (this.options.overlay && !this.$overlay) {\n      this.$overlay = this._makeOverlay(this.id);\n    }\n\n    this.$element.attr({\n        'role': 'dialog',\n        'aria-hidden': true,\n        'data-yeti-box': this.id,\n        'data-resize': this.id\n    });\n\n    if(this.$overlay) {\n      this.$element.detach().appendTo(this.$overlay);\n    } else {\n      this.$element.detach().appendTo($('body'));\n      this.$element.addClass('without-overlay');\n    }\n    this._events();\n    if (this.options.deepLink && window.location.hash === ( `#${this.id}`)) {\n      $(window).one('load.zf.reveal', this.open.bind(this));\n    }\n  }\n\n  /**\n   * Creates an overlay div to display behind the modal.\n   * @private\n   */\n  _makeOverlay(id) {\n    var $overlay = $('<div></div>')\n                    .addClass('reveal-overlay')\n                    .attr({'tabindex': -1, 'aria-hidden': true})\n                    .appendTo('body');\n    return $overlay;\n  }\n\n  /**\n   * Updates position of modal\n   * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\n   * @private\n   */\n  _updatePosition() {\n    var width = this.$element.outerWidth();\n    var outerWidth = $(window).width();\n    var height = this.$element.outerHeight();\n    var outerHeight = $(window).height();\n    var left = parseInt((outerWidth - width) / 2, 10);\n    var top;\n    if (height > outerHeight) {\n      top = parseInt(Math.min(100, outerHeight / 10), 10);\n    } else {\n      top = parseInt((outerHeight - height) / 4, 10);\n    }\n    this.$element.css({top: top + 'px'});\n    // only worry about left if we don't have an overlay, otherwise we're perfectly in the middle\n    if(!this.$overlay) {\n      this.$element.css({left: left + 'px'});\n    }\n\n  }\n\n  /**\n   * Adds event handlers for the modal.\n   * @private\n   */\n  _events() {\n    var _this = this;\n\n    this.$element.on({\n      'open.zf.trigger': this.open.bind(this),\n      'close.zf.trigger': this.close.bind(this),\n      'toggle.zf.trigger': this.toggle.bind(this),\n      'resizeme.zf.trigger': function() {\n        _this._updatePosition();\n      }\n    });\n\n    if (this.$anchor.length) {\n      this.$anchor.on('keydown.zf.reveal', function(e) {\n        if (e.which === 13 || e.which === 32) {\n          e.stopPropagation();\n          e.preventDefault();\n          _this.open();\n        }\n      });\n    }\n\n    if (this.options.closeOnClick && this.options.overlay) {\n      this.$overlay.off('.zf.reveal').on('click.zf.reveal', function(e) {\n        if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) { return; }\n        _this.close();\n      });\n    }\n    if (this.options.deepLink) {\n      $(window).on(`popstate.zf.reveal:${this.id}`, this._handleState.bind(this));\n    }\n  }\n\n  /**\n   * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\n   * @private\n   */\n  _handleState(e) {\n    if(window.location.hash === ( '#' + this.id) && !this.isActive){ this.open(); }\n    else{ this.close(); }\n  }\n\n\n  /**\n   * Opens the modal controlled by `this.$anchor`, and closes all others by default.\n   * @function\n   * @fires Reveal#closeme\n   * @fires Reveal#open\n   */\n  open() {\n    if (this.options.deepLink) {\n      var hash = `#${this.id}`;\n\n      if (window.history.pushState) {\n        window.history.pushState(null, null, hash);\n      } else {\n        window.location.hash = hash;\n      }\n    }\n\n    this.isActive = true;\n\n    // Make elements invisible, but remove display: none so we can get size and positioning\n    this.$element\n        .css({ 'visibility': 'hidden' })\n        .show()\n        .scrollTop(0);\n    if (this.options.overlay) {\n      this.$overlay.css({'visibility': 'hidden'}).show();\n    }\n\n    this._updatePosition();\n\n    this.$element\n      .hide()\n      .css({ 'visibility': '' });\n\n    if(this.$overlay) {\n      this.$overlay.css({'visibility': ''}).hide();\n    }\n\n\n    if (!this.options.multipleOpened) {\n      /**\n       * Fires immediately before the modal opens.\n       * Closes any other modals that are currently open\n       * @event Reveal#closeme\n       */\n      this.$element.trigger('closeme.zf.reveal', this.id);\n    }\n\n    // Motion UI method of reveal\n    if (this.options.animationIn) {\n      if (this.options.overlay) {\n        Foundation.Motion.animateIn(this.$overlay, 'fade-in');\n      }\n      Foundation.Motion.animateIn(this.$element, this.options.animationIn, function() {\n        this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\n      });\n    }\n    // jQuery method of reveal\n    else {\n      if (this.options.overlay) {\n        this.$overlay.show(0);\n      }\n      this.$element.show(this.options.showDelay);\n    }\n\n    // handle accessibility\n    this.$element\n      .attr({\n        'aria-hidden': false,\n        'tabindex': -1\n      })\n      .focus();\n\n    /**\n     * Fires when the modal has successfully opened.\n     * @event Reveal#open\n     */\n    this.$element.trigger('open.zf.reveal');\n\n    if (this.isiOS) {\n      var scrollPos = window.pageYOffset;\n      $('html, body').addClass('is-reveal-open').scrollTop(scrollPos);\n    }\n    else {\n      $('body').addClass('is-reveal-open');\n    }\n\n    $('body')\n      .addClass('is-reveal-open')\n      .attr('aria-hidden', (this.options.overlay || this.options.fullScreen) ? true : false);\n\n    setTimeout(() => {\n      this._extraHandlers();\n    }, 0);\n  }\n\n  /**\n   * Adds extra event handlers for the body and window if necessary.\n   * @private\n   */\n  _extraHandlers() {\n    var _this = this;\n    this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\n\n    if (!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen) {\n      $('body').on('click.zf.reveal', function(e) {\n        if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) { return; }\n        _this.close();\n      });\n    }\n\n    if (this.options.closeOnEsc) {\n      $(window).on('keydown.zf.reveal', function(e) {\n        Foundation.Keyboard.handleKey(e, 'Reveal', {\n          close: function() {\n            if (_this.options.closeOnEsc) {\n              _this.close();\n              _this.$anchor.focus();\n            }\n          }\n        });\n        if (_this.focusableElements.length === 0) { // no focusable elements inside the modal at all, prevent tabbing in general\n          e.preventDefault();\n        }\n      });\n    }\n\n    // lock focus within modal while tabbing\n    this.$element.on('keydown.zf.reveal', function(e) {\n      var $target = $(this);\n      // handle keyboard event with keyboard util\n      Foundation.Keyboard.handleKey(e, 'Reveal', {\n        tab_forward: function() {\n          if (_this.$element.find(':focus').is(_this.focusableElements.eq(-1))) { // left modal downwards, setting focus to first element\n            _this.focusableElements.eq(0).focus();\n            e.preventDefault();\n          }\n        },\n        tab_backward: function() {\n          if (_this.$element.find(':focus').is(_this.focusableElements.eq(0)) || _this.$element.is(':focus')) { // left modal upwards, setting focus to last element\n            _this.focusableElements.eq(-1).focus();\n            e.preventDefault();\n          }\n        },\n        open: function() {\n          if (_this.$element.find(':focus').is(_this.$element.find('[data-close]'))) {\n            setTimeout(function() { // set focus back to anchor if close button has been activated\n              _this.$anchor.focus();\n            }, 1);\n          } else if ($target.is(_this.focusableElements)) { // dont't trigger if acual element has focus (i.e. inputs, links, ...)\n            _this.open();\n          }\n        },\n        close: function() {\n          if (_this.options.closeOnEsc) {\n            _this.close();\n            _this.$anchor.focus();\n          }\n        }\n      });\n    });\n  }\n\n  /**\n   * Closes the modal.\n   * @function\n   * @fires Reveal#closed\n   */\n  close() {\n    if (!this.isActive || !this.$element.is(':visible')) {\n      return false;\n    }\n    var _this = this;\n\n    // Motion UI method of hiding\n    if (this.options.animationOut) {\n      if (this.options.overlay) {\n        Foundation.Motion.animateOut(this.$overlay, 'fade-out', finishUp);\n      }\n      else {\n        finishUp();\n      }\n\n      Foundation.Motion.animateOut(this.$element, this.options.animationOut);\n    }\n    // jQuery method of hiding\n    else {\n      if (this.options.overlay) {\n        this.$overlay.hide(0, finishUp);\n      }\n      else {\n        finishUp();\n      }\n\n      this.$element.hide(this.options.hideDelay);\n    }\n\n    // Conditionals to remove extra event listeners added on open\n    if (this.options.closeOnEsc) {\n      $(window).off('keydown.zf.reveal');\n    }\n\n    if (!this.options.overlay && this.options.closeOnClick) {\n      $('body').off('click.zf.reveal');\n    }\n\n    this.$element.off('keydown.zf.reveal');\n\n    function finishUp() {\n      if (_this.isiOS) {\n        $('html, body').removeClass('is-reveal-open');\n      }\n      else {\n        $('body').removeClass('is-reveal-open');\n      }\n\n      $('body').attr({\n        'aria-hidden': false,\n        'tabindex': ''\n      });\n\n      _this.$element.attr('aria-hidden', true);\n\n      /**\n      * Fires when the modal is done closing.\n      * @event Reveal#closed\n      */\n      _this.$element.trigger('closed.zf.reveal');\n    }\n\n    /**\n    * Resets the modal content\n    * This prevents a running video to keep going in the background\n    */\n    if (this.options.resetOnClose) {\n      this.$element.html(this.$element.html());\n    }\n\n    this.isActive = false;\n     if (_this.options.deepLink) {\n       if (window.history.replaceState) {\n         window.history.replaceState(\"\", document.title, window.location.pathname);\n       } else {\n         window.location.hash = '';\n       }\n     }\n  }\n\n  /**\n   * Toggles the open/closed state of a modal.\n   * @function\n   */\n  toggle() {\n    if (this.isActive) {\n      this.close();\n    } else {\n      this.open();\n    }\n  };\n\n  /**\n   * Destroys an instance of a modal.\n   * @function\n   */\n  destroy() {\n    if (this.options.overlay) {\n      this.$overlay.hide().off().remove();\n    }\n    this.$element.hide().off();\n    this.$anchor.off('.zf');\n    $(window).off(`.zf.reveal:${this.id}`);\n\n    Foundation.unregisterPlugin(this);\n  };\n}\n\nReveal.defaults = {\n  /**\n   * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n   * @option\n   * @example 'slide-in-left'\n   */\n  animationIn: '',\n  /**\n   * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n   * @option\n   * @example 'slide-out-right'\n   */\n  animationOut: '',\n  /**\n   * Time, in ms, to delay the opening of a modal after a click if no animation used.\n   * @option\n   * @example 10\n   */\n  showDelay: 0,\n  /**\n   * Time, in ms, to delay the closing of a modal after a click if no animation used.\n   * @option\n   * @example 10\n   */\n  hideDelay: 0,\n  /**\n   * Allows a click on the body/overlay to close the modal.\n   * @option\n   * @example true\n   */\n  closeOnClick: true,\n  /**\n   * Allows the modal to close if the user presses the `ESCAPE` key.\n   * @option\n   * @example true\n   */\n  closeOnEsc: true,\n  /**\n   * If true, allows multiple modals to be displayed at once.\n   * @option\n   * @example false\n   */\n  multipleOpened: false,\n  /**\n   * Distance, in pixels, the modal should push down from the top of the screen.\n   * @option\n   * @example 100\n   */\n  vOffset: 100,\n  /**\n   * Distance, in pixels, the modal should push in from the side of the screen.\n   * @option\n   * @example 0\n   */\n  hOffset: 0,\n  /**\n   * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\n   * @option\n   * @example false\n   */\n  fullScreen: false,\n  /**\n   * Percentage of screen height the modal should push up from the bottom of the view.\n   * @option\n   * @example 10\n   */\n  btmOffsetPct: 10,\n  /**\n   * Allows the modal to generate an overlay div, which will cover the view when modal opens.\n   * @option\n   * @example true\n   */\n  overlay: true,\n  /**\n   * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\n   * @option\n   * @example false\n   */\n  resetOnClose: false,\n  /**\n   * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\n   * @option\n   * @example false\n   */\n  deepLink: false\n};\n\n// Window exports\nFoundation.plugin(Reveal, 'Reveal');\n\nfunction iPhoneSniff() {\n  return /iP(ad|hone|od).*OS/.test(window.navigator.userAgent);\n}\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Slider module.\n * @module foundation.slider\n * @requires foundation.util.motion\n * @requires foundation.util.triggers\n * @requires foundation.util.keyboard\n * @requires foundation.util.touch\n */\n\nclass Slider {\n  /**\n   * Creates a new instance of a drilldown menu.\n   * @class\n   * @param {jQuery} element - jQuery object to make into an accordion menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Slider.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Slider');\n    Foundation.Keyboard.register('Slider', {\n      'ltr': {\n        'ARROW_RIGHT': 'increase',\n        'ARROW_UP': 'increase',\n        'ARROW_DOWN': 'decrease',\n        'ARROW_LEFT': 'decrease',\n        'SHIFT_ARROW_RIGHT': 'increase_fast',\n        'SHIFT_ARROW_UP': 'increase_fast',\n        'SHIFT_ARROW_DOWN': 'decrease_fast',\n        'SHIFT_ARROW_LEFT': 'decrease_fast'\n      },\n      'rtl': {\n        'ARROW_LEFT': 'increase',\n        'ARROW_RIGHT': 'decrease',\n        'SHIFT_ARROW_LEFT': 'increase_fast',\n        'SHIFT_ARROW_RIGHT': 'decrease_fast'\n      }\n    });\n  }\n\n  /**\n   * Initilizes the plugin by reading/setting attributes, creating collections and setting the initial position of the handle(s).\n   * @function\n   * @private\n   */\n  _init() {\n    this.inputs = this.$element.find('input');\n    this.handles = this.$element.find('[data-slider-handle]');\n\n    this.$handle = this.handles.eq(0);\n    this.$input = this.inputs.length ? this.inputs.eq(0) : $(`#${this.$handle.attr('aria-controls')}`);\n    this.$fill = this.$element.find('[data-slider-fill]').css(this.options.vertical ? 'height' : 'width', 0);\n\n    var isDbl = false,\n        _this = this;\n    if (this.options.disabled || this.$element.hasClass(this.options.disabledClass)) {\n      this.options.disabled = true;\n      this.$element.addClass(this.options.disabledClass);\n    }\n    if (!this.inputs.length) {\n      this.inputs = $().add(this.$input);\n      this.options.binding = true;\n    }\n    this._setInitAttr(0);\n    this._events(this.$handle);\n\n    if (this.handles[1]) {\n      this.options.doubleSided = true;\n      this.$handle2 = this.handles.eq(1);\n      this.$input2 = this.inputs.length > 1 ? this.inputs.eq(1) : $(`#${this.$handle2.attr('aria-controls')}`);\n\n      if (!this.inputs[1]) {\n        this.inputs = this.inputs.add(this.$input2);\n      }\n      isDbl = true;\n\n      this._setHandlePos(this.$handle, this.options.initialStart, true, function() {\n\n        _this._setHandlePos(_this.$handle2, _this.options.initialEnd, true);\n      });\n      // this.$handle.triggerHandler('click.zf.slider');\n      this._setInitAttr(1);\n      this._events(this.$handle2);\n    }\n\n    if (!isDbl) {\n      this._setHandlePos(this.$handle, this.options.initialStart, true);\n    }\n  }\n\n  /**\n   * Sets the position of the selected handle and fill bar.\n   * @function\n   * @private\n   * @param {jQuery} $hndl - the selected handle to move.\n   * @param {Number} location - floating point between the start and end values of the slider bar.\n   * @param {Function} cb - callback function to fire on completion.\n   * @fires Slider#moved\n   */\n  _setHandlePos($hndl, location, noInvert, cb) {\n  //might need to alter that slightly for bars that will have odd number selections.\n    location = parseFloat(location);//on input change events, convert string to number...grumble.\n\n    // prevent slider from running out of bounds, if value exceeds the limits set through options, override the value to min/max\n    if (location < this.options.start) { location = this.options.start; }\n    else if (location > this.options.end) { location = this.options.end; }\n\n    var isDbl = this.options.doubleSided;\n\n    if (isDbl) { //this block is to prevent 2 handles from crossing eachother. Could/should be improved.\n      if (this.handles.index($hndl) === 0) {\n        var h2Val = parseFloat(this.$handle2.attr('aria-valuenow'));\n        location = location >= h2Val ? h2Val - this.options.step : location;\n      } else {\n        var h1Val = parseFloat(this.$handle.attr('aria-valuenow'));\n        location = location <= h1Val ? h1Val + this.options.step : location;\n      }\n    }\n\n    //this is for single-handled vertical sliders, it adjusts the value to account for the slider being \"upside-down\"\n    //for click and drag events, it's weird due to the scale(-1, 1) css property\n    if (this.options.vertical && !noInvert) {\n      location = this.options.end - location;\n    }\n\n    var _this = this,\n        vert = this.options.vertical,\n        hOrW = vert ? 'height' : 'width',\n        lOrT = vert ? 'top' : 'left',\n        handleDim = $hndl[0].getBoundingClientRect()[hOrW],\n        elemDim = this.$element[0].getBoundingClientRect()[hOrW],\n        //percentage of bar min/max value based on click or drag point\n        pctOfBar = percent(location, this.options.end).toFixed(2),\n        //number of actual pixels to shift the handle, based on the percentage obtained above\n        pxToMove = (elemDim - handleDim) * pctOfBar,\n        //percentage of bar to shift the handle\n        movement = (percent(pxToMove, elemDim) * 100).toFixed(this.options.decimal);\n        //fixing the decimal value for the location number, is passed to other methods as a fixed floating-point value\n        location = parseFloat(location.toFixed(this.options.decimal));\n        // declare empty object for css adjustments, only used with 2 handled-sliders\n    var css = {};\n\n    this._setValues($hndl, location);\n\n    // TODO update to calculate based on values set to respective inputs??\n    if (isDbl) {\n      var isLeftHndl = this.handles.index($hndl) === 0,\n          //empty variable, will be used for min-height/width for fill bar\n          dim,\n          //percentage w/h of the handle compared to the slider bar\n          handlePct =  ~~(percent(handleDim, elemDim) * 100);\n      //if left handle, the math is slightly different than if it's the right handle, and the left/top property needs to be changed for the fill bar\n      if (isLeftHndl) {\n        //left or top percentage value to apply to the fill bar.\n        css[lOrT] = `${movement}%`;\n        //calculate the new min-height/width for the fill bar.\n        dim = parseFloat(this.$handle2[0].style[lOrT]) - movement + handlePct;\n        //this callback is necessary to prevent errors and allow the proper placement and initialization of a 2-handled slider\n        //plus, it means we don't care if 'dim' isNaN on init, it won't be in the future.\n        if (cb && typeof cb === 'function') { cb(); }//this is only needed for the initialization of 2 handled sliders\n      } else {\n        //just caching the value of the left/bottom handle's left/top property\n        var handlePos = parseFloat(this.$handle[0].style[lOrT]);\n        //calculate the new min-height/width for the fill bar. Use isNaN to prevent false positives for numbers <= 0\n        //based on the percentage of movement of the handle being manipulated, less the opposing handle's left/top position, plus the percentage w/h of the handle itself\n        dim = movement - (isNaN(handlePos) ? this.options.initialStart/((this.options.end-this.options.start)/100) : handlePos) + handlePct;\n      }\n      // assign the min-height/width to our css object\n      css[`min-${hOrW}`] = `${dim}%`;\n    }\n\n    this.$element.one('finished.zf.animate', function() {\n                    /**\n                     * Fires when the handle is done moving.\n                     * @event Slider#moved\n                     */\n                    _this.$element.trigger('moved.zf.slider', [$hndl]);\n                });\n\n    //because we don't know exactly how the handle will be moved, check the amount of time it should take to move.\n    var moveTime = this.$element.data('dragging') ? 1000/60 : this.options.moveTime;\n\n    Foundation.Move(moveTime, $hndl, function() {\n      //adjusting the left/top property of the handle, based on the percentage calculated above\n      $hndl.css(lOrT, `${movement}%`);\n\n      if (!_this.options.doubleSided) {\n        //if single-handled, a simple method to expand the fill bar\n        _this.$fill.css(hOrW, `${pctOfBar * 100}%`);\n      } else {\n        //otherwise, use the css object we created above\n        _this.$fill.css(css);\n      }\n    });\n  }\n\n  /**\n   * Sets the initial attribute for the slider element.\n   * @function\n   * @private\n   * @param {Number} idx - index of the current handle/input to use.\n   */\n  _setInitAttr(idx) {\n    var id = this.inputs.eq(idx).attr('id') || Foundation.GetYoDigits(6, 'slider');\n    this.inputs.eq(idx).attr({\n      'id': id,\n      'max': this.options.end,\n      'min': this.options.start,\n      'step': this.options.step\n    });\n    this.handles.eq(idx).attr({\n      'role': 'slider',\n      'aria-controls': id,\n      'aria-valuemax': this.options.end,\n      'aria-valuemin': this.options.start,\n      'aria-valuenow': idx === 0 ? this.options.initialStart : this.options.initialEnd,\n      'aria-orientation': this.options.vertical ? 'vertical' : 'horizontal',\n      'tabindex': 0\n    });\n  }\n\n  /**\n   * Sets the input and `aria-valuenow` values for the slider element.\n   * @function\n   * @private\n   * @param {jQuery} $handle - the currently selected handle.\n   * @param {Number} val - floating point of the new value.\n   */\n  _setValues($handle, val) {\n    var idx = this.options.doubleSided ? this.handles.index($handle) : 0;\n    this.inputs.eq(idx).val(val);\n    $handle.attr('aria-valuenow', val);\n  }\n\n  /**\n   * Handles events on the slider element.\n   * Calculates the new location of the current handle.\n   * If there are two handles and the bar was clicked, it determines which handle to move.\n   * @function\n   * @private\n   * @param {Object} e - the `event` object passed from the listener.\n   * @param {jQuery} $handle - the current handle to calculate for, if selected.\n   * @param {Number} val - floating point number for the new value of the slider.\n   * TODO clean this up, there's a lot of repeated code between this and the _setHandlePos fn.\n   */\n  _handleEvent(e, $handle, val) {\n    var value, hasVal;\n    if (!val) {//click or drag events\n      e.preventDefault();\n      var _this = this,\n          vertical = this.options.vertical,\n          param = vertical ? 'height' : 'width',\n          direction = vertical ? 'top' : 'left',\n          pageXY = vertical ? e.pageY : e.pageX,\n          halfOfHandle = this.$handle[0].getBoundingClientRect()[param] / 2,\n          barDim = this.$element[0].getBoundingClientRect()[param],\n          barOffset = (this.$element.offset()[direction] -  pageXY),\n          //if the cursor position is less than or greater than the elements bounding coordinates, set coordinates within those bounds\n          barXY = barOffset > 0 ? -halfOfHandle : (barOffset - halfOfHandle) < -barDim ? barDim : Math.abs(barOffset),\n          offsetPct = percent(barXY, barDim);\n      value = (this.options.end - this.options.start) * offsetPct;\n\n      // turn everything around for RTL, yay math!\n      if (Foundation.rtl() && !this.options.vertical) {value = this.options.end - value;}\n\n      value = _this._adjustValue(null, value);\n      //boolean flag for the setHandlePos fn, specifically for vertical sliders\n      hasVal = false;\n\n      if (!$handle) {//figure out which handle it is, pass it to the next function.\n        var firstHndlPos = absPosition(this.$handle, direction, barXY, param),\n            secndHndlPos = absPosition(this.$handle2, direction, barXY, param);\n            $handle = firstHndlPos <= secndHndlPos ? this.$handle : this.$handle2;\n      }\n\n    } else {//change event on input\n      value = this._adjustValue(null, val);\n      hasVal = true;\n    }\n\n    this._setHandlePos($handle, value, hasVal);\n  }\n\n  /**\n   * Adjustes value for handle in regard to step value. returns adjusted value\n   * @function\n   * @private\n   * @param {jQuery} $handle - the selected handle.\n   * @param {Number} value - value to adjust. used if $handle is falsy\n   */\n  _adjustValue($handle, value) {\n    var val,\n      step = this.options.step,\n      div = parseFloat(step/2),\n      left, prev_val, next_val;\n    if (!!$handle) {\n      val = parseFloat($handle.attr('aria-valuenow'));\n    }\n    else {\n      val = value;\n    }\n    left = val % step;\n    prev_val = val - left;\n    next_val = prev_val + step;\n    if (left === 0) {\n      return val;\n    }\n    val = val >= prev_val + div ? next_val : prev_val;\n    return val;\n  }\n\n  /**\n   * Adds event listeners to the slider elements.\n   * @function\n   * @private\n   * @param {jQuery} $handle - the current handle to apply listeners to.\n   */\n  _events($handle) {\n    if (this.options.disabled) { return false; }\n\n    var _this = this,\n        curHandle,\n        timer;\n\n      this.inputs.off('change.zf.slider').on('change.zf.slider', function(e) {\n        var idx = _this.inputs.index($(this));\n        _this._handleEvent(e, _this.handles.eq(idx), $(this).val());\n      });\n\n      if (this.options.clickSelect) {\n        this.$element.off('click.zf.slider').on('click.zf.slider', function(e) {\n          if (_this.$element.data('dragging')) { return false; }\n\n          if (!$(e.target).is('[data-slider-handle]')) {\n            if (_this.options.doubleSided) {\n              _this._handleEvent(e);\n            } else {\n              _this._handleEvent(e, _this.$handle);\n            }\n          }\n        });\n      }\n\n    if (this.options.draggable) {\n      this.handles.addTouch();\n\n      var $body = $('body');\n      $handle\n        .off('mousedown.zf.slider')\n        .on('mousedown.zf.slider', function(e) {\n          $handle.addClass('is-dragging');\n          _this.$fill.addClass('is-dragging');//\n          _this.$element.data('dragging', true);\n\n          curHandle = $(e.currentTarget);\n\n          $body.on('mousemove.zf.slider', function(e) {\n            e.preventDefault();\n\n            _this._handleEvent(e, curHandle);\n\n          }).on('mouseup.zf.slider', function(e) {\n            _this._handleEvent(e, curHandle);\n\n            $handle.removeClass('is-dragging');\n            _this.$fill.removeClass('is-dragging');\n            _this.$element.data('dragging', false);\n\n            $body.off('mousemove.zf.slider mouseup.zf.slider');\n          });\n      });\n    }\n\n    $handle.off('keydown.zf.slider').on('keydown.zf.slider', function(e) {\n      var _$handle = $(this),\n          idx = _this.options.doubleSided ? _this.handles.index(_$handle) : 0,\n          oldValue = parseFloat(_this.inputs.eq(idx).val()),\n          newValue;\n\n      // handle keyboard event with keyboard util\n      Foundation.Keyboard.handleKey(e, 'Slider', {\n        decrease: function() {\n          newValue = oldValue - _this.options.step;\n        },\n        increase: function() {\n          newValue = oldValue + _this.options.step;\n        },\n        decrease_fast: function() {\n          newValue = oldValue - _this.options.step * 10;\n        },\n        increase_fast: function() {\n          newValue = oldValue + _this.options.step * 10;\n        },\n        handled: function() { // only set handle pos when event was handled specially\n          e.preventDefault();\n          _this._setHandlePos(_$handle, newValue, true);\n        }\n      });\n      /*if (newValue) { // if pressed key has special function, update value\n        e.preventDefault();\n        _this._setHandlePos(_$handle, newValue);\n      }*/\n    });\n  }\n\n  /**\n   * Destroys the slider plugin.\n   */\n  destroy() {\n    this.handles.off('.zf.slider');\n    this.inputs.off('.zf.slider');\n    this.$element.off('.zf.slider');\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nSlider.defaults = {\n  /**\n   * Minimum value for the slider scale.\n   * @option\n   * @example 0\n   */\n  start: 0,\n  /**\n   * Maximum value for the slider scale.\n   * @option\n   * @example 100\n   */\n  end: 100,\n  /**\n   * Minimum value change per change event.\n   * @option\n   * @example 1\n   */\n  step: 1,\n  /**\n   * Value at which the handle/input *(left handle/first input)* should be set to on initialization.\n   * @option\n   * @example 0\n   */\n  initialStart: 0,\n  /**\n   * Value at which the right handle/second input should be set to on initialization.\n   * @option\n   * @example 100\n   */\n  initialEnd: 100,\n  /**\n   * Allows the input to be located outside the container and visible. Set to by the JS\n   * @option\n   * @example false\n   */\n  binding: false,\n  /**\n   * Allows the user to click/tap on the slider bar to select a value.\n   * @option\n   * @example true\n   */\n  clickSelect: true,\n  /**\n   * Set to true and use the `vertical` class to change alignment to vertical.\n   * @option\n   * @example false\n   */\n  vertical: false,\n  /**\n   * Allows the user to drag the slider handle(s) to select a value.\n   * @option\n   * @example true\n   */\n  draggable: true,\n  /**\n   * Disables the slider and prevents event listeners from being applied. Double checked by JS with `disabledClass`.\n   * @option\n   * @example false\n   */\n  disabled: false,\n  /**\n   * Allows the use of two handles. Double checked by the JS. Changes some logic handling.\n   * @option\n   * @example false\n   */\n  doubleSided: false,\n  /**\n   * Potential future feature.\n   */\n  // steps: 100,\n  /**\n   * Number of decimal places the plugin should go to for floating point precision.\n   * @option\n   * @example 2\n   */\n  decimal: 2,\n  /**\n   * Time delay for dragged elements.\n   */\n  // dragDelay: 0,\n  /**\n   * Time, in ms, to animate the movement of a slider handle if user clicks/taps on the bar. Needs to be manually set if updating the transition time in the Sass settings.\n   * @option\n   * @example 200\n   */\n  moveTime: 200,//update this if changing the transition time in the sass\n  /**\n   * Class applied to disabled sliders.\n   * @option\n   * @example 'disabled'\n   */\n  disabledClass: 'disabled',\n  /**\n   * Will invert the default layout for a vertical<span data-tooltip title=\"who would do this???\"> </span>slider.\n   * @option\n   * @example false\n   */\n  invertVertical: false\n};\n\nfunction percent(frac, num) {\n  return (frac / num);\n}\nfunction absPosition($handle, dir, clickPos, param) {\n  return Math.abs(($handle.position()[dir] + ($handle[param]() / 2)) - clickPos);\n}\n\n// Window exports\nFoundation.plugin(Slider, 'Slider');\n\n}(jQuery);\n\n//*********this is in case we go to static, absolute positions instead of dynamic positioning********\n// this.setSteps(function() {\n//   _this._events();\n//   var initStart = _this.options.positions[_this.options.initialStart - 1] || null;\n//   var initEnd = _this.options.initialEnd ? _this.options.position[_this.options.initialEnd - 1] : null;\n//   if (initStart || initEnd) {\n//     _this._handleEvent(initStart, initEnd);\n//   }\n// });\n\n//***********the other part of absolute positions*************\n// Slider.prototype.setSteps = function(cb) {\n//   var posChange = this.$element.outerWidth() / this.options.steps;\n//   var counter = 0\n//   while(counter < this.options.steps) {\n//     if (counter) {\n//       this.options.positions.push(this.options.positions[counter - 1] + posChange);\n//     } else {\n//       this.options.positions.push(posChange);\n//     }\n//     counter++;\n//   }\n//   cb();\n// };\n","'use strict';\n\n!function($) {\n\n/**\n * Sticky module.\n * @module foundation.sticky\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n */\n\nclass Sticky {\n  /**\n   * Creates a new instance of a sticky thing.\n   * @class\n   * @param {jQuery} element - jQuery object to make sticky.\n   * @param {Object} options - options object passed when creating the element programmatically.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Sticky.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Sticky');\n  }\n\n  /**\n   * Initializes the sticky element by adding classes, getting/setting dimensions, breakpoints and attributes\n   * @function\n   * @private\n   */\n  _init() {\n    var $parent = this.$element.parent('[data-sticky-container]'),\n        id = this.$element[0].id || Foundation.GetYoDigits(6, 'sticky'),\n        _this = this;\n\n    if (!$parent.length) {\n      this.wasWrapped = true;\n    }\n    this.$container = $parent.length ? $parent : $(this.options.container).wrapInner(this.$element);\n    this.$container.addClass(this.options.containerClass);\n\n    this.$element.addClass(this.options.stickyClass)\n                 .attr({'data-resize': id});\n\n    this.scrollCount = this.options.checkEvery;\n    this.isStuck = false;\n    $(window).one('load.zf.sticky', function(){\n      if(_this.options.anchor !== ''){\n        _this.$anchor = $('#' + _this.options.anchor);\n      }else{\n        _this._parsePoints();\n      }\n\n      _this._setSizes(function(){\n        _this._calc(false);\n      });\n      _this._events(id.split('-').reverse().join('-'));\n    });\n  }\n\n  /**\n   * If using multiple elements as anchors, calculates the top and bottom pixel values the sticky thing should stick and unstick on.\n   * @function\n   * @private\n   */\n  _parsePoints() {\n    var top = this.options.topAnchor,\n        btm = this.options.btmAnchor,\n        pts = [top, btm],\n        breaks = {};\n    if (top && btm) {\n\n      for (var i = 0, len = pts.length; i < len && pts[i]; i++) {\n        var pt;\n        if (typeof pts[i] === 'number') {\n          pt = pts[i];\n        } else {\n          var place = pts[i].split(':'),\n              anchor = $(`#${place[0]}`);\n\n          pt = anchor.offset().top;\n          if (place[1] && place[1].toLowerCase() === 'bottom') {\n            pt += anchor[0].getBoundingClientRect().height;\n          }\n        }\n        breaks[i] = pt;\n      }\n    } else {\n      breaks = {0: 1, 1: document.documentElement.scrollHeight};\n    }\n\n    this.points = breaks;\n    return;\n  }\n\n  /**\n   * Adds event handlers for the scrolling element.\n   * @private\n   * @param {String} id - psuedo-random id for unique scroll event listener.\n   */\n  _events(id) {\n    var _this = this,\n        scrollListener = this.scrollListener = `scroll.zf.${id}`;\n    if (this.isOn) { return; }\n    if (this.canStick) {\n      this.isOn = true;\n      $(window).off(scrollListener)\n               .on(scrollListener, function(e) {\n                 if (_this.scrollCount === 0) {\n                   _this.scrollCount = _this.options.checkEvery;\n                   _this._setSizes(function() {\n                     _this._calc(false, window.pageYOffset);\n                   });\n                 } else {\n                   _this.scrollCount--;\n                   _this._calc(false, window.pageYOffset);\n                 }\n              });\n    }\n\n    this.$element.off('resizeme.zf.trigger')\n                 .on('resizeme.zf.trigger', function(e, el) {\n                     _this._setSizes(function() {\n                       _this._calc(false);\n                       if (_this.canStick) {\n                         if (!_this.isOn) {\n                           _this._events(id);\n                         }\n                       } else if (_this.isOn) {\n                         _this._pauseListeners(scrollListener);\n                       }\n                     });\n    });\n  }\n\n  /**\n   * Removes event handlers for scroll and change events on anchor.\n   * @fires Sticky#pause\n   * @param {String} scrollListener - unique, namespaced scroll listener attached to `window`\n   */\n  _pauseListeners(scrollListener) {\n    this.isOn = false;\n    $(window).off(scrollListener);\n\n    /**\n     * Fires when the plugin is paused due to resize event shrinking the view.\n     * @event Sticky#pause\n     * @private\n     */\n     this.$element.trigger('pause.zf.sticky');\n  }\n\n  /**\n   * Called on every `scroll` event and on `_init`\n   * fires functions based on booleans and cached values\n   * @param {Boolean} checkSizes - true if plugin should recalculate sizes and breakpoints.\n   * @param {Number} scroll - current scroll position passed from scroll event cb function. If not passed, defaults to `window.pageYOffset`.\n   */\n  _calc(checkSizes, scroll) {\n    if (checkSizes) { this._setSizes(); }\n\n    if (!this.canStick) {\n      if (this.isStuck) {\n        this._removeSticky(true);\n      }\n      return false;\n    }\n\n    if (!scroll) { scroll = window.pageYOffset; }\n\n    if (scroll >= this.topPoint) {\n      if (scroll <= this.bottomPoint) {\n        if (!this.isStuck) {\n          this._setSticky();\n        }\n      } else {\n        if (this.isStuck) {\n          this._removeSticky(false);\n        }\n      }\n    } else {\n      if (this.isStuck) {\n        this._removeSticky(true);\n      }\n    }\n  }\n\n  /**\n   * Causes the $element to become stuck.\n   * Adds `position: fixed;`, and helper classes.\n   * @fires Sticky#stuckto\n   * @function\n   * @private\n   */\n  _setSticky() {\n    var stickTo = this.options.stickTo,\n        mrgn = stickTo === 'top' ? 'marginTop' : 'marginBottom',\n        notStuckTo = stickTo === 'top' ? 'bottom' : 'top',\n        css = {};\n\n    css[mrgn] = `${this.options[mrgn]}em`;\n    css[stickTo] = 0;\n    css[notStuckTo] = 'auto';\n    css['left'] = this.$container.offset().left + parseInt(window.getComputedStyle(this.$container[0])[\"padding-left\"], 10);\n    this.isStuck = true;\n    this.$element.removeClass(`is-anchored is-at-${notStuckTo}`)\n                 .addClass(`is-stuck is-at-${stickTo}`)\n                 .css(css)\n                 /**\n                  * Fires when the $element has become `position: fixed;`\n                  * Namespaced to `top` or `bottom`, e.g. `sticky.zf.stuckto:top`\n                  * @event Sticky#stuckto\n                  */\n                 .trigger(`sticky.zf.stuckto:${stickTo}`);\n  }\n\n  /**\n   * Causes the $element to become unstuck.\n   * Removes `position: fixed;`, and helper classes.\n   * Adds other helper classes.\n   * @param {Boolean} isTop - tells the function if the $element should anchor to the top or bottom of its $anchor element.\n   * @fires Sticky#unstuckfrom\n   * @private\n   */\n  _removeSticky(isTop) {\n    var stickTo = this.options.stickTo,\n        stickToTop = stickTo === 'top',\n        css = {},\n        anchorPt = (this.points ? this.points[1] - this.points[0] : this.anchorHeight) - this.elemHeight,\n        mrgn = stickToTop ? 'marginTop' : 'marginBottom',\n        notStuckTo = stickToTop ? 'bottom' : 'top',\n        topOrBottom = isTop ? 'top' : 'bottom';\n\n    css[mrgn] = 0;\n\n    if ((isTop && !stickToTop) || (stickToTop && !isTop)) {\n      css[stickTo] = anchorPt;\n      css[notStuckTo] = 0;\n    } else {\n      css[stickTo] = 0;\n      css[notStuckTo] = anchorPt;\n    }\n\n    css['left'] = '';\n    this.isStuck = false;\n    this.$element.removeClass(`is-stuck is-at-${stickTo}`)\n                 .addClass(`is-anchored is-at-${topOrBottom}`)\n                 .css(css)\n                 /**\n                  * Fires when the $element has become anchored.\n                  * Namespaced to `top` or `bottom`, e.g. `sticky.zf.unstuckfrom:bottom`\n                  * @event Sticky#unstuckfrom\n                  */\n                 .trigger(`sticky.zf.unstuckfrom:${topOrBottom}`);\n  }\n\n  /**\n   * Sets the $element and $container sizes for plugin.\n   * Calls `_setBreakPoints`.\n   * @param {Function} cb - optional callback function to fire on completion of `_setBreakPoints`.\n   * @private\n   */\n  _setSizes(cb) {\n    this.canStick = Foundation.MediaQuery.atLeast(this.options.stickyOn);\n    if (!this.canStick) { cb(); }\n    var _this = this,\n        newElemWidth = this.$container[0].getBoundingClientRect().width,\n        comp = window.getComputedStyle(this.$container[0]),\n        pdng = parseInt(comp['padding-right'], 10);\n\n    if (this.$anchor && this.$anchor.length) {\n      this.anchorHeight = this.$anchor[0].getBoundingClientRect().height;\n    } else {\n      this._parsePoints();\n    }\n\n    this.$element.css({\n      'max-width': `${newElemWidth - pdng}px`\n    });\n\n    var newContainerHeight = this.$element[0].getBoundingClientRect().height || this.containerHeight;\n    this.containerHeight = newContainerHeight;\n    this.$container.css({\n      height: newContainerHeight\n    });\n    this.elemHeight = newContainerHeight;\n\n  \tif (this.isStuck) {\n  \t\tthis.$element.css({\"left\":this.$container.offset().left + parseInt(comp['padding-left'], 10)});\n  \t}\n\n    this._setBreakPoints(newContainerHeight, function() {\n      if (cb) { cb(); }\n    });\n  }\n\n  /**\n   * Sets the upper and lower breakpoints for the element to become sticky/unsticky.\n   * @param {Number} elemHeight - px value for sticky.$element height, calculated by `_setSizes`.\n   * @param {Function} cb - optional callback function to be called on completion.\n   * @private\n   */\n  _setBreakPoints(elemHeight, cb) {\n    if (!this.canStick) {\n      if (cb) { cb(); }\n      else { return false; }\n    }\n    var mTop = emCalc(this.options.marginTop),\n        mBtm = emCalc(this.options.marginBottom),\n        topPoint = this.points ? this.points[0] : this.$anchor.offset().top,\n        bottomPoint = this.points ? this.points[1] : topPoint + this.anchorHeight,\n        // topPoint = this.$anchor.offset().top || this.points[0],\n        // bottomPoint = topPoint + this.anchorHeight || this.points[1],\n        winHeight = window.innerHeight;\n\n    if (this.options.stickTo === 'top') {\n      topPoint -= mTop;\n      bottomPoint -= (elemHeight + mTop);\n    } else if (this.options.stickTo === 'bottom') {\n      topPoint -= (winHeight - (elemHeight + mBtm));\n      bottomPoint -= (winHeight - mBtm);\n    } else {\n      //this would be the stickTo: both option... tricky\n    }\n\n    this.topPoint = topPoint;\n    this.bottomPoint = bottomPoint;\n\n    if (cb) { cb(); }\n  }\n\n  /**\n   * Destroys the current sticky element.\n   * Resets the element to the top position first.\n   * Removes event listeners, JS-added css properties and classes, and unwraps the $element if the JS added the $container.\n   * @function\n   */\n  destroy() {\n    this._removeSticky(true);\n\n    this.$element.removeClass(`${this.options.stickyClass} is-anchored is-at-top`)\n                 .css({\n                   height: '',\n                   top: '',\n                   bottom: '',\n                   'max-width': ''\n                 })\n                 .off('resizeme.zf.trigger');\n\n    this.$anchor.off('change.zf.sticky');\n    $(window).off(this.scrollListener);\n\n    if (this.wasWrapped) {\n      this.$element.unwrap();\n    } else {\n      this.$container.removeClass(this.options.containerClass)\n                     .css({\n                       height: ''\n                     });\n    }\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nSticky.defaults = {\n  /**\n   * Customizable container template. Add your own classes for styling and sizing.\n   * @option\n   * @example '&lt;div data-sticky-container class=\"small-6 columns\"&gt;&lt;/div&gt;'\n   */\n  container: '<div data-sticky-container></div>',\n  /**\n   * Location in the view the element sticks to.\n   * @option\n   * @example 'top'\n   */\n  stickTo: 'top',\n  /**\n   * If anchored to a single element, the id of that element.\n   * @option\n   * @example 'exampleId'\n   */\n  anchor: '',\n  /**\n   * If using more than one element as anchor points, the id of the top anchor.\n   * @option\n   * @example 'exampleId:top'\n   */\n  topAnchor: '',\n  /**\n   * If using more than one element as anchor points, the id of the bottom anchor.\n   * @option\n   * @example 'exampleId:bottom'\n   */\n  btmAnchor: '',\n  /**\n   * Margin, in `em`'s to apply to the top of the element when it becomes sticky.\n   * @option\n   * @example 1\n   */\n  marginTop: 1,\n  /**\n   * Margin, in `em`'s to apply to the bottom of the element when it becomes sticky.\n   * @option\n   * @example 1\n   */\n  marginBottom: 1,\n  /**\n   * Breakpoint string that is the minimum screen size an element should become sticky.\n   * @option\n   * @example 'medium'\n   */\n  stickyOn: 'medium',\n  /**\n   * Class applied to sticky element, and removed on destruction. Foundation defaults to `sticky`.\n   * @option\n   * @example 'sticky'\n   */\n  stickyClass: 'sticky',\n  /**\n   * Class applied to sticky container. Foundation defaults to `sticky-container`.\n   * @option\n   * @example 'sticky-container'\n   */\n  containerClass: 'sticky-container',\n  /**\n   * Number of scroll events between the plugin's recalculating sticky points. Setting it to `0` will cause it to recalc every scroll event, setting it to `-1` will prevent recalc on scroll.\n   * @option\n   * @example 50\n   */\n  checkEvery: -1\n};\n\n/**\n * Helper function to calculate em values\n * @param Number {em} - number of em's to calculate into pixels\n */\nfunction emCalc(em) {\n  return parseInt(window.getComputedStyle(document.body, null).fontSize, 10) * em;\n}\n\n// Window exports\nFoundation.plugin(Sticky, 'Sticky');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Tabs module.\n * @module foundation.tabs\n * @requires foundation.util.keyboard\n * @requires foundation.util.timerAndImageLoader if tabs contain images\n */\n\nclass Tabs {\n  /**\n   * Creates a new instance of tabs.\n   * @class\n   * @fires Tabs#init\n   * @param {jQuery} element - jQuery object to make into tabs.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\n\n    this._init();\n    Foundation.registerPlugin(this, 'Tabs');\n    Foundation.Keyboard.register('Tabs', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ARROW_RIGHT': 'next',\n      'ARROW_UP': 'previous',\n      'ARROW_DOWN': 'next',\n      'ARROW_LEFT': 'previous'\n      // 'TAB': 'next',\n      // 'SHIFT_TAB': 'previous'\n    });\n  }\n\n  /**\n   * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\n   * @private\n   */\n  _init() {\n    var _this = this;\n\n    this.$tabTitles = this.$element.find(`.${this.options.linkClass}`);\n    this.$tabContent = $(`[data-tabs-content=\"${this.$element[0].id}\"]`);\n\n    this.$tabTitles.each(function(){\n      var $elem = $(this),\n          $link = $elem.find('a'),\n          isActive = $elem.hasClass('is-active'),\n          hash = $link[0].hash.slice(1),\n          linkId = $link[0].id ? $link[0].id : `${hash}-label`,\n          $tabContent = $(`#${hash}`);\n\n      $elem.attr({'role': 'presentation'});\n\n      $link.attr({\n        'role': 'tab',\n        'aria-controls': hash,\n        'aria-selected': isActive,\n        'id': linkId\n      });\n\n      $tabContent.attr({\n        'role': 'tabpanel',\n        'aria-hidden': !isActive,\n        'aria-labelledby': linkId\n      });\n\n      if(isActive && _this.options.autoFocus){\n        $link.focus();\n      }\n    });\n\n    if(this.options.matchHeight) {\n      var $images = this.$tabContent.find('img');\n\n      if ($images.length) {\n        Foundation.onImagesLoaded($images, this._setHeight.bind(this));\n      } else {\n        this._setHeight();\n      }\n    }\n\n    this._events();\n  }\n\n  /**\n   * Adds event handlers for items within the tabs.\n   * @private\n   */\n  _events() {\n    this._addKeyHandler();\n    this._addClickHandler();\n\n    if (this.options.matchHeight) {\n      $(window).on('changed.zf.mediaquery', this._setHeight.bind(this));\n    }\n  }\n\n  /**\n   * Adds click handlers for items within the tabs.\n   * @private\n   */\n  _addClickHandler() {\n    var _this = this;\n\n    this.$element\n      .off('click.zf.tabs')\n      .on('click.zf.tabs', `.${this.options.linkClass}`, function(e){\n        e.preventDefault();\n        e.stopPropagation();\n        if ($(this).hasClass('is-active')) {\n          return;\n        }\n        _this._handleTabChange($(this));\n      });\n  }\n\n  /**\n   * Adds keyboard event handlers for items within the tabs.\n   * @private\n   */\n  _addKeyHandler() {\n    var _this = this;\n    var $firstTab = _this.$element.find('li:first-of-type');\n    var $lastTab = _this.$element.find('li:last-of-type');\n\n    this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function(e){\n      if (e.which === 9) return;\n      e.stopPropagation();\n      e.preventDefault();\n\n      var $element = $(this),\n        $elements = $element.parent('ul').children('li'),\n        $prevElement,\n        $nextElement;\n\n      $elements.each(function(i) {\n        if ($(this).is($element)) {\n          if (_this.options.wrapOnKeys) {\n            $prevElement = i === 0 ? $elements.last() : $elements.eq(i-1);\n            $nextElement = i === $elements.length -1 ? $elements.first() : $elements.eq(i+1);\n          } else {\n            $prevElement = $elements.eq(Math.max(0, i-1));\n            $nextElement = $elements.eq(Math.min(i+1, $elements.length-1));\n          }\n          return;\n        }\n      });\n\n      // handle keyboard event with keyboard util\n      Foundation.Keyboard.handleKey(e, 'Tabs', {\n        open: function() {\n          $element.find('[role=\"tab\"]').focus();\n          _this._handleTabChange($element);\n        },\n        previous: function() {\n          $prevElement.find('[role=\"tab\"]').focus();\n          _this._handleTabChange($prevElement);\n        },\n        next: function() {\n          $nextElement.find('[role=\"tab\"]').focus();\n          _this._handleTabChange($nextElement);\n        }\n      });\n    });\n  }\n\n  /**\n   * Opens the tab `$targetContent` defined by `$target`.\n   * @param {jQuery} $target - Tab to open.\n   * @fires Tabs#change\n   * @function\n   */\n  _handleTabChange($target) {\n    var $tabLink = $target.find('[role=\"tab\"]'),\n        hash = $tabLink[0].hash,\n        $targetContent = this.$tabContent.find(hash),\n        $oldTab = this.$element.\n          find(`.${this.options.linkClass}.is-active`)\n          .removeClass('is-active')\n          .find('[role=\"tab\"]')\n          .attr({ 'aria-selected': 'false' });\n\n    $(`#${$oldTab.attr('aria-controls')}`)\n      .removeClass('is-active')\n      .attr({ 'aria-hidden': 'true' });\n\n    $target.addClass('is-active');\n\n    $tabLink.attr({'aria-selected': 'true'});\n\n    $targetContent\n      .addClass('is-active')\n      .attr({'aria-hidden': 'false'});\n\n    /**\n     * Fires when the plugin has successfully changed tabs.\n     * @event Tabs#change\n     */\n    this.$element.trigger('change.zf.tabs', [$target]);\n  }\n\n  /**\n   * Public method for selecting a content pane to display.\n   * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\n   * @function\n   */\n  selectTab(elem) {\n    var idStr;\n\n    if (typeof elem === 'object') {\n      idStr = elem[0].id;\n    } else {\n      idStr = elem;\n    }\n\n    if (idStr.indexOf('#') < 0) {\n      idStr = `#${idStr}`;\n    }\n\n    var $target = this.$tabTitles.find(`[href=\"${idStr}\"]`).parent(`.${this.options.linkClass}`);\n\n    this._handleTabChange($target);\n  };\n  /**\n   * Sets the height of each panel to the height of the tallest panel.\n   * If enabled in options, gets called on media query change.\n   * If loading content via external source, can be called directly or with _reflow.\n   * @function\n   * @private\n   */\n  _setHeight() {\n    var max = 0;\n    this.$tabContent\n      .find(`.${this.options.panelClass}`)\n      .css('height', '')\n      .each(function() {\n        var panel = $(this),\n            isActive = panel.hasClass('is-active');\n\n        if (!isActive) {\n          panel.css({'visibility': 'hidden', 'display': 'block'});\n        }\n\n        var temp = this.getBoundingClientRect().height;\n\n        if (!isActive) {\n          panel.css({\n            'visibility': '',\n            'display': ''\n          });\n        }\n\n        max = temp > max ? temp : max;\n      })\n      .css('height', `${max}px`);\n  }\n\n  /**\n   * Destroys an instance of an tabs.\n   * @fires Tabs#destroyed\n   */\n  destroy() {\n    this.$element\n      .find(`.${this.options.linkClass}`)\n      .off('.zf.tabs').hide().end()\n      .find(`.${this.options.panelClass}`)\n      .hide();\n\n    if (this.options.matchHeight) {\n      $(window).off('changed.zf.mediaquery');\n    }\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nTabs.defaults = {\n  /**\n   * Allows the window to scroll to content of active pane on load if set to true.\n   * @option\n   * @example false\n   */\n  autoFocus: false,\n\n  /**\n   * Allows keyboard input to 'wrap' around the tab links.\n   * @option\n   * @example true\n   */\n  wrapOnKeys: true,\n\n  /**\n   * Allows the tab content panes to match heights if set to true.\n   * @option\n   * @example false\n   */\n  matchHeight: false,\n\n  /**\n   * Class applied to `li`'s in tab link list.\n   * @option\n   * @example 'tabs-title'\n   */\n  linkClass: 'tabs-title',\n\n  /**\n   * Class applied to the content containers.\n   * @option\n   * @example 'tabs-panel'\n   */\n  panelClass: 'tabs-panel'\n};\n\nfunction checkClass($elem){\n  return $elem.hasClass('is-active');\n}\n\n// Window exports\nFoundation.plugin(Tabs, 'Tabs');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Toggler module.\n * @module foundation.toggler\n * @requires foundation.util.motion\n * @requires foundation.util.triggers\n */\n\nclass Toggler {\n  /**\n   * Creates a new instance of Toggler.\n   * @class\n   * @fires Toggler#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Toggler.defaults, element.data(), options);\n    this.className = '';\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this, 'Toggler');\n  }\n\n  /**\n   * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\n   * @function\n   * @private\n   */\n  _init() {\n    var input;\n    // Parse animation classes if they were set\n    if (this.options.animate) {\n      input = this.options.animate.split(' ');\n\n      this.animationIn = input[0];\n      this.animationOut = input[1] || null;\n    }\n    // Otherwise, parse toggle class\n    else {\n      input = this.$element.data('toggler');\n      // Allow for a . at the beginning of the string\n      this.className = input[0] === '.' ? input.slice(1) : input;\n    }\n\n    // Add ARIA attributes to triggers\n    var id = this.$element[0].id;\n    $(`[data-open=\"${id}\"], [data-close=\"${id}\"], [data-toggle=\"${id}\"]`)\n      .attr('aria-controls', id);\n    // If the target is hidden, add aria-hidden\n    this.$element.attr('aria-expanded', this.$element.is(':hidden') ? false : true);\n  }\n\n  /**\n   * Initializes events for the toggle trigger.\n   * @function\n   * @private\n   */\n  _events() {\n    this.$element.off('toggle.zf.trigger').on('toggle.zf.trigger', this.toggle.bind(this));\n  }\n\n  /**\n   * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\n   * @function\n   * @fires Toggler#on\n   * @fires Toggler#off\n   */\n  toggle() {\n    this[ this.options.animate ? '_toggleAnimate' : '_toggleClass']();\n  }\n\n  _toggleClass() {\n    this.$element.toggleClass(this.className);\n\n    var isOn = this.$element.hasClass(this.className);\n    if (isOn) {\n      /**\n       * Fires if the target element has the class after a toggle.\n       * @event Toggler#on\n       */\n      this.$element.trigger('on.zf.toggler');\n    }\n    else {\n      /**\n       * Fires if the target element does not have the class after a toggle.\n       * @event Toggler#off\n       */\n      this.$element.trigger('off.zf.toggler');\n    }\n\n    this._updateARIA(isOn);\n  }\n\n  _toggleAnimate() {\n    var _this = this;\n\n    if (this.$element.is(':hidden')) {\n      Foundation.Motion.animateIn(this.$element, this.animationIn, function() {\n        this.trigger('on.zf.toggler');\n        _this._updateARIA(true);\n      });\n    }\n    else {\n      Foundation.Motion.animateOut(this.$element, this.animationOut, function() {\n        this.trigger('off.zf.toggler');\n        _this._updateARIA(false);\n      });\n    }\n  }\n\n  _updateARIA(isOn) {\n    this.$element.attr('aria-expanded', isOn ? true : false);\n  }\n\n  /**\n   * Destroys the instance of Toggler on the element.\n   * @function\n   */\n  destroy() {\n    this.$element.off('.zf.toggler');\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nToggler.defaults = {\n  /**\n   * Tells the plugin if the element should animated when toggled.\n   * @option\n   * @example false\n   */\n  animate: false\n};\n\n// Window exports\nFoundation.plugin(Toggler, 'Toggler');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Tooltip module.\n * @module foundation.tooltip\n * @requires foundation.util.box\n * @requires foundation.util.triggers\n */\n\nclass Tooltip {\n  /**\n   * Creates a new instance of a Tooltip.\n   * @class\n   * @fires Tooltip#init\n   * @param {jQuery} element - jQuery object to attach a tooltip to.\n   * @param {Object} options - object to extend the default configuration.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Tooltip.defaults, this.$element.data(), options);\n\n    this.isActive = false;\n    this.isClick = false;\n    this._init();\n\n    Foundation.registerPlugin(this, 'Tooltip');\n  }\n\n  /**\n   * Initializes the tooltip by setting the creating the tip element, adding it's text, setting private variables and setting attributes on the anchor.\n   * @private\n   */\n  _init() {\n    var elemId = this.$element.attr('aria-describedby') || Foundation.GetYoDigits(6, 'tooltip');\n\n    this.options.positionClass = this._getPositionClass(this.$element);\n    this.options.tipText = this.options.tipText || this.$element.attr('title');\n    this.template = this.options.template ? $(this.options.template) : this._buildTemplate(elemId);\n\n    this.template.appendTo(document.body)\n        .text(this.options.tipText)\n        .hide();\n\n    this.$element.attr({\n      'title': '',\n      'aria-describedby': elemId,\n      'data-yeti-box': elemId,\n      'data-toggle': elemId,\n      'data-resize': elemId\n    }).addClass(this.triggerClass);\n\n    //helper variables to track movement on collisions\n    this.usedPositions = [];\n    this.counter = 4;\n    this.classChanged = false;\n\n    this._events();\n  }\n\n  /**\n   * Grabs the current positioning class, if present, and returns the value or an empty string.\n   * @private\n   */\n  _getPositionClass(element) {\n    if (!element) { return ''; }\n    // var position = element.attr('class').match(/top|left|right/g);\n    var position = element[0].className.match(/\\b(top|left|right)\\b/g);\n        position = position ? position[0] : '';\n    return position;\n  };\n  /**\n   * builds the tooltip element, adds attributes, and returns the template.\n   * @private\n   */\n  _buildTemplate(id) {\n    var templateClasses = (`${this.options.tooltipClass} ${this.options.positionClass} ${this.options.templateClasses}`).trim();\n    var $template =  $('<div></div>').addClass(templateClasses).attr({\n      'role': 'tooltip',\n      'aria-hidden': true,\n      'data-is-active': false,\n      'data-is-focus': false,\n      'id': id\n    });\n    return $template;\n  }\n\n  /**\n   * Function that gets called if a collision event is detected.\n   * @param {String} position - positioning class to try\n   * @private\n   */\n  _reposition(position) {\n    this.usedPositions.push(position ? position : 'bottom');\n\n    //default, try switching to opposite side\n    if (!position && (this.usedPositions.indexOf('top') < 0)) {\n      this.template.addClass('top');\n    } else if (position === 'top' && (this.usedPositions.indexOf('bottom') < 0)) {\n      this.template.removeClass(position);\n    } else if (position === 'left' && (this.usedPositions.indexOf('right') < 0)) {\n      this.template.removeClass(position)\n          .addClass('right');\n    } else if (position === 'right' && (this.usedPositions.indexOf('left') < 0)) {\n      this.template.removeClass(position)\n          .addClass('left');\n    }\n\n    //if default change didn't work, try bottom or left first\n    else if (!position && (this.usedPositions.indexOf('top') > -1) && (this.usedPositions.indexOf('left') < 0)) {\n      this.template.addClass('left');\n    } else if (position === 'top' && (this.usedPositions.indexOf('bottom') > -1) && (this.usedPositions.indexOf('left') < 0)) {\n      this.template.removeClass(position)\n          .addClass('left');\n    } else if (position === 'left' && (this.usedPositions.indexOf('right') > -1) && (this.usedPositions.indexOf('bottom') < 0)) {\n      this.template.removeClass(position);\n    } else if (position === 'right' && (this.usedPositions.indexOf('left') > -1) && (this.usedPositions.indexOf('bottom') < 0)) {\n      this.template.removeClass(position);\n    }\n    //if nothing cleared, set to bottom\n    else {\n      this.template.removeClass(position);\n    }\n    this.classChanged = true;\n    this.counter--;\n  }\n\n  /**\n   * sets the position class of an element and recursively calls itself until there are no more possible positions to attempt, or the tooltip element is no longer colliding.\n   * if the tooltip is larger than the screen width, default to full width - any user selected margin\n   * @private\n   */\n  _setPosition() {\n    var position = this._getPositionClass(this.template),\n        $tipDims = Foundation.Box.GetDimensions(this.template),\n        $anchorDims = Foundation.Box.GetDimensions(this.$element),\n        direction = (position === 'left' ? 'left' : ((position === 'right') ? 'left' : 'top')),\n        param = (direction === 'top') ? 'height' : 'width',\n        offset = (param === 'height') ? this.options.vOffset : this.options.hOffset,\n        _this = this;\n\n    if (($tipDims.width >= $tipDims.windowDims.width) || (!this.counter && !Foundation.Box.ImNotTouchingYou(this.template))) {\n      this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n      // this.$element.offset(Foundation.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n        'width': $anchorDims.windowDims.width - (this.options.hOffset * 2),\n        'height': 'auto'\n      });\n      return false;\n    }\n\n    this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element,'center ' + (position || 'bottom'), this.options.vOffset, this.options.hOffset));\n\n    while(!Foundation.Box.ImNotTouchingYou(this.template) && this.counter) {\n      this._reposition(position);\n      this._setPosition();\n    }\n  }\n\n  /**\n   * reveals the tooltip, and fires an event to close any other open tooltips on the page\n   * @fires Tooltip#closeme\n   * @fires Tooltip#show\n   * @function\n   */\n  show() {\n    if (this.options.showOn !== 'all' && !Foundation.MediaQuery.atLeast(this.options.showOn)) {\n      // console.error('The screen is too small to display this tooltip');\n      return false;\n    }\n\n    var _this = this;\n    this.template.css('visibility', 'hidden').show();\n    this._setPosition();\n\n    /**\n     * Fires to close all other open tooltips on the page\n     * @event Closeme#tooltip\n     */\n    this.$element.trigger('closeme.zf.tooltip', this.template.attr('id'));\n\n\n    this.template.attr({\n      'data-is-active': true,\n      'aria-hidden': false\n    });\n    _this.isActive = true;\n    // console.log(this.template);\n    this.template.stop().hide().css('visibility', '').fadeIn(this.options.fadeInDuration, function() {\n      //maybe do stuff?\n    });\n    /**\n     * Fires when the tooltip is shown\n     * @event Tooltip#show\n     */\n    this.$element.trigger('show.zf.tooltip');\n  }\n\n  /**\n   * Hides the current tooltip, and resets the positioning class if it was changed due to collision\n   * @fires Tooltip#hide\n   * @function\n   */\n  hide() {\n    // console.log('hiding', this.$element.data('yeti-box'));\n    var _this = this;\n    this.template.stop().attr({\n      'aria-hidden': true,\n      'data-is-active': false\n    }).fadeOut(this.options.fadeOutDuration, function() {\n      _this.isActive = false;\n      _this.isClick = false;\n      if (_this.classChanged) {\n        _this.template\n             .removeClass(_this._getPositionClass(_this.template))\n             .addClass(_this.options.positionClass);\n\n       _this.usedPositions = [];\n       _this.counter = 4;\n       _this.classChanged = false;\n      }\n    });\n    /**\n     * fires when the tooltip is hidden\n     * @event Tooltip#hide\n     */\n    this.$element.trigger('hide.zf.tooltip');\n  }\n\n  /**\n   * adds event listeners for the tooltip and its anchor\n   * TODO combine some of the listeners like focus and mouseenter, etc.\n   * @private\n   */\n  _events() {\n    var _this = this;\n    var $template = this.template;\n    var isFocus = false;\n\n    if (!this.options.disableHover) {\n\n      this.$element\n      .on('mouseenter.zf.tooltip', function(e) {\n        if (!_this.isActive) {\n          _this.timeout = setTimeout(function() {\n            _this.show();\n          }, _this.options.hoverDelay);\n        }\n      })\n      .on('mouseleave.zf.tooltip', function(e) {\n        clearTimeout(_this.timeout);\n        if (!isFocus || (!_this.isClick && _this.options.clickOpen)) {\n          _this.hide();\n        }\n      });\n    }\n\n    if (this.options.clickOpen) {\n      this.$element.on('mousedown.zf.tooltip', function(e) {\n        e.stopImmediatePropagation();\n        if (_this.isClick) {\n          _this.hide();\n          // _this.isClick = false;\n        } else {\n          _this.isClick = true;\n          if ((_this.options.disableHover || !_this.$element.attr('tabindex')) && !_this.isActive) {\n            _this.show();\n          }\n        }\n      });\n    }\n\n    if (!this.options.disableForTouch) {\n      this.$element\n      .on('tap.zf.tooltip touchend.zf.tooltip', function(e) {\n        _this.isActive ? _this.hide() : _this.show();\n      });\n    }\n\n    this.$element.on({\n      // 'toggle.zf.trigger': this.toggle.bind(this),\n      // 'close.zf.trigger': this.hide.bind(this)\n      'close.zf.trigger': this.hide.bind(this)\n    });\n\n    this.$element\n      .on('focus.zf.tooltip', function(e) {\n        isFocus = true;\n        // console.log(_this.isClick);\n        if (_this.isClick) {\n          return false;\n        } else {\n          // $(window)\n          _this.show();\n        }\n      })\n\n      .on('focusout.zf.tooltip', function(e) {\n        isFocus = false;\n        _this.isClick = false;\n        _this.hide();\n      })\n\n      .on('resizeme.zf.trigger', function() {\n        if (_this.isActive) {\n          _this._setPosition();\n        }\n      });\n  }\n\n  /**\n   * adds a toggle method, in addition to the static show() & hide() functions\n   * @function\n   */\n  toggle() {\n    if (this.isActive) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Destroys an instance of tooltip, removes template element from the view.\n   * @function\n   */\n  destroy() {\n    this.$element.attr('title', this.template.text())\n                 .off('.zf.trigger .zf.tootip')\n                //  .removeClass('has-tip')\n                 .removeAttr('aria-describedby')\n                 .removeAttr('data-yeti-box')\n                 .removeAttr('data-toggle')\n                 .removeAttr('data-resize');\n\n    this.template.remove();\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nTooltip.defaults = {\n  disableForTouch: false,\n  /**\n   * Time, in ms, before a tooltip should open on hover.\n   * @option\n   * @example 200\n   */\n  hoverDelay: 200,\n  /**\n   * Time, in ms, a tooltip should take to fade into view.\n   * @option\n   * @example 150\n   */\n  fadeInDuration: 150,\n  /**\n   * Time, in ms, a tooltip should take to fade out of view.\n   * @option\n   * @example 150\n   */\n  fadeOutDuration: 150,\n  /**\n   * Disables hover events from opening the tooltip if set to true\n   * @option\n   * @example false\n   */\n  disableHover: false,\n  /**\n   * Optional addtional classes to apply to the tooltip template on init.\n   * @option\n   * @example 'my-cool-tip-class'\n   */\n  templateClasses: '',\n  /**\n   * Non-optional class added to tooltip templates. Foundation default is 'tooltip'.\n   * @option\n   * @example 'tooltip'\n   */\n  tooltipClass: 'tooltip',\n  /**\n   * Class applied to the tooltip anchor element.\n   * @option\n   * @example 'has-tip'\n   */\n  triggerClass: 'has-tip',\n  /**\n   * Minimum breakpoint size at which to open the tooltip.\n   * @option\n   * @example 'small'\n   */\n  showOn: 'small',\n  /**\n   * Custom template to be used to generate markup for tooltip.\n   * @option\n   * @example '&lt;div class=\"tooltip\"&gt;&lt;/div&gt;'\n   */\n  template: '',\n  /**\n   * Text displayed in the tooltip template on open.\n   * @option\n   * @example 'Some cool space fact here.'\n   */\n  tipText: '',\n  touchCloseText: 'Tap to close.',\n  /**\n   * Allows the tooltip to remain open if triggered with a click or touch event.\n   * @option\n   * @example true\n   */\n  clickOpen: true,\n  /**\n   * Additional positioning classes, set by the JS\n   * @option\n   * @example 'top'\n   */\n  positionClass: '',\n  /**\n   * Distance, in pixels, the template should push away from the anchor on the Y axis.\n   * @option\n   * @example 10\n   */\n  vOffset: 10,\n  /**\n   * Distance, in pixels, the template should push away from the anchor on the X axis, if aligned to a side.\n   * @option\n   * @example 12\n   */\n  hOffset: 12\n};\n\n/**\n * TODO utilize resize event trigger\n */\n\n// Window exports\nFoundation.plugin(Tooltip, 'Tooltip');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\nFoundation.Box = {\n  ImNotTouchingYou: ImNotTouchingYou,\n  GetDimensions: GetDimensions,\n  GetOffsets: GetOffsets\n}\n\n/**\n * Compares the dimensions of an element to a container and determines collision events with container.\n * @function\n * @param {jQuery} element - jQuery object to test for collisions.\n * @param {jQuery} parent - jQuery object to use as bounding container.\n * @param {Boolean} lrOnly - set to true to check left and right values only.\n * @param {Boolean} tbOnly - set to true to check top and bottom values only.\n * @default if no parent object passed, detects collisions with `window`.\n * @returns {Boolean} - true if collision free, false if a collision in any direction.\n */\nfunction ImNotTouchingYou(element, parent, lrOnly, tbOnly) {\n  var eleDims = GetDimensions(element),\n      top, bottom, left, right;\n\n  if (parent) {\n    var parDims = GetDimensions(parent);\n\n    bottom = (eleDims.offset.top + eleDims.height <= parDims.height + parDims.offset.top);\n    top    = (eleDims.offset.top >= parDims.offset.top);\n    left   = (eleDims.offset.left >= parDims.offset.left);\n    right  = (eleDims.offset.left + eleDims.width <= parDims.width);\n  }\n  else {\n    bottom = (eleDims.offset.top + eleDims.height <= eleDims.windowDims.height + eleDims.windowDims.offset.top);\n    top    = (eleDims.offset.top >= eleDims.windowDims.offset.top);\n    left   = (eleDims.offset.left >= eleDims.windowDims.offset.left);\n    right  = (eleDims.offset.left + eleDims.width <= eleDims.windowDims.width);\n  }\n\n  var allDirs = [bottom, top, left, right];\n\n  if (lrOnly) {\n    return left === right === true;\n  }\n\n  if (tbOnly) {\n    return top === bottom === true;\n  }\n\n  return allDirs.indexOf(false) === -1;\n};\n\n/**\n * Uses native methods to return an object of dimension values.\n * @function\n * @param {jQuery || HTML} element - jQuery object or DOM element for which to get the dimensions. Can be any element other that document or window.\n * @returns {Object} - nested object of integer pixel values\n * TODO - if element is window, return only those values.\n */\nfunction GetDimensions(elem, test){\n  elem = elem.length ? elem[0] : elem;\n\n  if (elem === window || elem === document) {\n    throw new Error(\"I'm sorry, Dave. I'm afraid I can't do that.\");\n  }\n\n  var rect = elem.getBoundingClientRect(),\n      parRect = elem.parentNode.getBoundingClientRect(),\n      winRect = document.body.getBoundingClientRect(),\n      winY = window.pageYOffset,\n      winX = window.pageXOffset;\n\n  return {\n    width: rect.width,\n    height: rect.height,\n    offset: {\n      top: rect.top + winY,\n      left: rect.left + winX\n    },\n    parentDims: {\n      width: parRect.width,\n      height: parRect.height,\n      offset: {\n        top: parRect.top + winY,\n        left: parRect.left + winX\n      }\n    },\n    windowDims: {\n      width: winRect.width,\n      height: winRect.height,\n      offset: {\n        top: winY,\n        left: winX\n      }\n    }\n  }\n}\n\n/**\n * Returns an object of top and left integer pixel values for dynamically rendered elements,\n * such as: Tooltip, Reveal, and Dropdown\n * @function\n * @param {jQuery} element - jQuery object for the element being positioned.\n * @param {jQuery} anchor - jQuery object for the element's anchor point.\n * @param {String} position - a string relating to the desired position of the element, relative to it's anchor\n * @param {Number} vOffset - integer pixel value of desired vertical separation between anchor and element.\n * @param {Number} hOffset - integer pixel value of desired horizontal separation between anchor and element.\n * @param {Boolean} isOverflow - if a collision event is detected, sets to true to default the element to full width - any desired offset.\n * TODO alter/rewrite to work with `em` values as well/instead of pixels\n */\nfunction GetOffsets(element, anchor, position, vOffset, hOffset, isOverflow) {\n  var $eleDims = GetDimensions(element),\n      $anchorDims = anchor ? GetDimensions(anchor) : null;\n\n  switch (position) {\n    case 'top':\n      return {\n        left: (Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left),\n        top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n      }\n      break;\n    case 'left':\n      return {\n        left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n        top: $anchorDims.offset.top\n      }\n      break;\n    case 'right':\n      return {\n        left: $anchorDims.offset.left + $anchorDims.width + hOffset,\n        top: $anchorDims.offset.top\n      }\n      break;\n    case 'center top':\n      return {\n        left: ($anchorDims.offset.left + ($anchorDims.width / 2)) - ($eleDims.width / 2),\n        top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n      }\n      break;\n    case 'center bottom':\n      return {\n        left: isOverflow ? hOffset : (($anchorDims.offset.left + ($anchorDims.width / 2)) - ($eleDims.width / 2)),\n        top: $anchorDims.offset.top + $anchorDims.height + vOffset\n      }\n      break;\n    case 'center left':\n      return {\n        left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n        top: ($anchorDims.offset.top + ($anchorDims.height / 2)) - ($eleDims.height / 2)\n      }\n      break;\n    case 'center right':\n      return {\n        left: $anchorDims.offset.left + $anchorDims.width + hOffset + 1,\n        top: ($anchorDims.offset.top + ($anchorDims.height / 2)) - ($eleDims.height / 2)\n      }\n      break;\n    case 'center':\n      return {\n        left: ($eleDims.windowDims.offset.left + ($eleDims.windowDims.width / 2)) - ($eleDims.width / 2),\n        top: ($eleDims.windowDims.offset.top + ($eleDims.windowDims.height / 2)) - ($eleDims.height / 2)\n      }\n      break;\n    case 'reveal':\n      return {\n        left: ($eleDims.windowDims.width - $eleDims.width) / 2,\n        top: $eleDims.windowDims.offset.top + vOffset\n      }\n    case 'reveal full':\n      return {\n        left: $eleDims.windowDims.offset.left,\n        top: $eleDims.windowDims.offset.top\n      }\n      break;\n    default:\n      return {\n        left: (Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left),\n        top: $anchorDims.offset.top + $anchorDims.height + vOffset\n      }\n  }\n}\n\n}(jQuery);\n","/*******************************************\n *                                         *\n * This util was created by Marius Olbertz *\n * Please thank Marius on GitHub /owlbertz *\n * or the web http://www.mariusolbertz.de/ *\n *                                         *\n ******************************************/\n\n'use strict';\n\n!function($) {\n\nconst keyCodes = {\n  9: 'TAB',\n  13: 'ENTER',\n  27: 'ESCAPE',\n  32: 'SPACE',\n  37: 'ARROW_LEFT',\n  38: 'ARROW_UP',\n  39: 'ARROW_RIGHT',\n  40: 'ARROW_DOWN'\n}\n\nvar commands = {}\n\nvar Keyboard = {\n  keys: getKeyCodes(keyCodes),\n\n  /**\n   * Parses the (keyboard) event and returns a String that represents its key\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n   * @param {Event} event - the event generated by the event handler\n   * @return String key - String that represents the key pressed\n   */\n  parseKey(event) {\n    var key = keyCodes[event.which || event.keyCode] || String.fromCharCode(event.which).toUpperCase();\n    if (event.shiftKey) key = `SHIFT_${key}`;\n    if (event.ctrlKey) key = `CTRL_${key}`;\n    if (event.altKey) key = `ALT_${key}`;\n    return key;\n  },\n\n  /**\n   * Handles the given (keyboard) event\n   * @param {Event} event - the event generated by the event handler\n   * @param {String} component - Foundation component's name, e.g. Slider or Reveal\n   * @param {Objects} functions - collection of functions that are to be executed\n   */\n  handleKey(event, component, functions) {\n    var commandList = commands[component],\n      keyCode = this.parseKey(event),\n      cmds,\n      command,\n      fn;\n\n    if (!commandList) return console.warn('Component not defined!');\n\n    if (typeof commandList.ltr === 'undefined') { // this component does not differentiate between ltr and rtl\n        cmds = commandList; // use plain list\n    } else { // merge ltr and rtl: if document is rtl, rtl overwrites ltr and vice versa\n        if (Foundation.rtl()) cmds = $.extend({}, commandList.ltr, commandList.rtl);\n\n        else cmds = $.extend({}, commandList.rtl, commandList.ltr);\n    }\n    command = cmds[keyCode];\n\n    fn = functions[command];\n    if (fn && typeof fn === 'function') { // execute function  if exists\n      fn.apply();\n      if (functions.handled || typeof functions.handled === 'function') { // execute function when event was handled\n          functions.handled.apply();\n      }\n    } else {\n      if (functions.unhandled || typeof functions.unhandled === 'function') { // execute function when event was not handled\n          functions.unhandled.apply();\n      }\n    }\n  },\n\n  /**\n   * Finds all focusable elements within the given `$element`\n   * @param {jQuery} $element - jQuery object to search within\n   * @return {jQuery} $focusable - all focusable elements within `$element`\n   */\n  findFocusable($element) {\n    return $element.find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').filter(function() {\n      if (!$(this).is(':visible') || $(this).attr('tabindex') < 0) { return false; } //only have visible elements and those that have a tabindex greater or equal 0\n      return true;\n    });\n  },\n\n  /**\n   * Returns the component name name\n   * @param {Object} component - Foundation component, e.g. Slider or Reveal\n   * @return String componentName\n   */\n\n  register(componentName, cmds) {\n    commands[componentName] = cmds;\n  }\n}\n\n/*\n * Constants for easier comparing.\n * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n */\nfunction getKeyCodes(kcs) {\n  var k = {};\n  for (var kc in kcs) k[kcs[kc]] = kcs[kc];\n  return k;\n}\n\nFoundation.Keyboard = Keyboard;\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n// Default set of media queries\nconst defaultQueries = {\n  'default' : 'only screen',\n  landscape : 'only screen and (orientation: landscape)',\n  portrait : 'only screen and (orientation: portrait)',\n  retina : 'only screen and (-webkit-min-device-pixel-ratio: 2),' +\n    'only screen and (min--moz-device-pixel-ratio: 2),' +\n    'only screen and (-o-min-device-pixel-ratio: 2/1),' +\n    'only screen and (min-device-pixel-ratio: 2),' +\n    'only screen and (min-resolution: 192dpi),' +\n    'only screen and (min-resolution: 2dppx)'\n};\n\nvar MediaQuery = {\n  queries: [],\n\n  current: '',\n\n  /**\n   * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\n   * @function\n   * @private\n   */\n  _init() {\n    var self = this;\n    var extractedStyles = $('.foundation-mq').css('font-family');\n    var namedQueries;\n\n    namedQueries = parseStyleToObject(extractedStyles);\n\n    for (var key in namedQueries) {\n      self.queries.push({\n        name: key,\n        value: `only screen and (min-width: ${namedQueries[key]})`\n      });\n    }\n\n    this.current = this._getCurrentSize();\n\n    this._watcher();\n  },\n\n  /**\n   * Checks if the screen is at least as wide as a breakpoint.\n   * @function\n   * @param {String} size - Name of the breakpoint to check.\n   * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\n   */\n  atLeast(size) {\n    var query = this.get(size);\n\n    if (query) {\n      return window.matchMedia(query).matches;\n    }\n\n    return false;\n  },\n\n  /**\n   * Gets the media query of a breakpoint.\n   * @function\n   * @param {String} size - Name of the breakpoint to get.\n   * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\n   */\n  get(size) {\n    for (var i in this.queries) {\n      var query = this.queries[i];\n      if (size === query.name) return query.value;\n    }\n\n    return null;\n  },\n\n  /**\n   * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\n   * @function\n   * @private\n   * @returns {String} Name of the current breakpoint.\n   */\n  _getCurrentSize() {\n    var matched;\n\n    for (var i in this.queries) {\n      var query = this.queries[i];\n\n      if (window.matchMedia(query.value).matches) {\n        matched = query;\n      }\n    }\n\n    if (typeof matched === 'object') {\n      return matched.name;\n    } else {\n      return matched;\n    }\n  },\n\n  /**\n   * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\n   * @function\n   * @private\n   */\n  _watcher() {\n    $(window).on('resize.zf.mediaquery', () => {\n      var newSize = this._getCurrentSize();\n\n      if (newSize !== this.current) {\n        // Broadcast the media query change on the window\n        $(window).trigger('changed.zf.mediaquery', [newSize, this.current]);\n\n        // Change the current media query\n        this.current = newSize;\n      }\n    });\n  }\n};\n\nFoundation.MediaQuery = MediaQuery;\n\n// matchMedia() polyfill - Test a CSS media type/query in JS.\n// Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\nwindow.matchMedia || (window.matchMedia = function() {\n  'use strict';\n\n  // For browsers that support matchMedium api such as IE 9 and webkit\n  var styleMedia = (window.styleMedia || window.media);\n\n  // For those that don't support matchMedium\n  if (!styleMedia) {\n    var style   = document.createElement('style'),\n    script      = document.getElementsByTagName('script')[0],\n    info        = null;\n\n    style.type  = 'text/css';\n    style.id    = 'matchmediajs-test';\n\n    script.parentNode.insertBefore(style, script);\n\n    // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n    info = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;\n\n    styleMedia = {\n      matchMedium(media) {\n        var text = `@media ${media}{ #matchmediajs-test { width: 1px; } }`;\n\n        // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n        if (style.styleSheet) {\n          style.styleSheet.cssText = text;\n        } else {\n          style.textContent = text;\n        }\n\n        // Test if media query is true or false\n        return info.width === '1px';\n      }\n    }\n  }\n\n  return function(media) {\n    return {\n      matches: styleMedia.matchMedium(media || 'all'),\n      media: media || 'all'\n    };\n  }\n}());\n\n// Thank you: https://github.com/sindresorhus/query-string\nfunction parseStyleToObject(str) {\n  var styleObject = {};\n\n  if (typeof str !== 'string') {\n    return styleObject;\n  }\n\n  str = str.trim().slice(1, -1); // browsers re-quote string style values\n\n  if (!str) {\n    return styleObject;\n  }\n\n  styleObject = str.split('&').reduce(function(ret, param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = parts[0];\n    var val = parts[1];\n    key = decodeURIComponent(key);\n\n    // missing `=` should be `null`:\n    // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n    val = val === undefined ? null : decodeURIComponent(val);\n\n    if (!ret.hasOwnProperty(key)) {\n      ret[key] = val;\n    } else if (Array.isArray(ret[key])) {\n      ret[key].push(val);\n    } else {\n      ret[key] = [ret[key], val];\n    }\n    return ret;\n  }, {});\n\n  return styleObject;\n}\n\nFoundation.MediaQuery = MediaQuery;\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Motion module.\n * @module foundation.motion\n */\n\nconst initClasses   = ['mui-enter', 'mui-leave'];\nconst activeClasses = ['mui-enter-active', 'mui-leave-active'];\n\nconst Motion = {\n  animateIn: function(element, animation, cb) {\n    animate(true, element, animation, cb);\n  },\n\n  animateOut: function(element, animation, cb) {\n    animate(false, element, animation, cb);\n  }\n}\n\nfunction Move(duration, elem, fn){\n  var anim, prog, start = null;\n  // console.log('called');\n\n  function move(ts){\n    if(!start) start = window.performance.now();\n    // console.log(start, ts);\n    prog = ts - start;\n    fn.apply(elem);\n\n    if(prog < duration){ anim = window.requestAnimationFrame(move, elem); }\n    else{\n      window.cancelAnimationFrame(anim);\n      elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\n    }\n  }\n  anim = window.requestAnimationFrame(move);\n}\n\n/**\n * Animates an element in or out using a CSS transition class.\n * @function\n * @private\n * @param {Boolean} isIn - Defines if the animation is in or out.\n * @param {Object} element - jQuery or HTML object to animate.\n * @param {String} animation - CSS class to use.\n * @param {Function} cb - Callback to run when animation is finished.\n */\nfunction animate(isIn, element, animation, cb) {\n  element = $(element).eq(0);\n\n  if (!element.length) return;\n\n  var initClass = isIn ? initClasses[0] : initClasses[1];\n  var activeClass = isIn ? activeClasses[0] : activeClasses[1];\n\n  // Set up the animation\n  reset();\n\n  element\n    .addClass(animation)\n    .css('transition', 'none');\n\n  requestAnimationFrame(() => {\n    element.addClass(initClass);\n    if (isIn) element.show();\n  });\n\n  // Start the animation\n  requestAnimationFrame(() => {\n    element[0].offsetWidth;\n    element\n      .css('transition', '')\n      .addClass(activeClass);\n  });\n\n  // Clean up the animation when it finishes\n  element.one(Foundation.transitionend(element), finish);\n\n  // Hides the element (for out animations), resets the element, and runs a callback\n  function finish() {\n    if (!isIn) element.hide();\n    reset();\n    if (cb) cb.apply(element);\n  }\n\n  // Resets transitions and removes motion-specific classes\n  function reset() {\n    element[0].style.transitionDuration = 0;\n    element.removeClass(`${initClass} ${activeClass} ${animation}`);\n  }\n}\n\nFoundation.Move = Move;\nFoundation.Motion = Motion;\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\nconst Nest = {\n  Feather(menu, type = 'zf') {\n    menu.attr('role', 'menubar');\n\n    var items = menu.find('li').attr({'role': 'menuitem'}),\n        subMenuClass = `is-${type}-submenu`,\n        subItemClass = `${subMenuClass}-item`,\n        hasSubClass = `is-${type}-submenu-parent`;\n\n    menu.find('a:first').attr('tabindex', 0);\n\n    items.each(function() {\n      var $item = $(this),\n          $sub = $item.children('ul');\n\n      if ($sub.length) {\n        $item\n          .addClass(hasSubClass)\n          .attr({\n            'aria-haspopup': true,\n            'aria-expanded': false,\n            'aria-label': $item.children('a:first').text()\n          });\n\n        $sub\n          .addClass(`submenu ${subMenuClass}`)\n          .attr({\n            'data-submenu': '',\n            'aria-hidden': true,\n            'role': 'menu'\n          });\n      }\n\n      if ($item.parent('[data-submenu]').length) {\n        $item.addClass(`is-submenu-item ${subItemClass}`);\n      }\n    });\n\n    return;\n  },\n\n  Burn(menu, type) {\n    var items = menu.find('li').removeAttr('tabindex'),\n        subMenuClass = `is-${type}-submenu`,\n        subItemClass = `${subMenuClass}-item`,\n        hasSubClass = `is-${type}-submenu-parent`;\n\n    menu\n      .find('*')\n      .removeClass(`${subMenuClass} ${subItemClass} ${hasSubClass} is-submenu-item submenu is-active`)\n      .removeAttr('data-submenu').css('display', '');\n\n    // console.log(      menu.find('.' + subMenuClass + ', .' + subItemClass + ', .has-submenu, .is-submenu-item, .submenu, [data-submenu]')\n    //           .removeClass(subMenuClass + ' ' + subItemClass + ' has-submenu is-submenu-item submenu')\n    //           .removeAttr('data-submenu'));\n    // items.each(function(){\n    //   var $item = $(this),\n    //       $sub = $item.children('ul');\n    //   if($item.parent('[data-submenu]').length){\n    //     $item.removeClass('is-submenu-item ' + subItemClass);\n    //   }\n    //   if($sub.length){\n    //     $item.removeClass('has-submenu');\n    //     $sub.removeClass('submenu ' + subMenuClass).removeAttr('data-submenu');\n    //   }\n    // });\n  }\n}\n\nFoundation.Nest = Nest;\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\nfunction Timer(elem, options, cb) {\n  var _this = this,\n      duration = options.duration,//options is an object for easily adding features later.\n      nameSpace = Object.keys(elem.data())[0] || 'timer',\n      remain = -1,\n      start,\n      timer;\n\n  this.isPaused = false;\n\n  this.restart = function() {\n    remain = -1;\n    clearTimeout(timer);\n    this.start();\n  }\n\n  this.start = function() {\n    this.isPaused = false;\n    // if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n    clearTimeout(timer);\n    remain = remain <= 0 ? duration : remain;\n    elem.data('paused', false);\n    start = Date.now();\n    timer = setTimeout(function(){\n      if(options.infinite){\n        _this.restart();//rerun the timer.\n      }\n      cb();\n    }, remain);\n    elem.trigger(`timerstart.zf.${nameSpace}`);\n  }\n\n  this.pause = function() {\n    this.isPaused = true;\n    //if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n    clearTimeout(timer);\n    elem.data('paused', true);\n    var end = Date.now();\n    remain = remain - (end - start);\n    elem.trigger(`timerpaused.zf.${nameSpace}`);\n  }\n}\n\n/**\n * Runs a callback function when images are fully loaded.\n * @param {Object} images - Image(s) to check if loaded.\n * @param {Func} callback - Function to execute when image is fully loaded.\n */\nfunction onImagesLoaded(images, callback){\n  var self = this,\n      unloaded = images.length;\n\n  if (unloaded === 0) {\n    callback();\n  }\n\n  images.each(function() {\n    if (this.complete) {\n      singleImageLoaded();\n    }\n    else if (typeof this.naturalWidth !== 'undefined' && this.naturalWidth > 0) {\n      singleImageLoaded();\n    }\n    else {\n      $(this).one('load', function() {\n        singleImageLoaded();\n      });\n    }\n  });\n\n  function singleImageLoaded() {\n    unloaded--;\n    if (unloaded === 0) {\n      callback();\n    }\n  }\n}\n\nFoundation.Timer = Timer;\nFoundation.onImagesLoaded = onImagesLoaded;\n\n}(jQuery);\n","//**************************************************\n//**Work inspired by multiple jquery swipe plugins**\n//**Done by Yohai Ararat ***************************\n//**************************************************\n(function($) {\n\n  $.spotSwipe = {\n    version: '1.0.0',\n    enabled: 'ontouchstart' in document.documentElement,\n    preventDefault: false,\n    moveThreshold: 75,\n    timeThreshold: 200\n  };\n\n  var   startPosX,\n        startPosY,\n        startTime,\n        elapsedTime,\n        isMoving = false;\n\n  function onTouchEnd() {\n    //  alert(this);\n    this.removeEventListener('touchmove', onTouchMove);\n    this.removeEventListener('touchend', onTouchEnd);\n    isMoving = false;\n  }\n\n  function onTouchMove(e) {\n    if ($.spotSwipe.preventDefault) { e.preventDefault(); }\n    if(isMoving) {\n      var x = e.touches[0].pageX;\n      var y = e.touches[0].pageY;\n      var dx = startPosX - x;\n      var dy = startPosY - y;\n      var dir;\n      elapsedTime = new Date().getTime() - startTime;\n      if(Math.abs(dx) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n        dir = dx > 0 ? 'left' : 'right';\n      }\n      // else if(Math.abs(dy) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n      //   dir = dy > 0 ? 'down' : 'up';\n      // }\n      if(dir) {\n        e.preventDefault();\n        onTouchEnd.call(this);\n        $(this).trigger('swipe', dir).trigger(`swipe${dir}`);\n      }\n    }\n  }\n\n  function onTouchStart(e) {\n    if (e.touches.length == 1) {\n      startPosX = e.touches[0].pageX;\n      startPosY = e.touches[0].pageY;\n      isMoving = true;\n      startTime = new Date().getTime();\n      this.addEventListener('touchmove', onTouchMove, false);\n      this.addEventListener('touchend', onTouchEnd, false);\n    }\n  }\n\n  function init() {\n    this.addEventListener && this.addEventListener('touchstart', onTouchStart, false);\n  }\n\n  function teardown() {\n    this.removeEventListener('touchstart', onTouchStart);\n  }\n\n  $.event.special.swipe = { setup: init };\n\n  $.each(['left', 'up', 'down', 'right'], function () {\n    $.event.special[`swipe${this}`] = { setup: function(){\n      $(this).on('swipe', $.noop);\n    } };\n  });\n})(jQuery);\n/****************************************************\n * Method for adding psuedo drag events to elements *\n ***************************************************/\n!function($){\n  $.fn.addTouch = function(){\n    this.each(function(i,el){\n      $(el).bind('touchstart touchmove touchend touchcancel',function(){\n        //we pass the original event object because the jQuery event\n        //object is normalized to w3c specs and does not provide the TouchList\n        handleTouch(event);\n      });\n    });\n\n    var handleTouch = function(event){\n      var touches = event.changedTouches,\n          first = touches[0],\n          eventTypes = {\n            touchstart: 'mousedown',\n            touchmove: 'mousemove',\n            touchend: 'mouseup'\n          },\n          type = eventTypes[event.type],\n          simulatedEvent\n        ;\n\n      if('MouseEvent' in window && typeof window.MouseEvent === 'function') {\n        simulatedEvent = window.MouseEvent(type, {\n          'bubbles': true,\n          'cancelable': true,\n          'screenX': first.screenX,\n          'screenY': first.screenY,\n          'clientX': first.clientX,\n          'clientY': first.clientY\n        });\n      } else {\n        simulatedEvent = document.createEvent('MouseEvent');\n        simulatedEvent.initMouseEvent(type, true, true, window, 1, first.screenX, first.screenY, first.clientX, first.clientY, false, false, false, false, 0/*left*/, null);\n      }\n      first.target.dispatchEvent(simulatedEvent);\n    };\n  };\n}(jQuery);\n\n\n//**********************************\n//**From the jQuery Mobile Library**\n//**need to recreate functionality**\n//**and try to improve if possible**\n//**********************************\n\n/* Removing the jQuery function ****\n************************************\n\n(function( $, window, undefined ) {\n\n\tvar $document = $( document ),\n\t\t// supportTouch = $.mobile.support.touch,\n\t\ttouchStartEvent = 'touchstart'//supportTouch ? \"touchstart\" : \"mousedown\",\n\t\ttouchStopEvent = 'touchend'//supportTouch ? \"touchend\" : \"mouseup\",\n\t\ttouchMoveEvent = 'touchmove'//supportTouch ? \"touchmove\" : \"mousemove\";\n\n\t// setup new event shortcuts\n\t$.each( ( \"touchstart touchmove touchend \" +\n\t\t\"swipe swipeleft swiperight\" ).split( \" \" ), function( i, name ) {\n\n\t\t$.fn[ name ] = function( fn ) {\n\t\t\treturn fn ? this.bind( name, fn ) : this.trigger( name );\n\t\t};\n\n\t\t// jQuery < 1.8\n\t\tif ( $.attrFn ) {\n\t\t\t$.attrFn[ name ] = true;\n\t\t}\n\t});\n\n\tfunction triggerCustomEvent( obj, eventType, event, bubble ) {\n\t\tvar originalType = event.type;\n\t\tevent.type = eventType;\n\t\tif ( bubble ) {\n\t\t\t$.event.trigger( event, undefined, obj );\n\t\t} else {\n\t\t\t$.event.dispatch.call( obj, event );\n\t\t}\n\t\tevent.type = originalType;\n\t}\n\n\t// also handles taphold\n\n\t// Also handles swipeleft, swiperight\n\t$.event.special.swipe = {\n\n\t\t// More than this horizontal displacement, and we will suppress scrolling.\n\t\tscrollSupressionThreshold: 30,\n\n\t\t// More time than this, and it isn't a swipe.\n\t\tdurationThreshold: 1000,\n\n\t\t// Swipe horizontal displacement must be more than this.\n\t\thorizontalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\n\n\t\t// Swipe vertical displacement must be less than this.\n\t\tverticalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\n\n\t\tgetLocation: function ( event ) {\n\t\t\tvar winPageX = window.pageXOffset,\n\t\t\t\twinPageY = window.pageYOffset,\n\t\t\t\tx = event.clientX,\n\t\t\t\ty = event.clientY;\n\n\t\t\tif ( event.pageY === 0 && Math.floor( y ) > Math.floor( event.pageY ) ||\n\t\t\t\tevent.pageX === 0 && Math.floor( x ) > Math.floor( event.pageX ) ) {\n\n\t\t\t\t// iOS4 clientX/clientY have the value that should have been\n\t\t\t\t// in pageX/pageY. While pageX/page/ have the value 0\n\t\t\t\tx = x - winPageX;\n\t\t\t\ty = y - winPageY;\n\t\t\t} else if ( y < ( event.pageY - winPageY) || x < ( event.pageX - winPageX ) ) {\n\n\t\t\t\t// Some Android browsers have totally bogus values for clientX/Y\n\t\t\t\t// when scrolling/zooming a page. Detectable since clientX/clientY\n\t\t\t\t// should never be smaller than pageX/pageY minus page scroll\n\t\t\t\tx = event.pageX - winPageX;\n\t\t\t\ty = event.pageY - winPageY;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t},\n\n\t\tstart: function( event ) {\n\t\t\tvar data = event.originalEvent.touches ?\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\n\t\t\treturn {\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\n\t\t\t\t\t\tcoords: [ location.x, location.y ],\n\t\t\t\t\t\torigin: $( event.target )\n\t\t\t\t\t};\n\t\t},\n\n\t\tstop: function( event ) {\n\t\t\tvar data = event.originalEvent.touches ?\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\n\t\t\treturn {\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\n\t\t\t\t\t\tcoords: [ location.x, location.y ]\n\t\t\t\t\t};\n\t\t},\n\n\t\thandleSwipe: function( start, stop, thisObject, origTarget ) {\n\t\t\tif ( stop.time - start.time < $.event.special.swipe.durationThreshold &&\n\t\t\t\tMath.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.horizontalDistanceThreshold &&\n\t\t\t\tMath.abs( start.coords[ 1 ] - stop.coords[ 1 ] ) < $.event.special.swipe.verticalDistanceThreshold ) {\n\t\t\t\tvar direction = start.coords[0] > stop.coords[ 0 ] ? \"swipeleft\" : \"swiperight\";\n\n\t\t\t\ttriggerCustomEvent( thisObject, \"swipe\", $.Event( \"swipe\", { target: origTarget, swipestart: start, swipestop: stop }), true );\n\t\t\t\ttriggerCustomEvent( thisObject, direction,$.Event( direction, { target: origTarget, swipestart: start, swipestop: stop } ), true );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\n\t\t},\n\n\t\t// This serves as a flag to ensure that at most one swipe event event is\n\t\t// in work at any given time\n\t\teventInProgress: false,\n\n\t\tsetup: function() {\n\t\t\tvar events,\n\t\t\t\tthisObject = this,\n\t\t\t\t$this = $( thisObject ),\n\t\t\t\tcontext = {};\n\n\t\t\t// Retrieve the events data for this element and add the swipe context\n\t\t\tevents = $.data( this, \"mobile-events\" );\n\t\t\tif ( !events ) {\n\t\t\t\tevents = { length: 0 };\n\t\t\t\t$.data( this, \"mobile-events\", events );\n\t\t\t}\n\t\t\tevents.length++;\n\t\t\tevents.swipe = context;\n\n\t\t\tcontext.start = function( event ) {\n\n\t\t\t\t// Bail if we're already working on a swipe event\n\t\t\t\tif ( $.event.special.swipe.eventInProgress ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t$.event.special.swipe.eventInProgress = true;\n\n\t\t\t\tvar stop,\n\t\t\t\t\tstart = $.event.special.swipe.start( event ),\n\t\t\t\t\torigTarget = event.target,\n\t\t\t\t\temitted = false;\n\n\t\t\t\tcontext.move = function( event ) {\n\t\t\t\t\tif ( !start || event.isDefaultPrevented() ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstop = $.event.special.swipe.stop( event );\n\t\t\t\t\tif ( !emitted ) {\n\t\t\t\t\t\temitted = $.event.special.swipe.handleSwipe( start, stop, thisObject, origTarget );\n\t\t\t\t\t\tif ( emitted ) {\n\n\t\t\t\t\t\t\t// Reset the context to make way for the next swipe event\n\t\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// prevent scrolling\n\t\t\t\t\tif ( Math.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.scrollSupressionThreshold ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tcontext.stop = function() {\n\t\t\t\t\t\temitted = true;\n\n\t\t\t\t\t\t// Reset the context to make way for the next swipe event\n\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\n\t\t\t\t\t\t$document.off( touchMoveEvent, context.move );\n\t\t\t\t\t\tcontext.move = null;\n\t\t\t\t};\n\n\t\t\t\t$document.on( touchMoveEvent, context.move )\n\t\t\t\t\t.one( touchStopEvent, context.stop );\n\t\t\t};\n\t\t\t$this.on( touchStartEvent, context.start );\n\t\t},\n\n\t\tteardown: function() {\n\t\t\tvar events, context;\n\n\t\t\tevents = $.data( this, \"mobile-events\" );\n\t\t\tif ( events ) {\n\t\t\t\tcontext = events.swipe;\n\t\t\t\tdelete events.swipe;\n\t\t\t\tevents.length--;\n\t\t\t\tif ( events.length === 0 ) {\n\t\t\t\t\t$.removeData( this, \"mobile-events\" );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( context ) {\n\t\t\t\tif ( context.start ) {\n\t\t\t\t\t$( this ).off( touchStartEvent, context.start );\n\t\t\t\t}\n\t\t\t\tif ( context.move ) {\n\t\t\t\t\t$document.off( touchMoveEvent, context.move );\n\t\t\t\t}\n\t\t\t\tif ( context.stop ) {\n\t\t\t\t\t$document.off( touchStopEvent, context.stop );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t$.each({\n\t\tswipeleft: \"swipe.left\",\n\t\tswiperight: \"swipe.right\"\n\t}, function( event, sourceEvent ) {\n\n\t\t$.event.special[ event ] = {\n\t\t\tsetup: function() {\n\t\t\t\t$( this ).bind( sourceEvent, $.noop );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\t$( this ).unbind( sourceEvent );\n\t\t\t}\n\t\t};\n\t});\n})( jQuery, this );\n*/\n","'use strict';\n\n!function($) {\n\nconst MutationObserver = (function () {\n  var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n  for (var i=0; i < prefixes.length; i++) {\n    if (`${prefixes[i]}MutationObserver` in window) {\n      return window[`${prefixes[i]}MutationObserver`];\n    }\n  }\n  return false;\n}());\n\nconst triggers = (el, type) => {\n  el.data(type).split(' ').forEach(id => {\n    $(`#${id}`)[ type === 'close' ? 'trigger' : 'triggerHandler'](`${type}.zf.trigger`, [el]);\n  });\n};\n// Elements with [data-open] will reveal a plugin that supports it when clicked.\n$(document).on('click.zf.trigger', '[data-open]', function() {\n  triggers($(this), 'open');\n});\n\n// Elements with [data-close] will close a plugin that supports it when clicked.\n// If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\n$(document).on('click.zf.trigger', '[data-close]', function() {\n  let id = $(this).data('close');\n  if (id) {\n    triggers($(this), 'close');\n  }\n  else {\n    $(this).trigger('close.zf.trigger');\n  }\n});\n\n// Elements with [data-toggle] will toggle a plugin that supports it when clicked.\n$(document).on('click.zf.trigger', '[data-toggle]', function() {\n  triggers($(this), 'toggle');\n});\n\n// Elements with [data-closable] will respond to close.zf.trigger events.\n$(document).on('close.zf.trigger', '[data-closable]', function(e){\n  e.stopPropagation();\n  let animation = $(this).data('closable');\n\n  if(animation !== ''){\n    Foundation.Motion.animateOut($(this), animation, function() {\n      $(this).trigger('closed.zf');\n    });\n  }else{\n    $(this).fadeOut().trigger('closed.zf');\n  }\n});\n\n$(document).on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', function() {\n  let id = $(this).data('toggle-focus');\n  $(`#${id}`).triggerHandler('toggle.zf.trigger', [$(this)]);\n});\n\n/**\n* Fires once after all other scripts have loaded\n* @function\n* @private\n*/\n$(window).load(() => {\n  checkListeners();\n});\n\nfunction checkListeners() {\n  eventsListener();\n  resizeListener();\n  scrollListener();\n  closemeListener();\n}\n\n//******** only fires this function once on load, if there's something to watch ********\nfunction closemeListener(pluginName) {\n  var yetiBoxes = $('[data-yeti-box]'),\n      plugNames = ['dropdown', 'tooltip', 'reveal'];\n\n  if(pluginName){\n    if(typeof pluginName === 'string'){\n      plugNames.push(pluginName);\n    }else if(typeof pluginName === 'object' && typeof pluginName[0] === 'string'){\n      plugNames.concat(pluginName);\n    }else{\n      console.error('Plugin names must be strings');\n    }\n  }\n  if(yetiBoxes.length){\n    let listeners = plugNames.map((name) => {\n      return `closeme.zf.${name}`;\n    }).join(' ');\n\n    $(window).off(listeners).on(listeners, function(e, pluginId){\n      let plugin = e.namespace.split('.')[0];\n      let plugins = $(`[data-${plugin}]`).not(`[data-yeti-box=\"${pluginId}\"]`);\n\n      plugins.each(function(){\n        let _this = $(this);\n\n        _this.triggerHandler('close.zf.trigger', [_this]);\n      });\n    });\n  }\n}\n\nfunction resizeListener(debounce){\n  let timer,\n      $nodes = $('[data-resize]');\n  if($nodes.length){\n    $(window).off('resize.zf.trigger')\n    .on('resize.zf.trigger', function(e) {\n      if (timer) { clearTimeout(timer); }\n\n      timer = setTimeout(function(){\n\n        if(!MutationObserver){//fallback for IE 9\n          $nodes.each(function(){\n            $(this).triggerHandler('resizeme.zf.trigger');\n          });\n        }\n        //trigger all listening elements and signal a resize event\n        $nodes.attr('data-events', \"resize\");\n      }, debounce || 10);//default time to emit resize event\n    });\n  }\n}\n\nfunction scrollListener(debounce){\n  let timer,\n      $nodes = $('[data-scroll]');\n  if($nodes.length){\n    $(window).off('scroll.zf.trigger')\n    .on('scroll.zf.trigger', function(e){\n      if(timer){ clearTimeout(timer); }\n\n      timer = setTimeout(function(){\n\n        if(!MutationObserver){//fallback for IE 9\n          $nodes.each(function(){\n            $(this).triggerHandler('scrollme.zf.trigger');\n          });\n        }\n        //trigger all listening elements and signal a scroll event\n        $nodes.attr('data-events', \"scroll\");\n      }, debounce || 10);//default time to emit scroll event\n    });\n  }\n}\n\nfunction eventsListener() {\n  if(!MutationObserver){ return false; }\n  let nodes = document.querySelectorAll('[data-resize], [data-scroll], [data-mutate]');\n\n  //element callback\n  var listeningElementsMutation = function(mutationRecordsList) {\n    var $target = $(mutationRecordsList[0].target);\n    //trigger the event handler for the element depending on type\n    switch ($target.attr(\"data-events\")) {\n\n      case \"resize\" :\n      $target.triggerHandler('resizeme.zf.trigger', [$target]);\n      break;\n\n      case \"scroll\" :\n      $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\n      break;\n\n      // case \"mutate\" :\n      // console.log('mutate', $target);\n      // $target.triggerHandler('mutate.zf.trigger');\n      //\n      // //make sure we don't get stuck in an infinite loop from sloppy codeing\n      // if ($target.index('[data-mutate]') == $(\"[data-mutate]\").length-1) {\n      //   domMutationObserver();\n      // }\n      // break;\n\n      default :\n      return false;\n      //nothing\n    }\n  }\n\n  if(nodes.length){\n    //for each element that needs to listen for resizing, scrolling, (or coming soon mutation) add a single observer\n    for (var i = 0; i <= nodes.length-1; i++) {\n      let elementObserver = new MutationObserver(listeningElementsMutation);\n      elementObserver.observe(nodes[i], { attributes: true, childList: false, characterData: false, subtree:false, attributeFilter:[\"data-events\"]});\n    }\n  }\n}\n\n// ------------------------------------\n\n// [PH]\n// Foundation.CheckWatchers = checkWatchers;\nFoundation.IHearYou = checkListeners;\n// Foundation.ISeeYou = scrollListener;\n// Foundation.IFeelYou = closemeListener;\n\n}(jQuery);\n\n// function domMutationObserver(debounce) {\n//   // !!! This is coming soon and needs more work; not active  !!! //\n//   var timer,\n//   nodes = document.querySelectorAll('[data-mutate]');\n//   //\n//   if (nodes.length) {\n//     // var MutationObserver = (function () {\n//     //   var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n//     //   for (var i=0; i < prefixes.length; i++) {\n//     //     if (prefixes[i] + 'MutationObserver' in window) {\n//     //       return window[prefixes[i] + 'MutationObserver'];\n//     //     }\n//     //   }\n//     //   return false;\n//     // }());\n//\n//\n//     //for the body, we need to listen for all changes effecting the style and class attributes\n//     var bodyObserver = new MutationObserver(bodyMutation);\n//     bodyObserver.observe(document.body, { attributes: true, childList: true, characterData: false, subtree:true, attributeFilter:[\"style\", \"class\"]});\n//\n//\n//     //body callback\n//     function bodyMutation(mutate) {\n//       //trigger all listening elements and signal a mutation event\n//       if (timer) { clearTimeout(timer); }\n//\n//       timer = setTimeout(function() {\n//         bodyObserver.disconnect();\n//         $('[data-mutate]').attr('data-events',\"mutate\");\n//       }, debounce || 150);\n//     }\n//   }\n// }\n"],"sourceRoot":"/source/"}